

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Nov 11 17:27:31 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F18323 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   120                           PORTC equ 0Eh ;# 
   121  000E                     # 486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   122                           PIR0 equ 010h ;# 
   123  0010                     # 519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   124                           PIR1 equ 011h ;# 
   125  0011                     # 581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   126                           PIR2 equ 012h ;# 
   127  0012                     # 620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   128                           PIR3 equ 013h ;# 
   129  0013                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   130                           PIR4 equ 014h ;# 
   131  0014                     # 692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   132                           TMR0L equ 015h ;# 
   133  0015                     # 697 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   134                           TMR0 equ 015h ;# 
   135  0015                     # 830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   136                           TMR0H equ 016h ;# 
   137  0016                     # 835 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   138                           PR0 equ 016h ;# 
   139  0016                     # 1084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   140                           T0CON0 equ 017h ;# 
   141  0017                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   142                           T0CON1 equ 018h ;# 
   143  0018                     # 1226 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   144                           TMR1 equ 019h ;# 
   145  0019                     # 1233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   146                           TMR1L equ 019h ;# 
   147  0019                     # 1253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   148                           TMR1H equ 01Ah ;# 
   149  001A                     # 1273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   150                           T1CON equ 01Bh ;# 
   151  001B                     # 1345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   152                           T1GCON equ 01Ch ;# 
   153  001C                     # 1415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   154                           TMR2 equ 01Dh ;# 
   155  001D                     # 1435 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   156                           PR2 equ 01Eh ;# 
   157  001E                     # 1455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   158                           T2CON equ 01Fh ;# 
   159  001F                     # 1526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   160                           TRISA equ 08Ch ;# 
   161  008C                     # 1571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   162                           TRISC equ 08Eh ;# 
   163  008E                     # 1621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   164                           PIE0 equ 090h ;# 
   165  0090                     # 1654 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   166                           PIE1 equ 091h ;# 
   167  0091                     # 1716 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   168                           PIE2 equ 092h ;# 
   169  0092                     # 1755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   170                           PIE3 equ 093h ;# 
   171  0093                     # 1794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   172                           PIE4 equ 094h ;# 
   173  0094                     # 1827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   174                           WDTCON equ 097h ;# 
   175  0097                     # 1886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   176                           ADRES equ 09Bh ;# 
   177  009B                     # 1893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   178                           ADRESL equ 09Bh ;# 
   179  009B                     # 1913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   180                           ADRESH equ 09Ch ;# 
   181  009C                     # 1933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   182                           ADCON0 equ 09Dh ;# 
   183  009D                     # 2019 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   184                           ADCON1 equ 09Eh ;# 
   185  009E                     # 2091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   186                           ADACT equ 09Fh ;# 
   187  009F                     # 2137 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   188                           LATA equ 010Ch ;# 
   189  010C                     # 2182 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   190                           LATC equ 010Eh ;# 
   191  010E                     # 2232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   192                           CM1CON0 equ 0111h ;# 
   193  0111                     # 2284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   194                           CM1CON1 equ 0112h ;# 
   195  0112                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   196                           CM2CON0 equ 0113h ;# 
   197  0113                     # 2412 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   198                           CM2CON1 equ 0114h ;# 
   199  0114                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   200                           CMOUT equ 0115h ;# 
   201  0115                     # 2514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   202                           BORCON equ 0116h ;# 
   203  0116                     # 2541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   204                           FVRCON equ 0117h ;# 
   205  0117                     # 2617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   206                           DACCON0 equ 0118h ;# 
   207  0118                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   208                           DACCON1 equ 0119h ;# 
   209  0119                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   210                           ANSELA equ 018Ch ;# 
   211  018C                     # 2770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   212                           ANSELC equ 018Eh ;# 
   213  018E                     # 2820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   214                           VREGCON equ 0197h ;# 
   215  0197                     # 2841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   216                           RC1REG equ 0199h ;# 
   217  0199                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   218                           RCREG equ 0199h ;# 
   219  0199                     # 2850 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   220                           RCREG1 equ 0199h ;# 
   221  0199                     # 2895 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   222                           TX1REG equ 019Ah ;# 
   223  019A                     # 2900 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   224                           TXREG1 equ 019Ah ;# 
   225  019A                     # 2904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   226                           TXREG equ 019Ah ;# 
   227  019A                     # 2949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   228                           SP1BRG equ 019Bh ;# 
   229  019B                     # 2956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   230                           SP1BRGL equ 019Bh ;# 
   231  019B                     # 2961 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   232                           SPBRG equ 019Bh ;# 
   233  019B                     # 2965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   234                           SPBRG1 equ 019Bh ;# 
   235  019B                     # 2969 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   236                           SPBRGL equ 019Bh ;# 
   237  019B                     # 3026 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   238                           SP1BRGH equ 019Ch ;# 
   239  019C                     # 3031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   240                           SPBRGH equ 019Ch ;# 
   241  019C                     # 3035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   242                           SPBRGH1 equ 019Ch ;# 
   243  019C                     # 3080 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   244                           RC1STA equ 019Dh ;# 
   245  019D                     # 3085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   246                           RCSTA1 equ 019Dh ;# 
   247  019D                     # 3089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   248                           RCSTA equ 019Dh ;# 
   249  019D                     # 3260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   250                           TX1STA equ 019Eh ;# 
   251  019E                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   252                           TXSTA1 equ 019Eh ;# 
   253  019E                     # 3269 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   254                           TXSTA equ 019Eh ;# 
   255  019E                     # 3440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   256                           BAUD1CON equ 019Fh ;# 
   257  019F                     # 3445 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   258                           BAUDCON1 equ 019Fh ;# 
   259  019F                     # 3449 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   260                           BAUDCTL1 equ 019Fh ;# 
   261  019F                     # 3453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   262                           BAUDCON equ 019Fh ;# 
   263  019F                     # 3457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   264                           BAUDCTL equ 019Fh ;# 
   265  019F                     # 3686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   266                           WPUA equ 020Ch ;# 
   267  020C                     # 3736 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   268                           WPUC equ 020Eh ;# 
   269  020E                     # 3786 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   270                           SSP1BUF equ 0211h ;# 
   271  0211                     # 3791 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   272                           SSPBUF equ 0211h ;# 
   273  0211                     # 4040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   274                           SSP1ADD equ 0212h ;# 
   275  0212                     # 4045 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   276                           SSPADD equ 0212h ;# 
   277  0212                     # 4294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   278                           SSP1MSK equ 0213h ;# 
   279  0213                     # 4299 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   280                           SSPMSK equ 0213h ;# 
   281  0213                     # 4548 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   282                           SSP1STAT equ 0214h ;# 
   283  0214                     # 4553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   284                           SSPSTAT equ 0214h ;# 
   285  0214                     # 4670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   286                           SSP1CON1 equ 0215h ;# 
   287  0215                     # 4675 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   288                           SSPCON equ 0215h ;# 
   289  0215                     # 4679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   290                           SSPCON1 equ 0215h ;# 
   291  0215                     # 4683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   292                           SSP1CON equ 0215h ;# 
   293  0215                     # 4940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   294                           SSP1CON2 equ 0216h ;# 
   295  0216                     # 4945 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   296                           SSPCON2 equ 0216h ;# 
   297  0216                     # 5062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   298                           SSP1CON3 equ 0217h ;# 
   299  0217                     # 5067 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   300                           SSPCON3 equ 0217h ;# 
   301  0217                     # 5184 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   302                           ODCONA equ 028Ch ;# 
   303  028C                     # 5229 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   304                           ODCONC equ 028Eh ;# 
   305  028E                     # 5279 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   306                           CCPR1 equ 0291h ;# 
   307  0291                     # 5286 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   308                           CCPR1L equ 0291h ;# 
   309  0291                     # 5306 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   310                           CCPR1H equ 0292h ;# 
   311  0292                     # 5326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   312                           CCP1CON equ 0293h ;# 
   313  0293                     # 5391 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   314                           CCP1CAP equ 0294h ;# 
   315  0294                     # 5431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   316                           CCPR2 equ 0295h ;# 
   317  0295                     # 5438 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   318                           CCPR2L equ 0295h ;# 
   319  0295                     # 5458 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   320                           CCPR2H equ 0296h ;# 
   321  0296                     # 5478 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   322                           CCP2CON equ 0297h ;# 
   323  0297                     # 5543 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   324                           CCP2CAP equ 0298h ;# 
   325  0298                     # 5583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   326                           SLRCONA equ 030Ch ;# 
   327  030C                     # 5628 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   328                           SLRCONC equ 030Eh ;# 
   329  030E                     # 5678 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   330                           INLVLA equ 038Ch ;# 
   331  038C                     # 5728 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   332                           INLVLC equ 038Eh ;# 
   333  038E                     # 5778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   334                           IOCAP equ 0391h ;# 
   335  0391                     # 5828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   336                           IOCAN equ 0392h ;# 
   337  0392                     # 5878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   338                           IOCAF equ 0393h ;# 
   339  0393                     # 5928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   340                           IOCCP equ 0397h ;# 
   341  0397                     # 5978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   342                           IOCCN equ 0398h ;# 
   343  0398                     # 6028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   344                           IOCCF equ 0399h ;# 
   345  0399                     # 6078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   346                           CLKRCON equ 039Ah ;# 
   347  039A                     # 6143 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   348                           MDCON equ 039Ch ;# 
   349  039C                     # 6183 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   350                           MDSRC equ 039Dh ;# 
   351  039D                     # 6229 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   352                           MDCARH equ 039Eh ;# 
   353  039E                     # 6288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   354                           MDCARL equ 039Fh ;# 
   355  039F                     # 6349 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   356                           NCO1ACC equ 0498h ;# 
   357  0498                     # 6356 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   358                           NCO1ACCL equ 0498h ;# 
   359  0498                     # 6376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   360                           NCO1ACCH equ 0499h ;# 
   361  0499                     # 6396 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   362                           NCO1ACCU equ 049Ah ;# 
   363  049A                     # 6418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   364                           NCO1INC equ 049Bh ;# 
   365  049B                     # 6425 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   366                           NCO1INCL equ 049Bh ;# 
   367  049B                     # 6445 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   368                           NCO1INCH equ 049Ch ;# 
   369  049C                     # 6465 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   370                           NCO1INCU equ 049Dh ;# 
   371  049D                     # 6485 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   372                           NCO1CON equ 049Eh ;# 
   373  049E                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   374                           NCO1CLK equ 049Fh ;# 
   375  049F                     # 6552 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   376                           PWM5DCL equ 0617h ;# 
   377  0617                     # 6588 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   378                           PWM5DCH equ 0618h ;# 
   379  0618                     # 6658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   380                           PWM5CON equ 0619h ;# 
   381  0619                     # 6663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   382                           PWM5CON0 equ 0619h ;# 
   383  0619                     # 6724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   384                           PWM6DCL equ 061Ah ;# 
   385  061A                     # 6760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   386                           PWM6DCH equ 061Bh ;# 
   387  061B                     # 6830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   388                           PWM6CON equ 061Ch ;# 
   389  061C                     # 6835 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   390                           PWM6CON0 equ 061Ch ;# 
   391  061C                     # 6896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   392                           CWG1CLKCON equ 0691h ;# 
   393  0691                     # 6924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   394                           CWG1DAT equ 0692h ;# 
   395  0692                     # 6970 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   396                           CWG1DBR equ 0693h ;# 
   397  0693                     # 7074 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   398                           CWG1DBF equ 0694h ;# 
   399  0694                     # 7178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   400                           CWG1CON0 equ 0695h ;# 
   401  0695                     # 7279 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   402                           CWG1CON1 equ 0696h ;# 
   403  0696                     # 7357 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   404                           CWG1AS0 equ 0697h ;# 
   405  0697                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   406                           CWG1AS1 equ 0698h ;# 
   407  0698                     # 7515 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   408                           CWG1STR equ 0699h ;# 
   409  0699                     # 7627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   410                           NVMADR equ 0891h ;# 
   411  0891                     # 7632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   412                           EEADR equ 0891h ;# 
   413  0891                     # 7636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   414                           PMADR equ 0891h ;# 
   415  0891                     # 7643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   416                           NVMADRL equ 0891h ;# 
   417  0891                     # 7648 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   418                           EEADRL equ 0891h ;# 
   419  0891                     # 7652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   420                           PMADRL equ 0891h ;# 
   421  0891                     # 8045 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   422                           NVMADRH equ 0892h ;# 
   423  0892                     # 8050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   424                           EEADRH equ 0892h ;# 
   425  0892                     # 8054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   426                           PMADRH equ 0892h ;# 
   427  0892                     # 8411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   428                           NVMDAT equ 0893h ;# 
   429  0893                     # 8416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   430                           EEDAT equ 0893h ;# 
   431  0893                     # 8420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   432                           PMDAT equ 0893h ;# 
   433  0893                     # 8427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   434                           NVMDATL equ 0893h ;# 
   435  0893                     # 8432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   436                           EEDATL equ 0893h ;# 
   437  0893                     # 8436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   438                           PMDATL equ 0893h ;# 
   439  0893                     # 8679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   440                           NVMDATH equ 0894h ;# 
   441  0894                     # 8684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   442                           EEDATH equ 0894h ;# 
   443  0894                     # 8688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   444                           PMDATH equ 0894h ;# 
   445  0894                     # 8895 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   446                           NVMCON1 equ 0895h ;# 
   447  0895                     # 8900 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   448                           EECON1 equ 0895h ;# 
   449  0895                     # 8904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   450                           PMCON1 equ 0895h ;# 
   451  0895                     # 9084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   452                           NVMCON2 equ 0896h ;# 
   453  0896                     # 9089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   454                           EECON2 equ 0896h ;# 
   455  0896                     # 9093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   456                           PMCON2 equ 0896h ;# 
   457  0896                     # 9186 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   458                           PCON0 equ 089Bh ;# 
   459  089B                     # 9243 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   460                           PMD0 equ 0911h ;# 
   461  0911                     # 9288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   462                           PMD1 equ 0912h ;# 
   463  0912                     # 9327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   464                           PMD2 equ 0913h ;# 
   465  0913                     # 9367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   466                           PMD3 equ 0914h ;# 
   467  0914                     # 9412 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   468                           PMD4 equ 0915h ;# 
   469  0915                     # 9440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   470                           PMD5 equ 0916h ;# 
   471  0916                     # 9472 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   472                           CPUDOZE equ 0918h ;# 
   473  0918                     # 9537 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   474                           OSCCON1 equ 0919h ;# 
   475  0919                     # 9607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   476                           OSCCON2 equ 091Ah ;# 
   477  091A                     # 9677 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   478                           OSCCON3 equ 091Bh ;# 
   479  091B                     # 9722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   480                           OSCSTAT1 equ 091Ch ;# 
   481  091C                     # 9774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   482                           OSCEN equ 091Dh ;# 
   483  091D                     # 9820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   484                           OSCTUNE equ 091Eh ;# 
   485  091E                     # 9878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   486                           OSCFRQ equ 091Fh ;# 
   487  091F                     # 9924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   488                           PPSLOCK equ 0E0Fh ;# 
   489  0E0F                     # 9944 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   490                           INTPPS equ 0E10h ;# 
   491  0E10                     # 9996 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   492                           T0CKIPPS equ 0E11h ;# 
   493  0E11                     # 10048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   494                           T1CKIPPS equ 0E12h ;# 
   495  0E12                     # 10100 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   496                           T1GPPS equ 0E13h ;# 
   497  0E13                     # 10152 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   498                           CCP1PPS equ 0E14h ;# 
   499  0E14                     # 10204 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   500                           CCP2PPS equ 0E15h ;# 
   501  0E15                     # 10256 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   502                           CWG1PPS equ 0E18h ;# 
   503  0E18                     # 10308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   504                           MDCIN1PPS equ 0E1Ah ;# 
   505  0E1A                     # 10360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   506                           MDCIN2PPS equ 0E1Bh ;# 
   507  0E1B                     # 10412 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   508                           MDMINPPS equ 0E1Ch ;# 
   509  0E1C                     # 10464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   510                           SSP1CLKPPS equ 0E20h ;# 
   511  0E20                     # 10516 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   512                           SSP1DATPPS equ 0E21h ;# 
   513  0E21                     # 10568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   514                           SSP1SSPPS equ 0E22h ;# 
   515  0E22                     # 10620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   516                           RXPPS equ 0E24h ;# 
   517  0E24                     # 10672 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   518                           TXPPS equ 0E25h ;# 
   519  0E25                     # 10724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   520                           CLCIN0PPS equ 0E28h ;# 
   521  0E28                     # 10776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   522                           CLCIN1PPS equ 0E29h ;# 
   523  0E29                     # 10828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   524                           CLCIN2PPS equ 0E2Ah ;# 
   525  0E2A                     # 10880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   526                           CLCIN3PPS equ 0E2Bh ;# 
   527  0E2B                     # 10932 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   528                           RA0PPS equ 0E90h ;# 
   529  0E90                     # 10984 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   530                           RA1PPS equ 0E91h ;# 
   531  0E91                     # 11036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   532                           RA2PPS equ 0E92h ;# 
   533  0E92                     # 11088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   534                           RA4PPS equ 0E94h ;# 
   535  0E94                     # 11140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   536                           RA5PPS equ 0E95h ;# 
   537  0E95                     # 11192 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   538                           RC0PPS equ 0EA0h ;# 
   539  0EA0                     # 11244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   540                           RC1PPS equ 0EA1h ;# 
   541  0EA1                     # 11296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   542                           RC2PPS equ 0EA2h ;# 
   543  0EA2                     # 11348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   544                           RC3PPS equ 0EA3h ;# 
   545  0EA3                     # 11400 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   546                           RC4PPS equ 0EA4h ;# 
   547  0EA4                     # 11452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   548                           RC5PPS equ 0EA5h ;# 
   549  0EA5                     # 11504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   550                           CLCDATA equ 0F0Fh ;# 
   551  0F0F                     # 11530 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   552                           CLC1CON equ 0F10h ;# 
   553  0F10                     # 11648 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   554                           CLC1POL equ 0F11h ;# 
   555  0F11                     # 11726 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   556                           CLC1SEL0 equ 0F12h ;# 
   557  0F12                     # 11818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   558                           CLC1SEL1 equ 0F13h ;# 
   559  0F13                     # 11910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   560                           CLC1SEL2 equ 0F14h ;# 
   561  0F14                     # 12002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   562                           CLC1SEL3 equ 0F15h ;# 
   563  0F15                     # 12094 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   564                           CLC1GLS0 equ 0F16h ;# 
   565  0F16                     # 12206 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   566                           CLC1GLS1 equ 0F17h ;# 
   567  0F17                     # 12318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   568                           CLC1GLS2 equ 0F18h ;# 
   569  0F18                     # 12430 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   570                           CLC1GLS3 equ 0F19h ;# 
   571  0F19                     # 12542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   572                           CLC2CON equ 0F1Ah ;# 
   573  0F1A                     # 12660 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   574                           CLC2POL equ 0F1Bh ;# 
   575  0F1B                     # 12738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   576                           CLC2SEL0 equ 0F1Ch ;# 
   577  0F1C                     # 12830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   578                           CLC2SEL1 equ 0F1Dh ;# 
   579  0F1D                     # 12922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   580                           CLC2SEL2 equ 0F1Eh ;# 
   581  0F1E                     # 13014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   582                           CLC2SEL3 equ 0F1Fh ;# 
   583  0F1F                     # 13106 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   584                           CLC2GLS0 equ 0F20h ;# 
   585  0F20                     # 13218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   586                           CLC2GLS1 equ 0F21h ;# 
   587  0F21                     # 13330 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   588                           CLC2GLS2 equ 0F22h ;# 
   589  0F22                     # 13442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   590                           CLC2GLS3 equ 0F23h ;# 
   591  0F23                     # 13554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   592                           STATUS_SHAD equ 0FE4h ;# 
   593  0FE4                     # 13586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   594                           WREG_SHAD equ 0FE5h ;# 
   595  0FE5                     # 13606 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   596                           BSR_SHAD equ 0FE6h ;# 
   597  0FE6                     # 13626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   598                           PCLATH_SHAD equ 0FE7h ;# 
   599  0FE7                     # 13646 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   600                           FSR0L_SHAD equ 0FE8h ;# 
   601  0FE8                     # 13666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   602                           FSR0H_SHAD equ 0FE9h ;# 
   603  0FE9                     # 13686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   604                           FSR1L_SHAD equ 0FEAh ;# 
   605  0FEA                     # 13706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   606                           FSR1H_SHAD equ 0FEBh ;# 
   607  0FEB                     # 13726 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   608                           STKPTR equ 0FEDh ;# 
   609  0FED                     # 13746 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   610                           TOSL equ 0FEEh ;# 
   611  0FEE                     # 13766 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   612                           TOSH equ 0FEFh ;# 
   613  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   614                           INDF0 equ 00h ;# 
   615  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   616                           INDF1 equ 01h ;# 
   617  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   618                           PCL equ 02h ;# 
   619  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   620                           STATUS equ 03h ;# 
   621  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   622                           FSR0L equ 04h ;# 
   623  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   624                           FSR0H equ 05h ;# 
   625  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   626                           FSR1L equ 06h ;# 
   627  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   628                           FSR1H equ 07h ;# 
   629  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   630                           BSR equ 08h ;# 
   631  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   632                           WREG equ 09h ;# 
   633  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   634                           PCLATH equ 0Ah ;# 
   635  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   636                           INTCON equ 0Bh ;# 
   637  000B                     # 386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   638                           PORTA equ 0Ch ;# 
   639  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   640                           PORTC equ 0Eh ;# 
   641  000E                     # 486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   642                           PIR0 equ 010h ;# 
   643  0010                     # 519 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   644                           PIR1 equ 011h ;# 
   645  0011                     # 581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   646                           PIR2 equ 012h ;# 
   647  0012                     # 620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   648                           PIR3 equ 013h ;# 
   649  0013                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   650                           PIR4 equ 014h ;# 
   651  0014                     # 692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   652                           TMR0L equ 015h ;# 
   653  0015                     # 697 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   654                           TMR0 equ 015h ;# 
   655  0015                     # 830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   656                           TMR0H equ 016h ;# 
   657  0016                     # 835 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   658                           PR0 equ 016h ;# 
   659  0016                     # 1084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   660                           T0CON0 equ 017h ;# 
   661  0017                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   662                           T0CON1 equ 018h ;# 
   663  0018                     # 1226 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   664                           TMR1 equ 019h ;# 
   665  0019                     # 1233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   666                           TMR1L equ 019h ;# 
   667  0019                     # 1253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   668                           TMR1H equ 01Ah ;# 
   669  001A                     # 1273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   670                           T1CON equ 01Bh ;# 
   671  001B                     # 1345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   672                           T1GCON equ 01Ch ;# 
   673  001C                     # 1415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   674                           TMR2 equ 01Dh ;# 
   675  001D                     # 1435 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   676                           PR2 equ 01Eh ;# 
   677  001E                     # 1455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   678                           T2CON equ 01Fh ;# 
   679  001F                     # 1526 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   680                           TRISA equ 08Ch ;# 
   681  008C                     # 1571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   682                           TRISC equ 08Eh ;# 
   683  008E                     # 1621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   684                           PIE0 equ 090h ;# 
   685  0090                     # 1654 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   686                           PIE1 equ 091h ;# 
   687  0091                     # 1716 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   688                           PIE2 equ 092h ;# 
   689  0092                     # 1755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   690                           PIE3 equ 093h ;# 
   691  0093                     # 1794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   692                           PIE4 equ 094h ;# 
   693  0094                     # 1827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   694                           WDTCON equ 097h ;# 
   695  0097                     # 1886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   696                           ADRES equ 09Bh ;# 
   697  009B                     # 1893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   698                           ADRESL equ 09Bh ;# 
   699  009B                     # 1913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   700                           ADRESH equ 09Ch ;# 
   701  009C                     # 1933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   702                           ADCON0 equ 09Dh ;# 
   703  009D                     # 2019 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   704                           ADCON1 equ 09Eh ;# 
   705  009E                     # 2091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   706                           ADACT equ 09Fh ;# 
   707  009F                     # 2137 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   708                           LATA equ 010Ch ;# 
   709  010C                     # 2182 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   710                           LATC equ 010Eh ;# 
   711  010E                     # 2232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   712                           CM1CON0 equ 0111h ;# 
   713  0111                     # 2284 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   714                           CM1CON1 equ 0112h ;# 
   715  0112                     # 2360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   716                           CM2CON0 equ 0113h ;# 
   717  0113                     # 2412 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   718                           CM2CON1 equ 0114h ;# 
   719  0114                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   720                           CMOUT equ 0115h ;# 
   721  0115                     # 2514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   722                           BORCON equ 0116h ;# 
   723  0116                     # 2541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   724                           FVRCON equ 0117h ;# 
   725  0117                     # 2617 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   726                           DACCON0 equ 0118h ;# 
   727  0118                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   728                           DACCON1 equ 0119h ;# 
   729  0119                     # 2725 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   730                           ANSELA equ 018Ch ;# 
   731  018C                     # 2770 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   732                           ANSELC equ 018Eh ;# 
   733  018E                     # 2820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   734                           VREGCON equ 0197h ;# 
   735  0197                     # 2841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   736                           RC1REG equ 0199h ;# 
   737  0199                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   738                           RCREG equ 0199h ;# 
   739  0199                     # 2850 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   740                           RCREG1 equ 0199h ;# 
   741  0199                     # 2895 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   742                           TX1REG equ 019Ah ;# 
   743  019A                     # 2900 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   744                           TXREG1 equ 019Ah ;# 
   745  019A                     # 2904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   746                           TXREG equ 019Ah ;# 
   747  019A                     # 2949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   748                           SP1BRG equ 019Bh ;# 
   749  019B                     # 2956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   750                           SP1BRGL equ 019Bh ;# 
   751  019B                     # 2961 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   752                           SPBRG equ 019Bh ;# 
   753  019B                     # 2965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   754                           SPBRG1 equ 019Bh ;# 
   755  019B                     # 2969 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   756                           SPBRGL equ 019Bh ;# 
   757  019B                     # 3026 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   758                           SP1BRGH equ 019Ch ;# 
   759  019C                     # 3031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   760                           SPBRGH equ 019Ch ;# 
   761  019C                     # 3035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   762                           SPBRGH1 equ 019Ch ;# 
   763  019C                     # 3080 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   764                           RC1STA equ 019Dh ;# 
   765  019D                     # 3085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   766                           RCSTA1 equ 019Dh ;# 
   767  019D                     # 3089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   768                           RCSTA equ 019Dh ;# 
   769  019D                     # 3260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   770                           TX1STA equ 019Eh ;# 
   771  019E                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   772                           TXSTA1 equ 019Eh ;# 
   773  019E                     # 3269 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   774                           TXSTA equ 019Eh ;# 
   775  019E                     # 3440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   776                           BAUD1CON equ 019Fh ;# 
   777  019F                     # 3445 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   778                           BAUDCON1 equ 019Fh ;# 
   779  019F                     # 3449 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   780                           BAUDCTL1 equ 019Fh ;# 
   781  019F                     # 3453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   782                           BAUDCON equ 019Fh ;# 
   783  019F                     # 3457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   784                           BAUDCTL equ 019Fh ;# 
   785  019F                     # 3686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   786                           WPUA equ 020Ch ;# 
   787  020C                     # 3736 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   788                           WPUC equ 020Eh ;# 
   789  020E                     # 3786 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   790                           SSP1BUF equ 0211h ;# 
   791  0211                     # 3791 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   792                           SSPBUF equ 0211h ;# 
   793  0211                     # 4040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   794                           SSP1ADD equ 0212h ;# 
   795  0212                     # 4045 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   796                           SSPADD equ 0212h ;# 
   797  0212                     # 4294 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   798                           SSP1MSK equ 0213h ;# 
   799  0213                     # 4299 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   800                           SSPMSK equ 0213h ;# 
   801  0213                     # 4548 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   802                           SSP1STAT equ 0214h ;# 
   803  0214                     # 4553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   804                           SSPSTAT equ 0214h ;# 
   805  0214                     # 4670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   806                           SSP1CON1 equ 0215h ;# 
   807  0215                     # 4675 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   808                           SSPCON equ 0215h ;# 
   809  0215                     # 4679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   810                           SSPCON1 equ 0215h ;# 
   811  0215                     # 4683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   812                           SSP1CON equ 0215h ;# 
   813  0215                     # 4940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   814                           SSP1CON2 equ 0216h ;# 
   815  0216                     # 4945 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   816                           SSPCON2 equ 0216h ;# 
   817  0216                     # 5062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   818                           SSP1CON3 equ 0217h ;# 
   819  0217                     # 5067 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   820                           SSPCON3 equ 0217h ;# 
   821  0217                     # 5184 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   822                           ODCONA equ 028Ch ;# 
   823  028C                     # 5229 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   824                           ODCONC equ 028Eh ;# 
   825  028E                     # 5279 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   826                           CCPR1 equ 0291h ;# 
   827  0291                     # 5286 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   828                           CCPR1L equ 0291h ;# 
   829  0291                     # 5306 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   830                           CCPR1H equ 0292h ;# 
   831  0292                     # 5326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   832                           CCP1CON equ 0293h ;# 
   833  0293                     # 5391 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   834                           CCP1CAP equ 0294h ;# 
   835  0294                     # 5431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   836                           CCPR2 equ 0295h ;# 
   837  0295                     # 5438 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   838                           CCPR2L equ 0295h ;# 
   839  0295                     # 5458 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   840                           CCPR2H equ 0296h ;# 
   841  0296                     # 5478 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   842                           CCP2CON equ 0297h ;# 
   843  0297                     # 5543 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   844                           CCP2CAP equ 0298h ;# 
   845  0298                     # 5583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   846                           SLRCONA equ 030Ch ;# 
   847  030C                     # 5628 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   848                           SLRCONC equ 030Eh ;# 
   849  030E                     # 5678 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   850                           INLVLA equ 038Ch ;# 
   851  038C                     # 5728 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   852                           INLVLC equ 038Eh ;# 
   853  038E                     # 5778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   854                           IOCAP equ 0391h ;# 
   855  0391                     # 5828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   856                           IOCAN equ 0392h ;# 
   857  0392                     # 5878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   858                           IOCAF equ 0393h ;# 
   859  0393                     # 5928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   860                           IOCCP equ 0397h ;# 
   861  0397                     # 5978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   862                           IOCCN equ 0398h ;# 
   863  0398                     # 6028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   864                           IOCCF equ 0399h ;# 
   865  0399                     # 6078 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   866                           CLKRCON equ 039Ah ;# 
   867  039A                     # 6143 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   868                           MDCON equ 039Ch ;# 
   869  039C                     # 6183 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   870                           MDSRC equ 039Dh ;# 
   871  039D                     # 6229 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   872                           MDCARH equ 039Eh ;# 
   873  039E                     # 6288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   874                           MDCARL equ 039Fh ;# 
   875  039F                     # 6349 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   876                           NCO1ACC equ 0498h ;# 
   877  0498                     # 6356 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   878                           NCO1ACCL equ 0498h ;# 
   879  0498                     # 6376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   880                           NCO1ACCH equ 0499h ;# 
   881  0499                     # 6396 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   882                           NCO1ACCU equ 049Ah ;# 
   883  049A                     # 6418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   884                           NCO1INC equ 049Bh ;# 
   885  049B                     # 6425 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   886                           NCO1INCL equ 049Bh ;# 
   887  049B                     # 6445 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   888                           NCO1INCH equ 049Ch ;# 
   889  049C                     # 6465 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   890                           NCO1INCU equ 049Dh ;# 
   891  049D                     # 6485 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   892                           NCO1CON equ 049Eh ;# 
   893  049E                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   894                           NCO1CLK equ 049Fh ;# 
   895  049F                     # 6552 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   896                           PWM5DCL equ 0617h ;# 
   897  0617                     # 6588 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   898                           PWM5DCH equ 0618h ;# 
   899  0618                     # 6658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   900                           PWM5CON equ 0619h ;# 
   901  0619                     # 6663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   902                           PWM5CON0 equ 0619h ;# 
   903  0619                     # 6724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   904                           PWM6DCL equ 061Ah ;# 
   905  061A                     # 6760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   906                           PWM6DCH equ 061Bh ;# 
   907  061B                     # 6830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   908                           PWM6CON equ 061Ch ;# 
   909  061C                     # 6835 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   910                           PWM6CON0 equ 061Ch ;# 
   911  061C                     # 6896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   912                           CWG1CLKCON equ 0691h ;# 
   913  0691                     # 6924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   914                           CWG1DAT equ 0692h ;# 
   915  0692                     # 6970 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   916                           CWG1DBR equ 0693h ;# 
   917  0693                     # 7074 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   918                           CWG1DBF equ 0694h ;# 
   919  0694                     # 7178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   920                           CWG1CON0 equ 0695h ;# 
   921  0695                     # 7279 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   922                           CWG1CON1 equ 0696h ;# 
   923  0696                     # 7357 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   924                           CWG1AS0 equ 0697h ;# 
   925  0697                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   926                           CWG1AS1 equ 0698h ;# 
   927  0698                     # 7515 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   928                           CWG1STR equ 0699h ;# 
   929  0699                     # 7627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   930                           NVMADR equ 0891h ;# 
   931  0891                     # 7632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   932                           EEADR equ 0891h ;# 
   933  0891                     # 7636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   934                           PMADR equ 0891h ;# 
   935  0891                     # 7643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   936                           NVMADRL equ 0891h ;# 
   937  0891                     # 7648 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   938                           EEADRL equ 0891h ;# 
   939  0891                     # 7652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   940                           PMADRL equ 0891h ;# 
   941  0891                     # 8045 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   942                           NVMADRH equ 0892h ;# 
   943  0892                     # 8050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   944                           EEADRH equ 0892h ;# 
   945  0892                     # 8054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   946                           PMADRH equ 0892h ;# 
   947  0892                     # 8411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   948                           NVMDAT equ 0893h ;# 
   949  0893                     # 8416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   950                           EEDAT equ 0893h ;# 
   951  0893                     # 8420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   952                           PMDAT equ 0893h ;# 
   953  0893                     # 8427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   954                           NVMDATL equ 0893h ;# 
   955  0893                     # 8432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   956                           EEDATL equ 0893h ;# 
   957  0893                     # 8436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   958                           PMDATL equ 0893h ;# 
   959  0893                     # 8679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   960                           NVMDATH equ 0894h ;# 
   961  0894                     # 8684 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   962                           EEDATH equ 0894h ;# 
   963  0894                     # 8688 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   964                           PMDATH equ 0894h ;# 
   965  0894                     # 8895 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   966                           NVMCON1 equ 0895h ;# 
   967  0895                     # 8900 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   968                           EECON1 equ 0895h ;# 
   969  0895                     # 8904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   970                           PMCON1 equ 0895h ;# 
   971  0895                     # 9084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   972                           NVMCON2 equ 0896h ;# 
   973  0896                     # 9089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   974                           EECON2 equ 0896h ;# 
   975  0896                     # 9093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   976                           PMCON2 equ 0896h ;# 
   977  0896                     # 9186 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   978                           PCON0 equ 089Bh ;# 
   979  089B                     # 9243 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   980                           PMD0 equ 0911h ;# 
   981  0911                     # 9288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   982                           PMD1 equ 0912h ;# 
   983  0912                     # 9327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   984                           PMD2 equ 0913h ;# 
   985  0913                     # 9367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   986                           PMD3 equ 0914h ;# 
   987  0914                     # 9412 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   988                           PMD4 equ 0915h ;# 
   989  0915                     # 9440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   990                           PMD5 equ 0916h ;# 
   991  0916                     # 9472 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   992                           CPUDOZE equ 0918h ;# 
   993  0918                     # 9537 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   994                           OSCCON1 equ 0919h ;# 
   995  0919                     # 9607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   996                           OSCCON2 equ 091Ah ;# 
   997  091A                     # 9677 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
   998                           OSCCON3 equ 091Bh ;# 
   999  091B                     # 9722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1000                           OSCSTAT1 equ 091Ch ;# 
  1001  091C                     # 9774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1002                           OSCEN equ 091Dh ;# 
  1003  091D                     # 9820 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1004                           OSCTUNE equ 091Eh ;# 
  1005  091E                     # 9878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1006                           OSCFRQ equ 091Fh ;# 
  1007  091F                     # 9924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1008                           PPSLOCK equ 0E0Fh ;# 
  1009  0E0F                     # 9944 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1010                           INTPPS equ 0E10h ;# 
  1011  0E10                     # 9996 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1012                           T0CKIPPS equ 0E11h ;# 
  1013  0E11                     # 10048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1014                           T1CKIPPS equ 0E12h ;# 
  1015  0E12                     # 10100 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1016                           T1GPPS equ 0E13h ;# 
  1017  0E13                     # 10152 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1018                           CCP1PPS equ 0E14h ;# 
  1019  0E14                     # 10204 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1020                           CCP2PPS equ 0E15h ;# 
  1021  0E15                     # 10256 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1022                           CWG1PPS equ 0E18h ;# 
  1023  0E18                     # 10308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1024                           MDCIN1PPS equ 0E1Ah ;# 
  1025  0E1A                     # 10360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1026                           MDCIN2PPS equ 0E1Bh ;# 
  1027  0E1B                     # 10412 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1028                           MDMINPPS equ 0E1Ch ;# 
  1029  0E1C                     # 10464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1030                           SSP1CLKPPS equ 0E20h ;# 
  1031  0E20                     # 10516 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1032                           SSP1DATPPS equ 0E21h ;# 
  1033  0E21                     # 10568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1034                           SSP1SSPPS equ 0E22h ;# 
  1035  0E22                     # 10620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1036                           RXPPS equ 0E24h ;# 
  1037  0E24                     # 10672 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1038                           TXPPS equ 0E25h ;# 
  1039  0E25                     # 10724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1040                           CLCIN0PPS equ 0E28h ;# 
  1041  0E28                     # 10776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1042                           CLCIN1PPS equ 0E29h ;# 
  1043  0E29                     # 10828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1044                           CLCIN2PPS equ 0E2Ah ;# 
  1045  0E2A                     # 10880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1046                           CLCIN3PPS equ 0E2Bh ;# 
  1047  0E2B                     # 10932 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1048                           RA0PPS equ 0E90h ;# 
  1049  0E90                     # 10984 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1050                           RA1PPS equ 0E91h ;# 
  1051  0E91                     # 11036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1052                           RA2PPS equ 0E92h ;# 
  1053  0E92                     # 11088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1054                           RA4PPS equ 0E94h ;# 
  1055  0E94                     # 11140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1056                           RA5PPS equ 0E95h ;# 
  1057  0E95                     # 11192 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1058                           RC0PPS equ 0EA0h ;# 
  1059  0EA0                     # 11244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1060                           RC1PPS equ 0EA1h ;# 
  1061  0EA1                     # 11296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1062                           RC2PPS equ 0EA2h ;# 
  1063  0EA2                     # 11348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1064                           RC3PPS equ 0EA3h ;# 
  1065  0EA3                     # 11400 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1066                           RC4PPS equ 0EA4h ;# 
  1067  0EA4                     # 11452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1068                           RC5PPS equ 0EA5h ;# 
  1069  0EA5                     # 11504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1070                           CLCDATA equ 0F0Fh ;# 
  1071  0F0F                     # 11530 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1072                           CLC1CON equ 0F10h ;# 
  1073  0F10                     # 11648 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1074                           CLC1POL equ 0F11h ;# 
  1075  0F11                     # 11726 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1076                           CLC1SEL0 equ 0F12h ;# 
  1077  0F12                     # 11818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1078                           CLC1SEL1 equ 0F13h ;# 
  1079  0F13                     # 11910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1080                           CLC1SEL2 equ 0F14h ;# 
  1081  0F14                     # 12002 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1082                           CLC1SEL3 equ 0F15h ;# 
  1083  0F15                     # 12094 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1084                           CLC1GLS0 equ 0F16h ;# 
  1085  0F16                     # 12206 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1086                           CLC1GLS1 equ 0F17h ;# 
  1087  0F17                     # 12318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1088                           CLC1GLS2 equ 0F18h ;# 
  1089  0F18                     # 12430 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1090                           CLC1GLS3 equ 0F19h ;# 
  1091  0F19                     # 12542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1092                           CLC2CON equ 0F1Ah ;# 
  1093  0F1A                     # 12660 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1094                           CLC2POL equ 0F1Bh ;# 
  1095  0F1B                     # 12738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1096                           CLC2SEL0 equ 0F1Ch ;# 
  1097  0F1C                     # 12830 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1098                           CLC2SEL1 equ 0F1Dh ;# 
  1099  0F1D                     # 12922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1100                           CLC2SEL2 equ 0F1Eh ;# 
  1101  0F1E                     # 13014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1102                           CLC2SEL3 equ 0F1Fh ;# 
  1103  0F1F                     # 13106 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1104                           CLC2GLS0 equ 0F20h ;# 
  1105  0F20                     # 13218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1106                           CLC2GLS1 equ 0F21h ;# 
  1107  0F21                     # 13330 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1108                           CLC2GLS2 equ 0F22h ;# 
  1109  0F22                     # 13442 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1110                           CLC2GLS3 equ 0F23h ;# 
  1111  0F23                     # 13554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1112                           STATUS_SHAD equ 0FE4h ;# 
  1113  0FE4                     # 13586 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1114                           WREG_SHAD equ 0FE5h ;# 
  1115  0FE5                     # 13606 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1116                           BSR_SHAD equ 0FE6h ;# 
  1117  0FE6                     # 13626 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1118                           PCLATH_SHAD equ 0FE7h ;# 
  1119  0FE7                     # 13646 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1120                           FSR0L_SHAD equ 0FE8h ;# 
  1121  0FE8                     # 13666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1122                           FSR0H_SHAD equ 0FE9h ;# 
  1123  0FE9                     # 13686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1124                           FSR1L_SHAD equ 0FEAh ;# 
  1125  0FEA                     # 13706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1126                           FSR1H_SHAD equ 0FEBh ;# 
  1127  0FEB                     # 13726 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1128                           STKPTR equ 0FEDh ;# 
  1129  0FED                     # 13746 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1130                           TOSL equ 0FEEh ;# 
  1131  0FEE                     # 13766 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f18323.h"
  1132                           TOSH equ 0FEFh ;# 
  1133  0FEF                     	FNCALL	_main,_calculatePartialPeriods
  1134                           	FNCALL	_main,_printf
  1135                           	FNCALL	_printf,_vfprintf
  1136                           	FNCALL	_vfprintf,_vfpfcnvrt
  1137                           	FNCALL	_vfpfcnvrt,_dtoa
  1138                           	FNCALL	_vfpfcnvrt,_fputc
  1139                           	FNCALL	_dtoa,___aldiv
  1140                           	FNCALL	_dtoa,___almod
  1141                           	FNCALL	_dtoa,_abs
  1142                           	FNCALL	_dtoa,_pad
  1143                           	FNCALL	_pad,_fputc
  1144                           	FNCALL	_pad,_fputs
  1145                           	FNCALL	_pad,_strlen
  1146                           	FNCALL	_fputs,_fputc
  1147                           	FNCALL	_fputc,_putch
  1148                           	FNCALL	_calculatePartialPeriods,___lldiv
  1149                           	FNROOT	_main
  1150                           	FNCALL	intlevel1,_isr
  1151                           	global	intlevel1
  1152                           	FNROOT	intlevel1
  1153                           	global	_nout
  1154                           	global	_width
  1155                           	global	_prec
  1156                           	global	_flags
  1157                           	global	_dampeningPendulum
  1158                           	global	_dbuf
  1159                           	global	_drivingPendulum
  1160                           	global	_TMR2
  1161                           _TMR2	set	0x1D
  1162  001D                     	global	_TMR0
  1163                           _TMR0	set	0x15
  1164  0015                     	global	_RA4
  1165                           _RA4	set	0x64
  1166  0064                     	global	_RA5
  1167                           _RA5	set	0x65
  1168  0065                     	global	_RC2
  1169                           _RC2	set	0x72
  1170  0072                     	global	_RC1
  1171                           _RC1	set	0x71
  1172  0071                     	global	_TRISC
  1173                           _TRISC	set	0x8E
  1174  008E                     	global	_TRISA
  1175                           _TRISA	set	0x8C
  1176  008C                     psect	stringtext1,class=STRCODE,delta=2,noexec
  1177                           global __pstringtext1
  1178                           __pstringtext1:
  1179  0616                     	
  1180                           STR_2:	
  1181  0616                     	retlw	83	;'S'
  1182  0616  3453               	retlw	101	;'e'
  1183  0617  3465               	retlw	116	;'t'
  1184  0618  3474               	retlw	32	;' '
  1185  0619  3420               	retlw	112	;'p'
  1186  061A  3470               	retlw	101	;'e'
  1187  061B  3465               	retlw	110	;'n'
  1188  061C  346E               	retlw	100	;'d'
  1189  061D  3464               	retlw	117	;'u'
  1190  061E  3475               	retlw	108	;'l'
  1191  061F  346C               	retlw	117	;'u'
  1192  0620  3475               	retlw	109	;'m'
  1193  0621  346D               	retlw	115	;'s'
  1194  0622  3473               	retlw	32	;' '
  1195  0623  3420               	retlw	105	;'i'
  1196  0624  3469               	retlw	110	;'n'
  1197  0625  346E               	retlw	32	;' '
  1198  0626  3420               	retlw	109	;'m'
  1199  0627  346D               	retlw	111	;'o'
  1200  0628  346F               	retlw	116	;'t'
  1201  0629  3474               	retlw	105	;'i'
  1202  062A  3469               	retlw	111	;'o'
  1203  062B  346F               	retlw	110	;'n'
  1204  062C  346E               	retlw	44	;','
  1205  062D  342C               	retlw	32	;' '
  1206  062E  3420               	retlw	116	;'t'
  1207  062F  3474               	retlw	104	;'h'
  1208  0630  3468               	retlw	101	;'e'
  1209  0631  3465               	retlw	110	;'n'
  1210  0632  346E               	retlw	32	;' '
  1211  0633  3420               	retlw	112	;'p'
  1212  0634  3470               	retlw	114	;'r'
  1213  0635  3472               	retlw	101	;'e'
  1214  0636  3465               	retlw	115	;'s'
  1215  0637  3473               	retlw	115	;'s'
  1216  0638  3473               	retlw	32	;' '
  1217  0639  3420               	retlw	83	;'S'
  1218  063A  3453               	retlw	116	;'t'
  1219  063B  3474               	retlw	97	;'a'
  1220  063C  3461               	retlw	114	;'r'
  1221  063D  3472               	retlw	116	;'t'
  1222  063E  3474               	retlw	0
  1223  063F  3400               psect	stringtext2,class=STRCODE,delta=2,noexec
  1224                           global __pstringtext2
  1225                           __pstringtext2:
  1226  06B0                     	
  1227                           STR_1:	
  1228  06B0                     	retlw	70	;'F'
  1229  06B0  3446               	retlw	105	;'i'
  1230  06B1  3469               	retlw	114	;'r'
  1231  06B2  3472               	retlw	109	;'m'
  1232  06B3  346D               	retlw	119	;'w'
  1233  06B4  3477               	retlw	97	;'a'
  1234  06B5  3461               	retlw	114	;'r'
  1235  06B6  3472               	retlw	101	;'e'
  1236  06B7  3465               	retlw	32	;' '
  1237  06B8  3420               	retlw	118	;'v'
  1238  06B9  3476               	retlw	101	;'e'
  1239  06BA  3465               	retlw	114	;'r'
  1240  06BB  3472               	retlw	115	;'s'
  1241  06BC  3473               	retlw	105	;'i'
  1242  06BD  3469               	retlw	111	;'o'
  1243  06BE  346F               	retlw	110	;'n'
  1244  06BF  346E               	retlw	58	;':'
  1245  06C0  343A               	retlw	32	;' '
  1246  06C1  3420               	retlw	37	;'%'
  1247  06C2  3425               	retlw	100	;'d'
  1248  06C3  3464               	retlw	46	;'.'
  1249  06C4  342E               	retlw	37	;'%'
  1250  06C5  3425               	retlw	100	;'d'
  1251  06C6  3464               	retlw	0
  1252  06C7  3400               psect	stringtext3,class=STRCODE,delta=2,noexec
  1253                           global __pstringtext3
  1254                           __pstringtext3:
  1255  06E0                     	
  1256                           STR_3:	
  1257  06E0                     	retlw	82	;'R'
  1258  06E0  3452               	retlw	117	;'u'
  1259  06E1  3475               	retlw	110	;'n'
  1260  06E2  346E               	retlw	110	;'n'
  1261  06E3  346E               	retlw	105	;'i'
  1262  06E4  3469               	retlw	110	;'n'
  1263  06E5  346E               	retlw	103	;'g'
  1264  06E6  3467               	retlw	46	;'.'
  1265  06E7  342E               	retlw	46	;'.'
  1266  06E8  342E               	retlw	46	;'.'
  1267  06E9  342E               	retlw	0
  1268  06EA  3400               psect	stringtext4,class=STRCODE,delta=2,noexec
  1269                           global __pstringtext4
  1270                           __pstringtext4:
  1271  0000                     ; #config settings
  1272                           global __CFG_FEXTOSC$HS
  1273                           __CFG_FEXTOSC$HS equ 0x0
  1274  0000                     global __CFG_RSTOSC$HFINT32
  1275                           __CFG_RSTOSC$HFINT32 equ 0x0
  1276  0000                     global __CFG_CSWEN$OFF
  1277                           __CFG_CSWEN$OFF equ 0x0
  1278  0000                     global __CFG_FCMEN$OFF
  1279                           __CFG_FCMEN$OFF equ 0x0
  1280  0000                     global __CFG_MCLRE$ON
  1281                           __CFG_MCLRE$ON equ 0x0
  1282  0000                     global __CFG_PWRTE$ON
  1283                           __CFG_PWRTE$ON equ 0x0
  1284  0000                     global __CFG_WDTE$OFF
  1285                           __CFG_WDTE$OFF equ 0x0
  1286  0000                     global __CFG_LPBOREN$OFF
  1287                           __CFG_LPBOREN$OFF equ 0x0
  1288  0000                     global __CFG_BOREN$ON
  1289                           __CFG_BOREN$ON equ 0x0
  1290  0000                     global __CFG_BORV$HIGH
  1291                           __CFG_BORV$HIGH equ 0x0
  1292  0000                     global __CFG_PPS1WAY$ON
  1293                           __CFG_PPS1WAY$ON equ 0x0
  1294  0000                     global __CFG_STVREN$ON
  1295                           __CFG_STVREN$ON equ 0x0
  1296  0000                     global __CFG_DEBUG$OFF
  1297                           __CFG_DEBUG$OFF equ 0x0
  1298  0000                     global __CFG_WRT$ALL
  1299                           __CFG_WRT$ALL equ 0x0
  1300  0000                     global __CFG_LVP$ON
  1301                           __CFG_LVP$ON equ 0x0
  1302  0000                     global __CFG_CP$ON
  1303                           __CFG_CP$ON equ 0x0
  1304  0000                     global __CFG_CPD$ON
  1305                           __CFG_CPD$ON equ 0x0
  1306  0000                     	file	"C:\Users\sleep\AppData\Local\Temp\sboo."
  1307                           	line	#
  1308                           psect cinit,class=CODE,delta=2
  1309                           global start_initialization
  1310                           start_initialization:
  1311  0049                     
  1312                           global __initialization
  1313                           __initialization:
  1314  0049                     psect	bssBANK0,class=BANK0,space=1,noexec
  1315                           global __pbssBANK0
  1316                           __pbssBANK0:
  1317  0064                     _nout:
  1318  0064                            ds      2
  1319  0064                     
  1320                           _width:
  1321  0066                            ds      2
  1322  0066                     
  1323                           _prec:
  1324  0068                            ds      2
  1325  0068                     
  1326                           _flags:
  1327  006A                            ds      2
  1328  006A                     
  1329                           psect	bssBANK1,class=BANK1,space=1,noexec
  1330                           global __pbssBANK1
  1331                           __pbssBANK1:
  1332  00A0                     _dampeningPendulum:
  1333  00A0                            ds      47
  1334  00A0                     
  1335                           _dbuf:
  1336  00CF                            ds      32
  1337  00CF                     
  1338                           psect	bssBANK2,class=BANK2,space=1,noexec
  1339                           global __pbssBANK2
  1340                           __pbssBANK2:
  1341  0120                     _drivingPendulum:
  1342  0120                            ds      47
  1343  0120                     
  1344                           	file	"C:\Users\sleep\AppData\Local\Temp\sboo."
  1345                           	line	#
  1346                           psect clrtext,class=CODE,delta=2
  1347                           global clear_ram0
  1348                           ;	Called with FSR0 containing the base address, and
  1349                           ;	WREG with the size to clear
  1350                           clear_ram0:
  1351  06EB                     	clrwdt			;clear the watchdog before getting into this loop
  1352  06EB  0064               clrloop0:
  1353  06EC                     	clrf	indf0		;clear RAM location pointed to by FSR
  1354  06EC  0180               	addfsr	0,1
  1355  06ED  3101               	decfsz wreg		;Have we reached the end of clearing yet?
  1356  06EE  0B89               	goto clrloop0	;have we reached the end yet?
  1357  06EF  2EEC               	retlw	0		;all done for this memory range, return
  1358  06F0  3400               ; Clear objects allocated to BANK0
  1359                           psect cinit,class=CODE,delta=2,merge=1
  1360                           	global __pbssBANK0
  1361                           	movlw	low(__pbssBANK0)
  1362  0049  3064               	movwf	fsr0l
  1363  004A  0084               	movlw	high(__pbssBANK0)
  1364  004B  3000               	movwf	fsr0h
  1365  004C  0085               	movlw	08h
  1366  004D  3008               	fcall	clear_ram0
  1367  004E  3186  26EB  3180   ; Clear objects allocated to BANK1
  1368                           psect cinit,class=CODE,delta=2,merge=1
  1369                           	global __pbssBANK1
  1370                           	movlw	low(__pbssBANK1)
  1371  0051  30A0               	movwf	fsr0l
  1372  0052  0084               	movlw	high(__pbssBANK1)
  1373  0053  3000               	movwf	fsr0h
  1374  0054  0085               	movlw	04Fh
  1375  0055  304F               	fcall	clear_ram0
  1376  0056  3186  26EB  3180   ; Clear objects allocated to BANK2
  1377                           psect cinit,class=CODE,delta=2,merge=1
  1378                           	global __pbssBANK2
  1379                           	movlw	low(__pbssBANK2)
  1380  0059  3020               	movwf	fsr0l
  1381  005A  0084               	movlw	high(__pbssBANK2)
  1382  005B  3001               	movwf	fsr0h
  1383  005C  0085               	movlw	02Fh
  1384  005D  302F               	fcall	clear_ram0
  1385  005E  3186  26EB  3180   psect cinit,class=CODE,delta=2,merge=1
  1386                           global end_of_initialization,__end_of__initialization
  1387                           
  1388                           ;End of C runtime variable initialization code
  1389                           
  1390                           end_of_initialization:
  1391  0061                     __end_of__initialization:
  1392  0061                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  1393  0061  107E               movlb 0
  1394  0062  0020               ljmp _main	;jump to C main() function
  1395  0063  2C83               psect	cstackCOMMON,class=COMMON,space=1,noexec
  1396                           global __pcstackCOMMON
  1397                           __pcstackCOMMON:
  1398  0070                     ?_putch:	; 1 bytes @ 0x0
  1399  0070                     ?_isr:	; 1 bytes @ 0x0
  1400  0070                     ??_isr:	; 1 bytes @ 0x0
  1401  0070                     ?_main:	; 1 bytes @ 0x0
  1402  0070                     putch@c:	; 1 bytes @ 0x0
  1403  0070                     	ds	2
  1404  0070                     ??_putch:	; 1 bytes @ 0x2
  1405  0072                     ?_fputc:	; 2 bytes @ 0x2
  1406  0072                     	global	?_strlen
  1407                           ?_strlen:	; 2 bytes @ 0x2
  1408  0072                     	global	?___lldiv
  1409                           ?___lldiv:	; 4 bytes @ 0x2
  1410  0072                     	global	?___aldiv
  1411                           ?___aldiv:	; 4 bytes @ 0x2
  1412  0072                     	global	?___almod
  1413                           ?___almod:	; 4 bytes @ 0x2
  1414  0072                     	global	fputc@c
  1415                           fputc@c:	; 2 bytes @ 0x2
  1416  0072                     	global	___lldiv@divisor
  1417                           ___lldiv@divisor:	; 4 bytes @ 0x2
  1418  0072                     	global	___aldiv@divisor
  1419                           ___aldiv@divisor:	; 4 bytes @ 0x2
  1420  0072                     	global	___almod@divisor
  1421                           ___almod@divisor:	; 4 bytes @ 0x2
  1422  0072                     	ds	2
  1423  0072                     ??_strlen:	; 1 bytes @ 0x4
  1424  0074                     	global	fputc@fp
  1425                           fputc@fp:	; 1 bytes @ 0x4
  1426  0074                     	ds	1
  1427  0074                     ??_fputc:	; 1 bytes @ 0x5
  1428  0075                     	ds	1
  1429  0075                     	global	___lldiv@dividend
  1430                           ___lldiv@dividend:	; 4 bytes @ 0x6
  1431  0076                     	global	___aldiv@dividend
  1432                           ___aldiv@dividend:	; 4 bytes @ 0x6
  1433  0076                     	global	___almod@dividend
  1434                           ___almod@dividend:	; 4 bytes @ 0x6
  1435  0076                     	ds	2
  1436  0076                     	global	strlen@a
  1437                           strlen@a:	; 1 bytes @ 0x8
  1438  0078                     	ds	1
  1439  0078                     	global	strlen@s
  1440                           strlen@s:	; 1 bytes @ 0x9
  1441  0079                     	ds	1
  1442  0079                     ??___lldiv:	; 1 bytes @ 0xA
  1443  007A                     ??___aldiv:	; 1 bytes @ 0xA
  1444  007A                     ??___almod:	; 1 bytes @ 0xA
  1445  007A                     ?_fputs:	; 2 bytes @ 0xA
  1446  007A                     	global	fputs@fp
  1447                           fputs@fp:	; 1 bytes @ 0xA
  1448  007A                     	ds	1
  1449  007A                     ??_pad:	; 1 bytes @ 0xB
  1450  007B                     	ds	1
  1451  007B                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1452                           global __pcstackBANK0
  1453                           __pcstackBANK0:
  1454  0020                     ??_fputs:	; 1 bytes @ 0x0
  1455  0020                     	global	___aldiv@counter
  1456                           ___aldiv@counter:	; 1 bytes @ 0x0
  1457  0020                     	global	___almod@counter
  1458                           ___almod@counter:	; 1 bytes @ 0x0
  1459  0020                     	global	___lldiv@quotient
  1460                           ___lldiv@quotient:	; 4 bytes @ 0x0
  1461  0020                     	ds	1
  1462  0020                     	global	___aldiv@sign
  1463                           ___aldiv@sign:	; 1 bytes @ 0x1
  1464  0021                     	global	___almod@sign
  1465                           ___almod@sign:	; 1 bytes @ 0x1
  1466  0021                     	ds	1
  1467  0021                     	global	?_abs
  1468                           ?_abs:	; 2 bytes @ 0x2
  1469  0022                     	global	abs@a
  1470                           abs@a:	; 2 bytes @ 0x2
  1471  0022                     	global	___aldiv@quotient
  1472                           ___aldiv@quotient:	; 4 bytes @ 0x2
  1473  0022                     	ds	1
  1474  0022                     	global	fputs@c
  1475                           fputs@c:	; 1 bytes @ 0x3
  1476  0023                     	ds	1
  1477  0023                     ??_abs:	; 1 bytes @ 0x4
  1478  0024                     	global	___lldiv@counter
  1479                           ___lldiv@counter:	; 1 bytes @ 0x4
  1480  0024                     	global	fputs@i
  1481                           fputs@i:	; 2 bytes @ 0x4
  1482  0024                     	ds	1
  1483  0024                     ?_calculatePartialPeriods:	; 1 bytes @ 0x5
  1484  0025                     	global	calculatePartialPeriods@pendulum
  1485                           calculatePartialPeriods@pendulum:	; 2 bytes @ 0x5
  1486  0025                     	ds	1
  1487  0025                     	global	fputs@s
  1488                           fputs@s:	; 1 bytes @ 0x6
  1489  0026                     	ds	1
  1490  0026                     ??_calculatePartialPeriods:	; 1 bytes @ 0x7
  1491  0027                     	global	?_pad
  1492                           ?_pad:	; 2 bytes @ 0x7
  1493  0027                     	global	pad@buf
  1494                           pad@buf:	; 1 bytes @ 0x7
  1495  0027                     	ds	1
  1496  0027                     	global	pad@p
  1497                           pad@p:	; 2 bytes @ 0x8
  1498  0028                     	ds	2
  1499  0028                     	global	pad@i
  1500                           pad@i:	; 2 bytes @ 0xA
  1501  002A                     	ds	2
  1502  002A                     	global	pad@w
  1503                           pad@w:	; 2 bytes @ 0xC
  1504  002C                     	ds	2
  1505  002C                     	global	pad@fp
  1506                           pad@fp:	; 1 bytes @ 0xE
  1507  002E                     	ds	1
  1508  002E                     	global	?_dtoa
  1509                           ?_dtoa:	; 2 bytes @ 0xF
  1510  002F                     	global	dtoa@d
  1511                           dtoa@d:	; 4 bytes @ 0xF
  1512  002F                     	ds	4
  1513  002F                     ??_dtoa:	; 1 bytes @ 0x13
  1514  0033                     	global	calculatePartialPeriods@total1
  1515                           calculatePartialPeriods@total1:	; 4 bytes @ 0x13
  1516  0033                     	ds	2
  1517  0033                     	global	_dtoa$270
  1518                           _dtoa$270:	; 2 bytes @ 0x15
  1519  0035                     	ds	2
  1520  0035                     	global	dtoa@p
  1521                           dtoa@p:	; 2 bytes @ 0x17
  1522  0037                     	global	calculatePartialPeriods@total2
  1523                           calculatePartialPeriods@total2:	; 4 bytes @ 0x17
  1524  0037                     	ds	2
  1525  0037                     	global	dtoa@fp
  1526                           dtoa@fp:	; 1 bytes @ 0x19
  1527  0039                     	ds	1
  1528  0039                     	global	dtoa@w
  1529                           dtoa@w:	; 2 bytes @ 0x1A
  1530  003A                     	ds	1
  1531  003A                     	global	_calculatePartialPeriods$85
  1532                           _calculatePartialPeriods$85:	; 2 bytes @ 0x1B
  1533  003B                     	ds	1
  1534  003B                     	global	dtoa@s
  1535                           dtoa@s:	; 2 bytes @ 0x1C
  1536  003C                     	ds	1
  1537  003C                     	global	_calculatePartialPeriods$86
  1538                           _calculatePartialPeriods$86:	; 2 bytes @ 0x1D
  1539  003D                     	ds	1
  1540  003D                     	global	dtoa@n
  1541                           dtoa@n:	; 4 bytes @ 0x1E
  1542  003E                     	ds	1
  1543  003E                     	global	calculatePartialPeriods@avg1
  1544                           calculatePartialPeriods@avg1:	; 2 bytes @ 0x1F
  1545  003F                     	ds	2
  1546  003F                     	global	calculatePartialPeriods@avg2
  1547                           calculatePartialPeriods@avg2:	; 2 bytes @ 0x21
  1548  0041                     	ds	1
  1549  0041                     	global	dtoa@i
  1550                           dtoa@i:	; 2 bytes @ 0x22
  1551  0042                     	ds	1
  1552  0042                     	global	calculatePartialPeriods@i
  1553                           calculatePartialPeriods@i:	; 1 bytes @ 0x23
  1554  0043                     	ds	1
  1555  0043                     	global	?_vfpfcnvrt
  1556                           ?_vfpfcnvrt:	; 2 bytes @ 0x24
  1557  0044                     	global	vfpfcnvrt@fmt
  1558                           vfpfcnvrt@fmt:	; 1 bytes @ 0x24
  1559  0044                     	ds	1
  1560  0044                     	global	vfpfcnvrt@ap
  1561                           vfpfcnvrt@ap:	; 1 bytes @ 0x25
  1562  0045                     	ds	1
  1563  0045                     ??_vfpfcnvrt:	; 1 bytes @ 0x26
  1564  0046                     	ds	5
  1565  0046                     	global	vfpfcnvrt@ll
  1566                           vfpfcnvrt@ll:	; 4 bytes @ 0x2B
  1567  004B                     	ds	4
  1568  004B                     	global	vfpfcnvrt@fp
  1569                           vfpfcnvrt@fp:	; 1 bytes @ 0x2F
  1570  004F                     	ds	1
  1571  004F                     	global	?_vfprintf
  1572                           ?_vfprintf:	; 2 bytes @ 0x30
  1573  0050                     	global	vfprintf@fmt
  1574                           vfprintf@fmt:	; 2 bytes @ 0x30
  1575  0050                     	ds	2
  1576  0050                     	global	vfprintf@ap
  1577                           vfprintf@ap:	; 1 bytes @ 0x32
  1578  0052                     	ds	1
  1579  0052                     ??_vfprintf:	; 1 bytes @ 0x33
  1580  0053                     	ds	2
  1581  0053                     	global	vfprintf@fp
  1582                           vfprintf@fp:	; 1 bytes @ 0x35
  1583  0055                     	ds	1
  1584  0055                     	global	vfprintf@cfmt
  1585                           vfprintf@cfmt:	; 2 bytes @ 0x36
  1586  0056                     	ds	2
  1587  0056                     	global	?_printf
  1588                           ?_printf:	; 2 bytes @ 0x38
  1589  0058                     	global	printf@fmt
  1590                           printf@fmt:	; 2 bytes @ 0x38
  1591  0058                     	ds	6
  1592  0058                     ??_printf:	; 1 bytes @ 0x3E
  1593  005E                     	ds	1
  1594  005E                     	global	printf@ret
  1595                           printf@ret:	; 2 bytes @ 0x3F
  1596  005F                     	ds	2
  1597  005F                     	global	printf@ap
  1598                           printf@ap:	; 1 bytes @ 0x41
  1599  0061                     	ds	1
  1600  0061                     ??_main:	; 1 bytes @ 0x42
  1601  0062                     	ds	2
  1602  0062                     ;!
  1603                           ;!Data Sizes:
  1604                           ;!    Strings     77
  1605                           ;!    Constant    0
  1606                           ;!    Data        0
  1607                           ;!    BSS         134
  1608                           ;!    Persistent  0
  1609                           ;!    Stack       0
  1610                           ;!
  1611                           ;!Auto Spaces:
  1612                           ;!    Space          Size  Autos    Used
  1613                           ;!    COMMON           14     12      12
  1614                           ;!    BANK0            80     68      76
  1615                           ;!    BANK1            80      0      79
  1616                           ;!    BANK2            80      0      47
  1617                           
  1618                           ;!
  1619                           ;!Pointer List with Targets:
  1620                           ;!
  1621                           ;!    strlen@s	PTR const unsigned char  size(1) Largest target is 32
  1622                           ;!		 -> dbuf(BANK1[32]), 
  1623                           ;!
  1624                           ;!    strlen@a	PTR const unsigned char  size(1) Largest target is 32
  1625                           ;!		 -> dbuf(BANK1[32]), 
  1626                           ;!
  1627                           ;!    printf@fmt	PTR const unsigned char  size(2) Largest target is 42
  1628                           ;!		 -> STR_3(CODE[11]), STR_2(CODE[42]), STR_1(CODE[24]), 
  1629                           ;!
  1630                           ;!    printf@ap	PTR void [1] size(1) Largest target is 2
  1631                           ;!		 -> ?_printf(BANK0[2]), 
  1632                           ;!
  1633                           ;!    fputs@s	PTR const unsigned char  size(1) Largest target is 32
  1634                           ;!		 -> dbuf(BANK1[32]), 
  1635                           ;!
  1636                           ;!    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
  1637                           ;!		 -> NULL(NULL[0]), 
  1638                           ;!
  1639                           ;!    S564_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0
  1640                           ;!
  1641                           ;!    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0
  1642                           ;!
  1643                           ;!    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
  1644                           ;!		 -> NULL(NULL[0]), 
  1645                           ;!
  1646                           ;!    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
  1647                           ;!		 -> printf@ap(BANK0[1]), 
  1648                           ;!
  1649                           ;!    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
  1650                           ;!		 -> NULL(NULL[0]), 
  1651                           ;!
  1652                           ;!    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
  1653                           ;!		 -> STR_3(CODE[11]), STR_2(CODE[42]), STR_1(CODE[24]), 
  1654                           ;!
  1655                           ;!    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 42
  1656                           ;!		 -> STR_3(CODE[11]), STR_2(CODE[42]), STR_1(CODE[24]), 
  1657                           ;!
  1658                           ;!    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
  1659                           ;!		 -> NULL(NULL[0]), 
  1660                           ;!
  1661                           ;!    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
  1662                           ;!		 -> printf@ap(BANK0[1]), 
  1663                           ;!
  1664                           ;!    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
  1665                           ;!		 -> vfprintf@cfmt(BANK0[2]), 
  1666                           ;!
  1667                           ;!    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
  1668                           ;!		 -> NULL(NULL[0]), 
  1669                           ;!
  1670                           ;!    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
  1671                           ;!		 -> NULL(NULL[0]), 
  1672                           ;!
  1673                           ;!    pad@buf	PTR unsigned char  size(1) Largest target is 32
  1674                           ;!		 -> dbuf(BANK1[32]), 
  1675                           ;!
  1676                           ;!    calculatePartialPeriods@pendulum	PTR volatile struct Pendulum size(2) Largest targ
                                 et is 47
  1677                           ;!		 -> drivingPendulum(BANK2[47]), dampeningPendulum(BANK1[47]), 
  1678                           ;!
  1679                           
  1680                           
  1681                           ;!
  1682                           ;!Critical Paths under _main in COMMON
  1683                           ;!
  1684                           ;!    _dtoa->_pad
  1685                           ;!    _pad->_fputs
  1686                           ;!    _fputs->_fputc
  1687                           ;!    _abs->___almod
  1688                           ;!    _calculatePartialPeriods->___lldiv
  1689                           ;!
  1690                           ;!Critical Paths under _isr in COMMON
  1691                           ;!
  1692                           ;!    None.
  1693                           ;!
  1694                           ;!Critical Paths under _main in BANK0
  1695                           ;!
  1696                           ;!    _main->_printf
  1697                           ;!    _printf->_vfprintf
  1698                           ;!    _vfprintf->_vfpfcnvrt
  1699                           ;!    _vfpfcnvrt->_dtoa
  1700                           ;!    _dtoa->_pad
  1701                           ;!    _pad->_fputs
  1702                           ;!    _abs->___almod
  1703                           ;!    _calculatePartialPeriods->___lldiv
  1704                           ;!
  1705                           ;!Critical Paths under _isr in BANK0
  1706                           ;!
  1707                           ;!    None.
  1708                           ;!
  1709                           ;!Critical Paths under _main in BANK1
  1710                           ;!
  1711                           ;!    None.
  1712                           ;!
  1713                           ;!Critical Paths under _isr in BANK1
  1714                           ;!
  1715                           ;!    None.
  1716                           ;!
  1717                           ;!Critical Paths under _main in BANK2
  1718                           ;!
  1719                           ;!    None.
  1720                           ;!
  1721                           ;!Critical Paths under _isr in BANK2
  1722                           ;!
  1723                           ;!    None.
  1724                           
  1725 ;;
  1726 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1727 ;;
  1728                           
  1729                           ;!
  1730                           ;!Call Graph Tables:
  1731                           ;!
  1732                           ;! ---------------------------------------------------------------------------------
  1733                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1734                           ;! ---------------------------------------------------------------------------------
  1735                           ;! (0) _main                                                 2     2      0    7313
  1736                           ;!                                             66 BANK0      2     2      0
  1737                           ;!            _calculatePartialPeriods
  1738                           ;!                             _printf
  1739                           ;! ---------------------------------------------------------------------------------
  1740                           ;! (1) _printf                                              10     4      6    5956
  1741                           ;!                                             56 BANK0     10     4      6
  1742                           ;!                           _vfprintf
  1743                           ;! ---------------------------------------------------------------------------------
  1744                           ;! (2) _vfprintf                                             8     5      3    5674
  1745                           ;!                                             48 BANK0      8     5      3
  1746                           ;!                          _vfpfcnvrt
  1747                           ;! ---------------------------------------------------------------------------------
  1748                           ;! (3) _vfpfcnvrt                                           32    30      2    5346
  1749                           ;!                                             36 BANK0     12    10      2
  1750                           ;!                               _dtoa
  1751                           ;!                              _fputc
  1752                           ;! ---------------------------------------------------------------------------------
  1753                           ;! (4) _dtoa                                                21    17      4    4045
  1754                           ;!                                             15 BANK0     21    17      4
  1755                           ;!                            ___aldiv
  1756                           ;!                            ___almod
  1757                           ;!                                _abs
  1758                           ;!                                _pad
  1759                           ;! ---------------------------------------------------------------------------------
  1760                           ;! (5) _pad                                                  9     6      3    2422
  1761                           ;!                                             11 COMMON     1     1      0
  1762                           ;!                                              7 BANK0      8     5      3
  1763                           ;!                              _fputc
  1764                           ;!                              _fputs
  1765                           ;!                             _strlen
  1766                           ;! ---------------------------------------------------------------------------------
  1767                           ;! (6) _strlen                                               8     6      2     123
  1768                           ;!                                              2 COMMON     8     6      2
  1769                           ;! ---------------------------------------------------------------------------------
  1770                           ;! (6) _fputs                                                8     7      1    1083
  1771                           ;!                                             10 COMMON     1     0      1
  1772                           ;!                                              0 BANK0      7     7      0
  1773                           ;!                              _fputc
  1774                           ;! ---------------------------------------------------------------------------------
  1775                           ;! (4) _fputc                                                8     5      3     768
  1776                           ;!                                              2 COMMON     8     5      3
  1777                           ;!                              _putch
  1778                           ;! ---------------------------------------------------------------------------------
  1779                           ;! (5) _putch                                                1     1      0       0
  1780                           ;! ---------------------------------------------------------------------------------
  1781                           ;! (5) _abs                                                  4     2      2     142
  1782                           ;!                                              2 BANK0      4     2      2
  1783                           ;!                            ___almod (ARG)
  1784                           ;! ---------------------------------------------------------------------------------
  1785                           ;! (5) ___almod                                             11     3      8     448
  1786                           ;!                                              2 COMMON     9     1      8
  1787                           ;!                                              0 BANK0      2     2      0
  1788                           ;! ---------------------------------------------------------------------------------
  1789                           ;! (5) ___aldiv                                             15     7      8     452
  1790                           ;!                                              2 COMMON     9     1      8
  1791                           ;!                                              0 BANK0      6     6      0
  1792                           ;! ---------------------------------------------------------------------------------
  1793                           ;! (1) _calculatePartialPeriods                             31    29      2    1357
  1794                           ;!                                              5 BANK0     31    29      2
  1795                           ;!                            ___lldiv
  1796                           ;! ---------------------------------------------------------------------------------
  1797                           ;! (2) ___lldiv                                             14     6      8     466
  1798                           ;!                                              2 COMMON     9     1      8
  1799                           ;!                                              0 BANK0      5     5      0
  1800                           ;! ---------------------------------------------------------------------------------
  1801                           ;! Estimated maximum stack depth 6
  1802                           ;! ---------------------------------------------------------------------------------
  1803                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1804                           ;! ---------------------------------------------------------------------------------
  1805                           ;! (9) _isr                                                  2     2      0       0
  1806                           ;!                                              0 COMMON     2     2      0
  1807                           ;! ---------------------------------------------------------------------------------
  1808                           ;! Estimated maximum stack depth 9
  1809                           ;! ---------------------------------------------------------------------------------
  1810                           ;!
  1811                           ;! Call Graph Graphs:
  1812                           ;!
  1813                           ;! _main (ROOT)
  1814                           ;!   _calculatePartialPeriods
  1815                           ;!     ___lldiv
  1816                           ;!   _printf
  1817                           ;!     _vfprintf
  1818                           ;!       _vfpfcnvrt
  1819                           ;!         _dtoa
  1820                           ;!           ___aldiv
  1821                           ;!           ___almod
  1822                           ;!           _abs
  1823                           ;!             ___almod (ARG)
  1824                           ;!           _pad
  1825                           ;!             _fputc
  1826                           ;!               _putch
  1827                           ;!             _fputs
  1828                           ;!               _fputc
  1829                           ;!                 _putch
  1830                           ;!             _strlen
  1831                           ;!         _fputc
  1832                           ;!           _putch
  1833                           ;!
  1834                           ;! _isr (ROOT)
  1835                           ;!
  1836                           
  1837                           ;! Address spaces:
  1838                           
  1839                           ;!Name               Size   Autos  Total    Cost      Usage
  1840                           ;!BIGRAM              F0      0       0       0        0.0%
  1841                           ;!EEDATA             100      0       0       0        0.0%
  1842                           ;!NULL                 0      0       0       0        0.0%
  1843                           ;!CODE                 0      0       0       0        0.0%
  1844                           ;!BITCOMMON            E      0       0       1        0.0%
  1845                           ;!BITSFR0              0      0       0       1        0.0%
  1846                           ;!SFR0                 0      0       0       1        0.0%
  1847                           ;!COMMON               E      C       C       2       85.7%
  1848                           ;!BITSFR1              0      0       0       2        0.0%
  1849                           ;!SFR1                 0      0       0       2        0.0%
  1850                           ;!BITSFR2              0      0       0       3        0.0%
  1851                           ;!SFR2                 0      0       0       3        0.0%
  1852                           ;!STACK                0      0       0       3        0.0%
  1853                           ;!BITSFR3              0      0       0       4        0.0%
  1854                           ;!SFR3                 0      0       0       4        0.0%
  1855                           ;!ABS                  0      0      D6       4        0.0%
  1856                           ;!BITBANK0            50      0       0       5        0.0%
  1857                           ;!BITSFR4              0      0       0       5        0.0%
  1858                           ;!SFR4                 0      0       0       5        0.0%
  1859                           ;!BANK0               50     44      4C       6       95.0%
  1860                           ;!BITSFR5              0      0       0       6        0.0%
  1861                           ;!SFR5                 0      0       0       6        0.0%
  1862                           ;!BITBANK1            50      0       0       7        0.0%
  1863                           ;!BITSFR6              0      0       0       7        0.0%
  1864                           ;!SFR6                 0      0       0       7        0.0%
  1865                           ;!BANK1               50      0      4F       8       98.8%
  1866                           ;!BITSFR7              0      0       0       8        0.0%
  1867                           ;!SFR7                 0      0       0       8        0.0%
  1868                           ;!BITBANK2            50      0       0       9        0.0%
  1869                           ;!BITSFR8              0      0       0       9        0.0%
  1870                           ;!SFR8                 0      0       0       9        0.0%
  1871                           ;!BANK2               50      0      2F      10       58.8%
  1872                           ;!BITSFR9              0      0       0      10        0.0%
  1873                           ;!SFR9                 0      0       0      10        0.0%
  1874                           ;!BITSFR10             0      0       0      11        0.0%
  1875                           ;!SFR10                0      0       0      11        0.0%
  1876                           ;!DATA                 0      0      D6      11        0.0%
  1877                           ;!BITSFR11             0      0       0      12        0.0%
  1878                           ;!SFR11                0      0       0      12        0.0%
  1879                           ;!BITSFR12             0      0       0      13        0.0%
  1880                           ;!SFR12                0      0       0      13        0.0%
  1881                           ;!BITSFR13             0      0       0      14        0.0%
  1882                           ;!SFR13                0      0       0      14        0.0%
  1883                           ;!BITSFR14             0      0       0      15        0.0%
  1884                           ;!SFR14                0      0       0      15        0.0%
  1885                           ;!BITSFR15             0      0       0      16        0.0%
  1886                           ;!SFR15                0      0       0      16        0.0%
  1887                           ;!BITSFR16             0      0       0      17        0.0%
  1888                           ;!SFR16                0      0       0      17        0.0%
  1889                           ;!BITSFR17             0      0       0      18        0.0%
  1890                           ;!SFR17                0      0       0      18        0.0%
  1891                           ;!BITSFR18             0      0       0      19        0.0%
  1892                           ;!SFR18                0      0       0      19        0.0%
  1893                           ;!BITSFR19             0      0       0      20        0.0%
  1894                           ;!SFR19                0      0       0      20        0.0%
  1895                           ;!BITSFR20             0      0       0      21        0.0%
  1896                           ;!SFR20                0      0       0      21        0.0%
  1897                           ;!BITSFR21             0      0       0      22        0.0%
  1898                           ;!SFR21                0      0       0      22        0.0%
  1899                           ;!BITSFR22             0      0       0      23        0.0%
  1900                           ;!SFR22                0      0       0      23        0.0%
  1901                           ;!BITSFR23             0      0       0      24        0.0%
  1902                           ;!SFR23                0      0       0      24        0.0%
  1903                           ;!BITSFR24             0      0       0      25        0.0%
  1904                           ;!SFR24                0      0       0      25        0.0%
  1905                           ;!BITSFR25             0      0       0      26        0.0%
  1906                           ;!SFR25                0      0       0      26        0.0%
  1907                           ;!BITSFR26             0      0       0      27        0.0%
  1908                           ;!SFR26                0      0       0      27        0.0%
  1909                           ;!BITSFR27             0      0       0      28        0.0%
  1910                           ;!SFR27                0      0       0      28        0.0%
  1911                           ;!BITSFR28             0      0       0      29        0.0%
  1912                           ;!SFR28                0      0       0      29        0.0%
  1913                           ;!BITSFR29             0      0       0      30        0.0%
  1914                           ;!SFR29                0      0       0      30        0.0%
  1915                           ;!BITSFR30             0      0       0      31        0.0%
  1916                           ;!SFR30                0      0       0      31        0.0%
  1917                           ;!BITSFR31             0      0       0      32        0.0%
  1918                           ;!SFR31                0      0       0      32        0.0%
  1919                           
  1920                           	global	_main
  1921                           
  1922 ;; *************** function _main *****************
  1923 ;; Defined at:
  1924 ;;		line 35 in file "PTSymmetryController.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;		None
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : B1F/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1938 ;;      Params:         0       0       0       0
  1939 ;;      Locals:         0       0       0       0
  1940 ;;      Temps:          0       2       0       0
  1941 ;;      Totals:         0       2       0       0
  1942 ;;Total ram usage:        2 bytes
  1943 ;; Hardware stack levels required when called:    9
  1944 ;; This function calls:
  1945 ;;		_calculatePartialPeriods
  1946 ;;		_printf
  1947 ;; This function is called by:
  1948 ;;		Startup code after reset
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  1952                           	file	"PTSymmetryController.c"
  1953                           	line	35
  1954                           global __pmaintext
  1955                           __pmaintext:	;psect for function _main
  1956  0483                     psect	maintext
  1957                           	file	"PTSymmetryController.c"
  1958                           	line	35
  1959                           	global	__size_of_main
  1960                           	__size_of_main	equ	__end_of_main-_main
  1961  0069                     	
  1962                           _main:	
  1963  0483                     ;incstack = 0
  1964                           	opt	stack 7
  1965                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1966                           	line	37
  1967                           	
  1968                           l1422:	
  1969  0483                     ;PTSymmetryController.c: 37:     RA5 = 0;
  1970                           	movlb 0	; select bank0
  1971  0483  0020               	bcf	(101/8),(101)&7	;volatile
  1972  0484  128C               	line	38
  1973                           	
  1974                           l1424:	
  1975  0485                     ;PTSymmetryController.c: 38:     TRISA = 0b00011011; TRISC = 0b00000110;
  1976                           	movlw	low(01Bh)
  1977  0485  301B               	movlb 1	; select bank1
  1978  0486  0021               	movwf	(140)^080h	;volatile
  1979  0487  008C               	movlw	low(06h)
  1980  0488  3006               	movwf	(142)^080h	;volatile
  1981  0489  008E               	line	39
  1982                           	
  1983                           l1426:	
  1984  048A                     ;PTSymmetryController.c: 39:     RA5 = 1;
  1985                           	movlb 0	; select bank0
  1986  048A  0020               	bsf	(101/8),(101)&7	;volatile
  1987  048B  168C               	line	41
  1988                           	
  1989                           l1428:	
  1990  048C                     ;PTSymmetryController.c: 41:     printf("Firmware version: %d.%d", 1, 0);
  1991                           	movlw	low(((STR_1)|8000h))
  1992  048C  30B0               	movwf	(printf@fmt)
  1993  048D  00D8               	movlw	high(((STR_1)|8000h))
  1994  048E  3086               	movwf	((printf@fmt))+1
  1995  048F  00D9               	movlw	01h
  1996  0490  3001               	movwf	0+(?_printf)+02h
  1997  0491  00DA               	movlw	0
  1998  0492  3000               	movwf	(0+(?_printf)+02h)+1
  1999  0493  00DB               	movlw	0
  2000  0494  3000               	movwf	0+(?_printf)+04h
  2001  0495  00DC               	movwf	1+(?_printf)+04h
  2002  0496  00DD               	fcall	_printf
  2003  0497  3186  26C8  3184   	line	42
  2004                           	
  2005                           l1430:	
  2006  049A                     ;PTSymmetryController.c: 42:     _delay((unsigned long)((3000)*(32000000/4000.0)));
  2007                           	opt asmopt_push
  2008                           opt asmopt_off
  2009                           movlw  122
  2010  049A  307A               	movlb 0	; select bank0
  2011  049B  0020               movwf	((??_main+0)+0+1),f
  2012  049C  00E3               movlw	193
  2013  049D  30C1               movwf	((??_main+0)+0),f
  2014  049E  00E2               	movlw	129
  2015  049F  3081               u1477:
  2016  04A0                     decfsz	wreg
  2017  04A0  0B89               	goto	u1477
  2018  04A1  2CA0               	decfsz	((??_main+0)+0),f
  2019  04A2  0BE2               	goto	u1477
  2020  04A3  2CA0               	decfsz	((??_main+0)+0+1),f
  2021  04A4  0BE3               	goto	u1477
  2022  04A5  2CA0               	nop2
  2023  04A6  3200               opt asmopt_pop
  2024                           
  2025                           	line	43
  2026                           ;PTSymmetryController.c: 43:     printf("Set pendulums in motion, then press Start");
  2027                           	movlw	low(((STR_2)|8000h))
  2028  04A7  3016               	movlb 0	; select bank0
  2029  04A8  0020               	movwf	(printf@fmt)
  2030  04A9  00D8               	movlw	high(((STR_2)|8000h))
  2031  04AA  3086               	movwf	((printf@fmt))+1
  2032  04AB  00D9               	fcall	_printf
  2033  04AC  3186  26C8  3184   	line	45
  2034                           ;PTSymmetryController.c: 45:     while(RA4);
  2035                           	goto	l43
  2036  04AF  2CB0               	
  2037                           l44:	
  2038  04B0                     	
  2039                           l43:	
  2040  04B0                     	movlb 0	; select bank0
  2041  04B0  0020               	btfsc	(100/8),(100)&7	;volatile
  2042  04B1  1A0C               	goto	u1431
  2043  04B2  2CB4               	goto	u1430
  2044  04B3  2CB5               u1431:
  2045  04B4                     	goto	l43
  2046  04B4  2CB0               u1430:
  2047  04B5                     	
  2048                           l45:	
  2049  04B5                     	line	46
  2050                           ;PTSymmetryController.c: 46:     RA5 = 0;
  2051                           	bcf	(101/8),(101)&7	;volatile
  2052  04B5  128C               	line	47
  2053                           ;PTSymmetryController.c: 47:     while(!RA4);
  2054                           	goto	l46
  2055  04B6  2CB7               	
  2056                           l47:	
  2057  04B7                     	
  2058                           l46:	
  2059  04B7                     	btfss	(100/8),(100)&7	;volatile
  2060  04B7  1E0C               	goto	u1441
  2061  04B8  2CBA               	goto	u1440
  2062  04B9  2CBB               u1441:
  2063  04BA                     	goto	l46
  2064  04BA  2CB7               u1440:
  2065  04BB                     	
  2066                           l48:	
  2067  04BB                     	line	48
  2068                           ;PTSymmetryController.c: 48:     RA5 = 1;
  2069                           	bsf	(101/8),(101)&7	;volatile
  2070  04BB  168C               	line	49
  2071                           	
  2072                           l1432:	
  2073  04BC                     ;PTSymmetryController.c: 49:     printf("Running...");
  2074                           	movlw	low(((STR_3)|8000h))
  2075  04BC  30E0               	movwf	(printf@fmt)
  2076  04BD  00D8               	movlw	high(((STR_3)|8000h))
  2077  04BE  3086               	movwf	((printf@fmt))+1
  2078  04BF  00D9               	fcall	_printf
  2079  04C0  3186  26C8  3184   	line	51
  2080                           ;PTSymmetryController.c: 51:     while(dampeningPendulum.timeCounts < 21 && drivingPendu
                                 lum.timeCounts < 21);
  2081                           	goto	l1434
  2082  04C3  2CC5               	
  2083                           l50:	
  2084  04C4                     	goto	l1434
  2085  04C4  2CC5               	
  2086                           l49:	
  2087  04C5                     	
  2088                           l1434:	
  2089  04C5                     	movlw	low(015h)
  2090  04C5  3015               	movlb 1	; select bank1
  2091  04C6  0021               	subwf	(_dampeningPendulum)^080h,w	;volatile
  2092  04C7  0220               	skipnc
  2093  04C8  1803               	goto	u1451
  2094  04C9  2CCB               	goto	u1450
  2095  04CA  2CCC               u1451:
  2096  04CB                     	goto	l1438
  2097  04CB  2CD5               u1450:
  2098  04CC                     	
  2099                           l1436:	
  2100  04CC                     	movlw	low(015h)
  2101  04CC  3015               	movlb 2	; select bank2
  2102  04CD  0022               	subwf	(_drivingPendulum)^0100h,w	;volatile
  2103  04CE  0220               	skipc
  2104  04CF  1C03               	goto	u1461
  2105  04D0  2CD2               	goto	u1460
  2106  04D1  2CD3               u1461:
  2107  04D2                     	goto	l1434
  2108  04D2  2CC5               u1460:
  2109  04D3                     	goto	l1438
  2110  04D3  2CD5               	
  2111                           l52:	
  2112  04D4                     	goto	l1438
  2113  04D4  2CD5               	
  2114                           l53:	
  2115  04D5                     	line	53
  2116                           	
  2117                           l1438:	
  2118  04D5                     ;PTSymmetryController.c: 53:     calculatePartialPeriods(&dampeningPendulum);
  2119                           	movlw	low(_dampeningPendulum)
  2120  04D5  30A0               	movlb 0	; select bank0
  2121  04D6  0020               	movwf	(calculatePartialPeriods@pendulum)
  2122  04D7  00A5               	movlw	high(_dampeningPendulum)
  2123  04D8  3000               	movwf	(calculatePartialPeriods@pendulum+1)
  2124  04D9  00A6               	fcall	_calculatePartialPeriods
  2125  04DA  3181  218D  3184   	line	54
  2126                           ;PTSymmetryController.c: 54:     calculatePartialPeriods(&drivingPendulum);
  2127                           	movlw	low(_drivingPendulum)
  2128  04DD  3020               	movlb 0	; select bank0
  2129  04DE  0020               	movwf	(calculatePartialPeriods@pendulum)
  2130  04DF  00A5               	movlw	high(_drivingPendulum)
  2131  04E0  3001               	movwf	(calculatePartialPeriods@pendulum+1)
  2132  04E1  00A6               	fcall	_calculatePartialPeriods
  2133  04E2  3181  218D  3184   	goto	l1440
  2134  04E5  2CE6               	line	56
  2135                           ;PTSymmetryController.c: 56:     while(1) {
  2136                           	
  2137                           l54:	
  2138  04E6                     	line	57
  2139                           	
  2140                           l1440:	
  2141  04E6                     ;PTSymmetryController.c: 57:         if (RC1) {
  2142                           	line	59
  2143                           ;PTSymmetryController.c: 59:         }
  2144                           	
  2145                           l55:	
  2146  04E6                     	line	60
  2147                           ;PTSymmetryController.c: 60:         if (RC2) {
  2148                           	goto	l1440
  2149  04E6  2CE6               	line	62
  2150                           ;PTSymmetryController.c: 62:         }
  2151                           	
  2152                           l56:	
  2153  04E7                     	goto	l1440
  2154  04E7  2CE6               	line	63
  2155                           ;PTSymmetryController.c: 63:     }
  2156                           	
  2157                           l57:	
  2158  04E8                     	goto	l1440
  2159  04E8  2CE6               	
  2160                           l58:	
  2161  04E9                     	line	65
  2162                           ;PTSymmetryController.c: 65:     RA5 = 0;
  2163                           	movlb 0	; select bank0
  2164  04E9  0020               	bcf	(101/8),(101)&7	;volatile
  2165  04EA  128C               	line	68
  2166                           ;PTSymmetryController.c: 67:     return;
  2167                           	
  2168                           l59:	
  2169  04EB                     	global	start
  2170                           	ljmp	start
  2171  04EB  2848               	opt stack 0
  2172                           GLOBAL	__end_of_main
  2173                           	__end_of_main:
  2174  04EC                     	signat	_main,89
  2175                           	global	_printf
  2176                           
  2177 ;; *************** function _printf *****************
  2178 ;; Defined at:
  2179 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\printf.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  fmt             2   56[BANK0 ] PTR const unsigned char 
  2182 ;;		 -> STR_3(11), STR_2(42), STR_1(24), 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  ret             2   63[BANK0 ] int 
  2185 ;;  ap              1   65[BANK0 ] PTR void [1]
  2186 ;;		 -> ?_printf(2), 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  2   56[BANK0 ] int 
  2189 ;; Registers used:
  2190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2196 ;;      Params:         0       6       0       0
  2197 ;;      Locals:         0       3       0       0
  2198 ;;      Temps:          0       1       0       0
  2199 ;;      Totals:         0      10       0       0
  2200 ;;Total ram usage:       10 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    8
  2203 ;; This function calls:
  2204 ;;		_vfprintf
  2205 ;; This function is called by:
  2206 ;;		_main
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           psect	text1,local,class=CODE,delta=2,merge=1,group=2
  2210                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\printf.c"
  2211                           	line	5
  2212                           global __ptext1
  2213                           __ptext1:	;psect for function _printf
  2214  06C8                     psect	text1
  2215                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\printf.c"
  2216                           	line	5
  2217                           	global	__size_of_printf
  2218                           	__size_of_printf	equ	__end_of_printf-_printf
  2219  0018                     	
  2220                           _printf:	
  2221  06C8                     ;incstack = 0
  2222                           	opt	stack 7
  2223                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2224                           	line	9
  2225                           	
  2226                           l1318:	
  2227  06C8                     	movlw	(low(?_printf|((0x0)<<8)+02h))&0ffh
  2228  06C8  305A               	movlb 0	; select bank0
  2229  06C9  0020               	movwf	(??_printf+0)+0
  2230  06CA  00DE               	movf	(??_printf+0)+0,w
  2231  06CB  085E               	movwf	(printf@ap)
  2232  06CC  00E1               	line	10
  2233                           	
  2234                           l1320:	
  2235  06CD                     	movf	(printf@fmt+1),w
  2236  06CD  0859               	movwf	(vfprintf@fmt+1)
  2237  06CE  00D1               	movf	(printf@fmt),w
  2238  06CF  0858               	movwf	(vfprintf@fmt)
  2239  06D0  00D0               	movlw	(low(printf@ap|((0x0)<<8)))&0ffh
  2240  06D1  3061               	movwf	(??_printf+0)+0
  2241  06D2  00DE               	movf	(??_printf+0)+0,w
  2242  06D3  085E               	movwf	(vfprintf@ap)
  2243  06D4  00D2               	movlw	low(0)
  2244  06D5  3000               	fcall	_vfprintf
  2245  06D6  3185  25EB  3186   	movlb 0	; select bank0
  2246  06D9  0020               	movf	(1+(?_vfprintf)),w
  2247  06DA  0851               	movwf	(printf@ret+1)
  2248  06DB  00E0               	movf	(0+(?_vfprintf)),w
  2249  06DC  0850               	movwf	(printf@ret)
  2250  06DD  00DF               	goto	l697
  2251  06DE  2EDF               	line	12
  2252                           	
  2253                           l1322:	
  2254  06DF                     	line	13
  2255                           ;	Return value of _printf is never used
  2256                           	
  2257                           l697:	
  2258  06DF                     	return
  2259  06DF  0008               	opt stack 0
  2260                           GLOBAL	__end_of_printf
  2261                           	__end_of_printf:
  2262  06E0                     	signat	_printf,602
  2263                           	global	_vfprintf
  2264                           
  2265 ;; *************** function _vfprintf *****************
  2266 ;; Defined at:
  2267 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  fp              1    wreg     PTR struct _IO_FILE
  2270 ;;		 -> NULL(0), 
  2271 ;;  fmt             2   48[BANK0 ] PTR const unsigned char 
  2272 ;;		 -> STR_3(11), STR_2(42), STR_1(24), 
  2273 ;;  ap              1   50[BANK0 ] PTR PTR void 
  2274 ;;		 -> printf@ap(1), 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  fp              1   53[BANK0 ] PTR struct _IO_FILE
  2277 ;;		 -> NULL(0), 
  2278 ;;  cfmt            2   54[BANK0 ] PTR unsigned char 
  2279 ;;		 -> STR_3(11), STR_2(42), STR_1(24), 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  2   48[BANK0 ] int 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2289 ;;      Params:         0       3       0       0
  2290 ;;      Locals:         0       3       0       0
  2291 ;;      Temps:          0       2       0       0
  2292 ;;      Totals:         0       8       0       0
  2293 ;;Total ram usage:        8 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    7
  2296 ;; This function calls:
  2297 ;;		_vfpfcnvrt
  2298 ;; This function is called by:
  2299 ;;		_printf
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2303                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2304                           	line	1368
  2305                           global __ptext2
  2306                           __ptext2:	;psect for function _vfprintf
  2307  05EB                     psect	text2
  2308                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2309                           	line	1368
  2310                           	global	__size_of_vfprintf
  2311                           	__size_of_vfprintf	equ	__end_of_vfprintf-_vfprintf
  2312  002B                     	
  2313                           _vfprintf:	
  2314  05EB                     ;incstack = 0
  2315                           	opt	stack 7
  2316                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2317                           ;vfprintf@fp stored from wreg
  2318                           	movlb 0	; select bank0
  2319  05EB  0020               	movwf	(vfprintf@fp)
  2320  05EC  00D5               	line	1373
  2321                           	
  2322                           l1282:	
  2323  05ED                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int v
                                 fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
                                 0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pi
                                 c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
                                 8\v2.00\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2324                           	movf	(vfprintf@fmt+1),w
  2325  05ED  0851               	movwf	(vfprintf@cfmt+1)
  2326  05EE  00D7               	movf	(vfprintf@fmt),w
  2327  05EF  0850               	movwf	(vfprintf@cfmt)
  2328  05F0  00D6               	line	1374
  2329                           	
  2330                           l1284:	
  2331  05F1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     n
                                 out = 0;
  2332                           	clrf	(_nout)
  2333  05F1  01E4               	clrf	(_nout+1)
  2334  05F2  01E5               	line	1375
  2335                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  2336                           	goto	l1288
  2337  05F3  2E06               	
  2338                           l226:	
  2339  05F4                     	line	1376
  2340                           	
  2341                           l1286:	
  2342  05F4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:      
                                    nout += vfpfcnvrt(fp, &cfmt, ap);
  2343                           	movlw	(low(vfprintf@cfmt|((0x0)<<8)))&0ffh
  2344  05F4  3056               	movwf	(??_vfprintf+0)+0
  2345  05F5  00D3               	movf	(??_vfprintf+0)+0,w
  2346  05F6  0853               	movwf	(vfpfcnvrt@fmt)
  2347  05F7  00C4               	movf	(vfprintf@ap),w
  2348  05F8  0852               	movwf	(??_vfprintf+1)+0
  2349  05F9  00D4               	movf	(??_vfprintf+1)+0,w
  2350  05FA  0854               	movwf	(vfpfcnvrt@ap)
  2351  05FB  00C5               	movf	(vfprintf@fp),w
  2352  05FC  0855               	fcall	_vfpfcnvrt
  2353  05FD  3182  2290  3185   	movlb 0	; select bank0
  2354  0600  0020               	movf	(0+(?_vfpfcnvrt)),w
  2355  0601  0844               	addwf	(_nout),f
  2356  0602  07E4               	movf	(1+(?_vfpfcnvrt)),w
  2357  0603  0845               	addwfc	(_nout+1),f
  2358  0604  3DE5               	goto	l1288
  2359  0605  2E06               	line	1377
  2360                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1377:     }
                                 
  2361                           	
  2362                           l225:	
  2363  0606                     	line	1375
  2364                           	
  2365                           l1288:	
  2366  0606                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  2367                           	movf	(vfprintf@cfmt),w
  2368  0606  0856               	movwf	fsr0l
  2369  0607  0084               	movf	((vfprintf@cfmt+1)),w
  2370  0608  0857               	movwf	fsr0h
  2371  0609  0085               	moviw	fsr0++
  2372  060A  0012               	btfss	status,2
  2373  060B  1D03               	goto	u1191
  2374  060C  2E0E               	goto	u1190
  2375  060D  2E0F               u1191:
  2376  060E                     	goto	l1286
  2377  060E  2DF4               u1190:
  2378  060F                     	goto	l1290
  2379  060F  2E10               	
  2380                           l227:	
  2381  0610                     	line	1378
  2382                           	
  2383                           l1290:	
  2384  0610                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     r
                                 eturn nout;
  2385                           	movf	(_nout+1),w
  2386  0610  0865               	movwf	(?_vfprintf+1)
  2387  0611  00D1               	movf	(_nout),w
  2388  0612  0864               	movwf	(?_vfprintf)
  2389  0613  00D0               	goto	l228
  2390  0614  2E15               	
  2391                           l1292:	
  2392  0615                     	line	1382
  2393                           	
  2394                           l228:	
  2395  0615                     	return
  2396  0615  0008               	opt stack 0
  2397                           GLOBAL	__end_of_vfprintf
  2398                           	__end_of_vfprintf:
  2399  0616                     	signat	_vfprintf,12410
  2400                           	global	_vfpfcnvrt
  2401                           
  2402 ;; *************** function _vfpfcnvrt *****************
  2403 ;; Defined at:
  2404 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  fp              1    wreg     PTR struct _IO_FILE
  2407 ;;		 -> NULL(0), 
  2408 ;;  fmt             1   36[BANK0 ] PTR PTR unsigned char 
  2409 ;;		 -> vfprintf@cfmt(2), 
  2410 ;;  ap              1   37[BANK0 ] PTR PTR void 
  2411 ;;		 -> printf@ap(1), 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  fp              1   47[BANK0 ] PTR struct _IO_FILE
  2414 ;;		 -> NULL(0), 
  2415 ;;  ll              4   43[BANK0 ] long 
  2416 ;;  f               4    0        long 
  2417 ;;  llu             4    0        unsigned long 
  2418 ;;  ct              3    0        unsigned char [3]
  2419 ;;  vp              2    0        PTR void 
  2420 ;;  i               2    0        int 
  2421 ;;  done            2    0        int 
  2422 ;;  cp              2    0        PTR unsigned char 
  2423 ;;  c               1    0        unsigned char 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  2   36[BANK0 ] int 
  2426 ;; Registers used:
  2427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2433 ;;      Params:         0       2       0       0
  2434 ;;      Locals:         0       5       0       0
  2435 ;;      Temps:          0       5       0       0
  2436 ;;      Totals:         0      12       0       0
  2437 ;;Total ram usage:       12 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    6
  2440 ;; This function calls:
  2441 ;;		_dtoa
  2442 ;;		_fputc
  2443 ;; This function is called by:
  2444 ;;		_vfprintf
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2448                           	line	670
  2449                           global __ptext3
  2450                           __ptext3:	;psect for function _vfpfcnvrt
  2451  0290                     psect	text3
  2452                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2453                           	line	670
  2454                           	global	__size_of_vfpfcnvrt
  2455                           	__size_of_vfpfcnvrt	equ	__end_of_vfpfcnvrt-_vfpfcnvrt
  2456  00D5                     	
  2457                           _vfpfcnvrt:	
  2458  0290                     ;incstack = 0
  2459                           	opt	stack 7
  2460                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2461                           ;vfpfcnvrt@fp stored from wreg
  2462                           	movlb 0	; select bank0
  2463  0290  0020               	movwf	(vfpfcnvrt@fp)
  2464  0291  00CF               	line	680
  2465                           	
  2466                           l1238:	
  2467  0292                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static
                                  int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
                                 2.00\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
                                 rochip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
                                  (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2468                           	movf	(vfpfcnvrt@fmt),w
  2469  0292  0844               	movwf	fsr1l
  2470  0293  0086               	clrf fsr1h	
  2471  0294  0187               	
  2472                           	moviw	[0]fsr1
  2473  0295  3F40               	movwf	(??_vfpfcnvrt+0)+0
  2474  0296  00C6               	moviw	[1]fsr1
  2475  0297  3F41               	movwf	(??_vfpfcnvrt+0)+0+1
  2476  0298  00C7               	movf	0+(??_vfpfcnvrt+0)+0,w
  2477  0299  0846               	movwf	fsr0l
  2478  029A  0084               	movf	(1+(??_vfpfcnvrt+0)+0),w
  2479  029B  0847               	movwf	fsr0h
  2480  029C  0085               	moviw	fsr0++
  2481  029D  0012               xorlw	37
  2482  029E  3A25               	btfss	status,2
  2483  029F  1D03               	goto	u1151
  2484  02A0  2AA2               	goto	u1150
  2485  02A1  2AA3               u1151:
  2486  02A2                     	goto	l1274
  2487  02A2  2B3D               u1150:
  2488  02A3                     	line	681
  2489                           	
  2490                           l1240:	
  2491  02A3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:       
                                   ++*fmt;
  2492                           	movf	(vfpfcnvrt@fmt),w
  2493  02A3  0844               	movwf	fsr1l
  2494  02A4  0086               	clrf fsr1h	
  2495  02A5  0187               	
  2496                           	movlw	01h
  2497  02A6  3001               	addwf	indf1,f
  2498  02A7  0781               	addfsr	fsr1,1
  2499  02A8  3141               	skipnc
  2500  02A9  1803               	incf	indf1,f
  2501  02AA  0A81               	line	683
  2502                           	
  2503                           l1242:	
  2504  02AB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:       
                                   flags = width = 0;
  2505                           	clrf	(_width)
  2506  02AB  01E6               	clrf	(_width+1)
  2507  02AC  01E7               	clrf	(_flags)
  2508  02AD  01EA               	clrf	(_flags+1)
  2509  02AE  01EB               	line	684
  2510                           	
  2511                           l1244:	
  2512  02AF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:       
                                   prec = -1;
  2513                           	movlw	0FFh
  2514  02AF  30FF               	movwf	(_prec)
  2515  02B0  00E8               	movlw	0FFh
  2516  02B1  30FF               	movwf	((_prec))+1
  2517  02B2  00E9               	line	825
  2518                           	
  2519                           l1246:	
  2520  02B3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 825:       
                                   if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2521                           	movf	(vfpfcnvrt@fmt),w
  2522  02B3  0844               	movwf	fsr1l
  2523  02B4  0086               	clrf fsr1h	
  2524  02B5  0187               	
  2525                           	moviw	[0]fsr1
  2526  02B6  3F40               	movwf	(??_vfpfcnvrt+0)+0
  2527  02B7  00C6               	moviw	[1]fsr1
  2528  02B8  3F41               	movwf	(??_vfpfcnvrt+0)+0+1
  2529  02B9  00C7               	movf	0+(??_vfpfcnvrt+0)+0,w
  2530  02BA  0846               	movwf	fsr0l
  2531  02BB  0084               	movf	(1+(??_vfpfcnvrt+0)+0),w
  2532  02BC  0847               	movwf	fsr0h
  2533  02BD  0085               	moviw	fsr0++
  2534  02BE  0012               xorlw	100
  2535  02BF  3A64               	btfsc	status,2
  2536  02C0  1903               	goto	u1161
  2537  02C1  2AC3               	goto	u1160
  2538  02C2  2AC4               u1161:
  2539  02C3                     	goto	l1250
  2540  02C3  2AD6               u1160:
  2541  02C4                     	
  2542                           l1248:	
  2543  02C4                     	movf	(vfpfcnvrt@fmt),w
  2544  02C4  0844               	movwf	fsr1l
  2545  02C5  0086               	clrf fsr1h	
  2546  02C6  0187               	
  2547                           	moviw	[0]fsr1
  2548  02C7  3F40               	movwf	(??_vfpfcnvrt+0)+0
  2549  02C8  00C6               	moviw	[1]fsr1
  2550  02C9  3F41               	movwf	(??_vfpfcnvrt+0)+0+1
  2551  02CA  00C7               	movf	0+(??_vfpfcnvrt+0)+0,w
  2552  02CB  0846               	movwf	fsr0l
  2553  02CC  0084               	movf	(1+(??_vfpfcnvrt+0)+0),w
  2554  02CD  0847               	movwf	fsr0h
  2555  02CE  0085               	moviw	fsr0++
  2556  02CF  0012               xorlw	105
  2557  02D0  3A69               	btfss	status,2
  2558  02D1  1D03               	goto	u1171
  2559  02D2  2AD4               	goto	u1170
  2560  02D3  2AD5               u1171:
  2561  02D4                     	goto	l1258
  2562  02D4  2B06               u1170:
  2563  02D5                     	goto	l1250
  2564  02D5  2AD6               	
  2565                           l220:	
  2566  02D6                     	line	827
  2567                           	
  2568                           l1250:	
  2569  02D6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 827:       
                                       ++*fmt;
  2570                           	movf	(vfpfcnvrt@fmt),w
  2571  02D6  0844               	movwf	fsr1l
  2572  02D7  0086               	clrf fsr1h	
  2573  02D8  0187               	
  2574                           	movlw	01h
  2575  02D9  3001               	addwf	indf1,f
  2576  02DA  0781               	addfsr	fsr1,1
  2577  02DB  3141               	skipnc
  2578  02DC  1803               	incf	indf1,f
  2579  02DD  0A81               	line	828
  2580                           	
  2581                           l1252:	
  2582  02DE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 828:       
                                       ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2583                           	movf	(vfpfcnvrt@ap),w
  2584  02DE  0845               	movwf	fsr1l
  2585  02DF  0086               	clrf fsr1h	
  2586  02E0  0187               	
  2587                           	movf	indf1,w
  2588  02E1  0801               	movwf	fsr0l
  2589  02E2  0084               	clrf fsr0h	
  2590  02E3  0185               	
  2591                           	movlw	02h
  2592  02E4  3002               	addwf	indf1,f
  2593  02E5  0781               	moviw	[0]fsr0
  2594  02E6  3F00               	movwf	(??_vfpfcnvrt+0)+0
  2595  02E7  00C6               	moviw	[1]fsr0
  2596  02E8  3F01               	movwf	(??_vfpfcnvrt+0)+0+1
  2597  02E9  00C7               	movf	0+(??_vfpfcnvrt+0)+0,w
  2598  02EA  0846               	movwf	(vfpfcnvrt@ll)
  2599  02EB  00CB               	movf	1+(??_vfpfcnvrt+0)+0,w
  2600  02EC  0847               	movwf	(vfpfcnvrt@ll+1)
  2601  02ED  00CC               	rlf	wreg,f
  2602  02EE  0D89               	subwfb	wreg,f
  2603  02EF  3B89               	comf	wreg,f
  2604  02F0  0989               	movwf	(vfpfcnvrt@ll+2)
  2605  02F1  00CD               	movwf	(vfpfcnvrt@ll+3)
  2606  02F2  00CE               	line	830
  2607                           	
  2608                           l1254:	
  2609  02F3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 830:       
                                       return dtoa(fp, ll);
  2610                           	movf	(vfpfcnvrt@ll+3),w
  2611  02F3  084E               	movwf	(dtoa@d+3)
  2612  02F4  00B2               	movf	(vfpfcnvrt@ll+2),w
  2613  02F5  084D               	movwf	(dtoa@d+2)
  2614  02F6  00B1               	movf	(vfpfcnvrt@ll+1),w
  2615  02F7  084C               	movwf	(dtoa@d+1)
  2616  02F8  00B0               	movf	(vfpfcnvrt@ll),w
  2617  02F9  084B               	movwf	(dtoa@d)
  2618  02FA  00AF               
  2619                           	movf	(vfpfcnvrt@fp),w
  2620  02FB  084F               	fcall	_dtoa
  2621  02FC  3180  2064  3182   	movlb 0	; select bank0
  2622  02FF  0020               	movf	(1+(?_dtoa)),w
  2623  0300  0830               	movwf	(?_vfpfcnvrt+1)
  2624  0301  00C5               	movf	(0+(?_dtoa)),w
  2625  0302  082F               	movwf	(?_vfpfcnvrt)
  2626  0303  00C4               	goto	l221
  2627  0304  2B64               	
  2628                           l1256:	
  2629  0305                     	goto	l221
  2630  0305  2B64               	line	831
  2631                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 831:       
                                   }
  2632                           	
  2633                           l218:	
  2634  0306                     	line	1350
  2635                           	
  2636                           l1258:	
  2637  0306                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:      
                                    if ((*fmt)[0] == '%') {
  2638                           	movf	(vfpfcnvrt@fmt),w
  2639  0306  0844               	movwf	fsr1l
  2640  0307  0086               	clrf fsr1h	
  2641  0308  0187               	
  2642                           	moviw	[0]fsr1
  2643  0309  3F40               	movwf	(??_vfpfcnvrt+0)+0
  2644  030A  00C6               	moviw	[1]fsr1
  2645  030B  3F41               	movwf	(??_vfpfcnvrt+0)+0+1
  2646  030C  00C7               	movf	0+(??_vfpfcnvrt+0)+0,w
  2647  030D  0846               	movwf	fsr0l
  2648  030E  0084               	movf	(1+(??_vfpfcnvrt+0)+0),w
  2649  030F  0847               	movwf	fsr0h
  2650  0310  0085               	moviw	fsr0++
  2651  0311  0012               xorlw	37
  2652  0312  3A25               	btfss	status,2
  2653  0313  1D03               	goto	u1181
  2654  0314  2B16               	goto	u1180
  2655  0315  2B17               u1181:
  2656  0316                     	goto	l1268
  2657  0316  2B31               u1180:
  2658  0317                     	line	1351
  2659                           	
  2660                           l1260:	
  2661  0317                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:      
                                        ++*fmt;
  2662                           	movf	(vfpfcnvrt@fmt),w
  2663  0317  0844               	movwf	fsr1l
  2664  0318  0086               	clrf fsr1h	
  2665  0319  0187               	
  2666                           	movlw	01h
  2667  031A  3001               	addwf	indf1,f
  2668  031B  0781               	addfsr	fsr1,1
  2669  031C  3141               	skipnc
  2670  031D  1803               	incf	indf1,f
  2671  031E  0A81               	line	1352
  2672                           	
  2673                           l1262:	
  2674  031F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:      
                                        fputc((int)'%', fp);
  2675                           	movlw	025h
  2676  031F  3025               	movwf	(fputc@c)
  2677  0320  00F2               	movlw	0
  2678  0321  3000               	movwf	((fputc@c))+1
  2679  0322  00F3               	movf	(vfpfcnvrt@fp),w
  2680  0323  084F               	movwf	(??_vfpfcnvrt+0)+0
  2681  0324  00C6               	movf	(??_vfpfcnvrt+0)+0,w
  2682  0325  0846               	movwf	(fputc@fp)
  2683  0326  00F4               	fcall	_fputc
  2684  0327  3185  25A7  3182   	line	1353
  2685                           	
  2686                           l1264:	
  2687  032A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:      
                                        return 1;
  2688                           	movlw	01h
  2689  032A  3001               	movlb 0	; select bank0
  2690  032B  0020               	movwf	(?_vfpfcnvrt)
  2691  032C  00C4               	movlw	0
  2692  032D  3000               	movwf	((?_vfpfcnvrt))+1
  2693  032E  00C5               	goto	l221
  2694  032F  2B64               	
  2695                           l1266:	
  2696  0330                     	goto	l221
  2697  0330  2B64               	line	1354
  2698                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1354:      
                                    }
  2699                           	
  2700                           l222:	
  2701  0331                     	line	1357
  2702                           	
  2703                           l1268:	
  2704  0331                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:      
                                    ++*fmt;
  2705                           	movf	(vfpfcnvrt@fmt),w
  2706  0331  0844               	movwf	fsr1l
  2707  0332  0086               	clrf fsr1h	
  2708  0333  0187               	
  2709                           	movlw	01h
  2710  0334  3001               	addwf	indf1,f
  2711  0335  0781               	addfsr	fsr1,1
  2712  0336  3141               	skipnc
  2713  0337  1803               	incf	indf1,f
  2714  0338  0A81               	line	1358
  2715                           	
  2716                           l1270:	
  2717  0339                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:      
                                    return 0;
  2718                           	clrf	(?_vfpfcnvrt)
  2719  0339  01C4               	clrf	(?_vfpfcnvrt+1)
  2720  033A  01C5               	goto	l221
  2721  033B  2B64               	
  2722                           l1272:	
  2723  033C                     	goto	l221
  2724  033C  2B64               	line	1359
  2725                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1359:     }
                                 
  2726                           	
  2727                           l217:	
  2728  033D                     	line	1362
  2729                           	
  2730                           l1274:	
  2731  033D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     f
                                 putc((int)(*fmt)[0], fp);
  2732                           	movf	(vfpfcnvrt@fmt),w
  2733  033D  0844               	movwf	fsr1l
  2734  033E  0086               	clrf fsr1h	
  2735  033F  0187               	
  2736                           	moviw	[0]fsr1
  2737  0340  3F40               	movwf	(??_vfpfcnvrt+0)+0
  2738  0341  00C6               	moviw	[1]fsr1
  2739  0342  3F41               	movwf	(??_vfpfcnvrt+0)+0+1
  2740  0343  00C7               	movf	0+(??_vfpfcnvrt+0)+0,w
  2741  0344  0846               	movwf	fsr0l
  2742  0345  0084               	movf	(1+(??_vfpfcnvrt+0)+0),w
  2743  0346  0847               	movwf	fsr0h
  2744  0347  0085               	movf	indf0,w ;code access
  2745  0348  0800               	movwf	(??_vfpfcnvrt+2)+0
  2746  0349  00C8               	clrf	(??_vfpfcnvrt+2)+0+1
  2747  034A  01C9               	movf	0+(??_vfpfcnvrt+2)+0,w
  2748  034B  0848               	movwf	(fputc@c)
  2749  034C  00F2               	movf	1+(??_vfpfcnvrt+2)+0,w
  2750  034D  0849               	movwf	(fputc@c+1)
  2751  034E  00F3               	movf	(vfpfcnvrt@fp),w
  2752  034F  084F               	movwf	(??_vfpfcnvrt+4)+0
  2753  0350  00CA               	movf	(??_vfpfcnvrt+4)+0,w
  2754  0351  084A               	movwf	(fputc@fp)
  2755  0352  00F4               	fcall	_fputc
  2756  0353  3185  25A7  3182   	line	1363
  2757                           	
  2758                           l1276:	
  2759  0356                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     +
                                 +*fmt;
  2760                           	movlb 0	; select bank0
  2761  0356  0020               	movf	(vfpfcnvrt@fmt),w
  2762  0357  0844               	movwf	fsr1l
  2763  0358  0086               	clrf fsr1h	
  2764  0359  0187               	
  2765                           	movlw	01h
  2766  035A  3001               	addwf	indf1,f
  2767  035B  0781               	addfsr	fsr1,1
  2768  035C  3141               	skipnc
  2769  035D  1803               	incf	indf1,f
  2770  035E  0A81               	line	1364
  2771                           	
  2772                           l1278:	
  2773  035F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     r
                                 eturn 1;
  2774                           	movlw	01h
  2775  035F  3001               	movwf	(?_vfpfcnvrt)
  2776  0360  00C4               	movlw	0
  2777  0361  3000               	movwf	((?_vfpfcnvrt))+1
  2778  0362  00C5               	goto	l221
  2779  0363  2B64               	
  2780                           l1280:	
  2781  0364                     	line	1365
  2782                           	
  2783                           l221:	
  2784  0364                     	return
  2785  0364  0008               	opt stack 0
  2786                           GLOBAL	__end_of_vfpfcnvrt
  2787                           	__end_of_vfpfcnvrt:
  2788  0365                     	signat	_vfpfcnvrt,12410
  2789                           	global	_dtoa
  2790                           
  2791 ;; *************** function _dtoa *****************
  2792 ;; Defined at:
  2793 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  fp              1    wreg     PTR struct _IO_FILE
  2796 ;;		 -> NULL(0), 
  2797 ;;  d               4   15[BANK0 ] long 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  fp              1   25[BANK0 ] PTR struct _IO_FILE
  2800 ;;		 -> NULL(0), 
  2801 ;;  n               4   30[BANK0 ] long 
  2802 ;;  i               2   34[BANK0 ] int 
  2803 ;;  s               2   28[BANK0 ] int 
  2804 ;;  w               2   26[BANK0 ] int 
  2805 ;;  p               2   23[BANK0 ] int 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  2   15[BANK0 ] int 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2815 ;;      Params:         0       4       0       0
  2816 ;;      Locals:         0      15       0       0
  2817 ;;      Temps:          0       2       0       0
  2818 ;;      Totals:         0      21       0       0
  2819 ;;Total ram usage:       21 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    5
  2822 ;; This function calls:
  2823 ;;		___aldiv
  2824 ;;		___almod
  2825 ;;		_abs
  2826 ;;		_pad
  2827 ;; This function is called by:
  2828 ;;		_vfpfcnvrt
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2832                           	line	274
  2833                           global __ptext4
  2834                           __ptext4:	;psect for function _dtoa
  2835  0064                     psect	text4
  2836                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2837                           	line	274
  2838                           	global	__size_of_dtoa
  2839                           	__size_of_dtoa	equ	__end_of_dtoa-_dtoa
  2840  0129                     	
  2841                           _dtoa:	
  2842  0064                     ;incstack = 0
  2843                           	opt	stack 7
  2844                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2845                           ;dtoa@fp stored from wreg
  2846                           	movlb 0	; select bank0
  2847  0064  0020               	movwf	(dtoa@fp)
  2848  0065  00B9               	line	280
  2849                           	
  2850                           l1180:	
  2851  0066                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 274: static
                                  int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\
                                 c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\c
                                 ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\
                                 sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
                                 v2.00\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2852                           	movf	(dtoa@d+3),w
  2853  0066  0832               	movwf	(dtoa@n+3)
  2854  0067  00C1               	movf	(dtoa@d+2),w
  2855  0068  0831               	movwf	(dtoa@n+2)
  2856  0069  00C0               	movf	(dtoa@d+1),w
  2857  006A  0830               	movwf	(dtoa@n+1)
  2858  006B  00BF               	movf	(dtoa@d),w
  2859  006C  082F               	movwf	(dtoa@n)
  2860  006D  00BE               
  2861                           	line	281
  2862                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 281:     s 
                                 = n < 0 ? 1 : 0;
  2863                           	btfsc	(dtoa@n+3),7
  2864  006E  1BC1               	goto	u1001
  2865  006F  2871               	goto	u1000
  2866  0070  2873               u1001:
  2867  0071                     	movlw	1
  2868  0071  3001               	goto	u1010
  2869  0072  2874               u1000:
  2870  0073                     	movlw	0
  2871  0073  3000               u1010:
  2872  0074                     	movwf	(??_dtoa+0)+0
  2873  0074  00B3               	clrf	(??_dtoa+0)+0+1
  2874  0075  01B4               	movf	0+(??_dtoa+0)+0,w
  2875  0076  0833               	movwf	(dtoa@s)
  2876  0077  00BC               	movf	1+(??_dtoa+0)+0,w
  2877  0078  0834               	movwf	(dtoa@s+1)
  2878  0079  00BD               	line	282
  2879                           	
  2880                           l1182:	
  2881  007A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 282:     if
                                  (s) {
  2882                           	movf	((dtoa@s)),w
  2883  007A  083C               iorwf	((dtoa@s+1)),w
  2884  007B  043D               	btfsc	status,2
  2885  007C  1903               	goto	u1021
  2886  007D  287F               	goto	u1020
  2887  007E  2880               u1021:
  2888  007F                     	goto	l191
  2889  007F  288B               u1020:
  2890  0080                     	line	283
  2891                           	
  2892                           l1184:	
  2893  0080                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 283:       
                                   n = -n;
  2894                           	comf	(dtoa@n),f
  2895  0080  09BE               	comf	(dtoa@n+1),f
  2896  0081  09BF               	comf	(dtoa@n+2),f
  2897  0082  09C0               	comf	(dtoa@n+3),f
  2898  0083  09C1               	incf	(dtoa@n),f
  2899  0084  0ABE               	skipnz
  2900  0085  1903               	incf	(dtoa@n+1),f
  2901  0086  0ABF               	skipnz
  2902  0087  1903               	incf	(dtoa@n+2),f
  2903  0088  0AC0               	skipnz
  2904  0089  1903               	incf	(dtoa@n+3),f
  2905  008A  0AC1               	line	284
  2906                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 284:     }

  2907                           	
  2908                           l191:	
  2909  008B                     	line	287
  2910                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 287:     if
                                  (!(prec < 0)) {
  2911                           	btfsc	(_prec+1),7
  2912  008B  1BE9               	goto	u1031
  2913  008C  288E               	goto	u1030
  2914  008D  288F               u1031:
  2915  008E                     	goto	l192
  2916  008E  2893               u1030:
  2917  008F                     	line	288
  2918                           	
  2919                           l1186:	
  2920  008F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 288:       
                                   flags &= ~(1 << 1);
  2921                           	movlw	0FDh
  2922  008F  30FD               	andwf	(_flags),f
  2923  0090  05EA               	movlw	0FFh
  2924  0091  30FF               	andwf	(_flags+1),f
  2925  0092  05EB               	line	289
  2926                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 289:     }

  2927                           	
  2928                           l192:	
  2929  0093                     	line	290
  2930                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 290:     p 
                                 = (0 < prec) ? prec : 1;
  2931                           	movf	(_prec+1),w
  2932  0093  0869               	xorlw	80h
  2933  0094  3A80               	movwf	(??_dtoa+0)+0
  2934  0095  00B3               	movlw	(0)^80h
  2935  0096  3080               	subwf	(??_dtoa+0)+0,w
  2936  0097  0233               	skipz
  2937  0098  1D03               	goto	u1045
  2938  0099  289C               	movlw	01h
  2939  009A  3001               	subwf	(_prec),w
  2940  009B  0268               u1045:
  2941  009C                     
  2942                           	skipnc
  2943  009C  1803               	goto	u1041
  2944  009D  289F               	goto	u1040
  2945  009E  28A0               u1041:
  2946  009F                     	goto	l1190
  2947  009F  28A6               u1040:
  2948  00A0                     	
  2949                           l1188:	
  2950  00A0                     	movlw	01h
  2951  00A0  3001               	movlb 0	; select bank0
  2952  00A1  0020               	movwf	(dtoa@p)
  2953  00A2  00B7               	movlw	0
  2954  00A3  3000               	movwf	((dtoa@p))+1
  2955  00A4  00B8               	goto	l196
  2956  00A5  28AB               	
  2957                           l194:	
  2958  00A6                     	
  2959                           l1190:	
  2960  00A6                     	movlb 0	; select bank0
  2961  00A6  0020               	movf	(_prec+1),w
  2962  00A7  0869               	movwf	(dtoa@p+1)
  2963  00A8  00B8               	movf	(_prec),w
  2964  00A9  0868               	movwf	(dtoa@p)
  2965  00AA  00B7               	
  2966                           l196:	
  2967  00AB                     	line	291
  2968                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 291:     w 
                                 = width;
  2969                           	movf	(_width+1),w
  2970  00AB  0867               	movwf	(dtoa@w+1)
  2971  00AC  00BB               	movf	(_width),w
  2972  00AD  0866               	movwf	(dtoa@w)
  2973  00AE  00BA               	line	292
  2974                           	
  2975                           l1192:	
  2976  00AF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 292:     if
                                  (s || (flags & (1 << 2))) {
  2977                           	movf	((dtoa@s)),w
  2978  00AF  083C               iorwf	((dtoa@s+1)),w
  2979  00B0  043D               	btfss	status,2
  2980  00B1  1D03               	goto	u1051
  2981  00B2  28B4               	goto	u1050
  2982  00B3  28B5               u1051:
  2983  00B4                     	goto	l1196
  2984  00B4  28BA               u1050:
  2985  00B5                     	
  2986                           l1194:	
  2987  00B5                     	btfss	(_flags),(2)&7
  2988  00B5  1D6A               	goto	u1061
  2989  00B6  28B8               	goto	u1060
  2990  00B7  28B9               u1061:
  2991  00B8                     	goto	l197
  2992  00B8  28BE               u1060:
  2993  00B9                     	goto	l1196
  2994  00B9  28BA               	
  2995                           l199:	
  2996  00BA                     	line	293
  2997                           	
  2998                           l1196:	
  2999  00BA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 293:       
                                   --w;
  3000                           	movlw	0FFh
  3001  00BA  30FF               	addwf	(dtoa@w),f
  3002  00BB  07BA               	movlw	0FFh
  3003  00BC  30FF               	addwfc	(dtoa@w+1),f
  3004  00BD  3DBB               	line	294
  3005                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 294:     }

  3006                           	
  3007                           l197:	
  3008  00BE                     	line	297
  3009                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 297:     i 
                                 = sizeof(dbuf) - 1;
  3010                           	movlw	01Fh
  3011  00BE  301F               	movwf	(dtoa@i)
  3012  00BF  00C2               	movlw	0
  3013  00C0  3000               	movwf	((dtoa@i))+1
  3014  00C1  00C3               	line	298
  3015                           	
  3016                           l1198:	
  3017  00C2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 298:     db
                                 uf[i] = '\0';
  3018                           	movf	(dtoa@i),w
  3019  00C2  0842               	addlw	low(_dbuf|((0x0)<<8))&0ffh
  3020  00C3  3ECF               	movwf	fsr1l
  3021  00C4  0086               	clrf fsr1h	
  3022  00C5  0187               	
  3023                           	clrf	indf1
  3024  00C6  0181               	line	299
  3025                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
                                 ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3026                           	goto	l1210
  3027  00C7  2917               	
  3028                           l201:	
  3029  00C8                     	line	300
  3030                           	
  3031                           l1200:	
  3032  00C8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 300:       
                                   --i;
  3033                           	movlw	0FFh
  3034  00C8  30FF               	movlb 0	; select bank0
  3035  00C9  0020               	addwf	(dtoa@i),f
  3036  00CA  07C2               	movlw	0FFh
  3037  00CB  30FF               	addwfc	(dtoa@i+1),f
  3038  00CC  3DC3               	line	301
  3039                           	
  3040                           l1202:	
  3041  00CD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 301:       
                                   dbuf[i] = '0' + abs(n % 10);
  3042                           	movlw	0
  3043  00CD  3000               	movwf	(___almod@divisor+3)
  3044  00CE  00F5               	movlw	0
  3045  00CF  3000               	movwf	(___almod@divisor+2)
  3046  00D0  00F4               	movlw	0
  3047  00D1  3000               	movwf	(___almod@divisor+1)
  3048  00D2  00F3               	movlw	0Ah
  3049  00D3  300A               	movwf	(___almod@divisor)
  3050  00D4  00F2               
  3051                           	movf	(dtoa@n+3),w
  3052  00D5  0841               	movwf	(___almod@dividend+3)
  3053  00D6  00F9               	movf	(dtoa@n+2),w
  3054  00D7  0840               	movwf	(___almod@dividend+2)
  3055  00D8  00F8               	movf	(dtoa@n+1),w
  3056  00D9  083F               	movwf	(___almod@dividend+1)
  3057  00DA  00F7               	movf	(dtoa@n),w
  3058  00DB  083E               	movwf	(___almod@dividend)
  3059  00DC  00F6               
  3060                           	fcall	___almod
  3061  00DD  3183  23FE  3180   	movf	(1+(?___almod)),w
  3062  00E0  0873               	movlb 0	; select bank0
  3063  00E1  0020               	movwf	(abs@a+1)
  3064  00E2  00A3               	movf	(0+(?___almod)),w
  3065  00E3  0872               	movwf	(abs@a)
  3066  00E4  00A2               	fcall	_abs
  3067  00E5  3186  2693  3180   	movlb 0	; select bank0
  3068  00E8  0020               	movf	(0+(?_abs)),w
  3069  00E9  0822               	addlw	030h
  3070  00EA  3E30               	movwf	(??_dtoa+0)+0
  3071  00EB  00B3               	movf	(dtoa@i),w
  3072  00EC  0842               	addlw	low(_dbuf|((0x0)<<8))&0ffh
  3073  00ED  3ECF               	movwf	fsr1l
  3074  00EE  0086               	clrf fsr1h	
  3075  00EF  0187               	
  3076                           	movf	(??_dtoa+0)+0,w
  3077  00F0  0833               	movwf	indf1
  3078  00F1  0081               	line	302
  3079                           	
  3080                           l1204:	
  3081  00F2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 302:       
                                   --p;
  3082                           	movlw	0FFh
  3083  00F2  30FF               	addwf	(dtoa@p),f
  3084  00F3  07B7               	movlw	0FFh
  3085  00F4  30FF               	addwfc	(dtoa@p+1),f
  3086  00F5  3DB8               	line	303
  3087                           	
  3088                           l1206:	
  3089  00F6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 303:       
                                   --w;
  3090                           	movlw	0FFh
  3091  00F6  30FF               	addwf	(dtoa@w),f
  3092  00F7  07BA               	movlw	0FFh
  3093  00F8  30FF               	addwfc	(dtoa@w+1),f
  3094  00F9  3DBB               	line	304
  3095                           	
  3096                           l1208:	
  3097  00FA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 304:       
                                   n = n / 10;
  3098                           	movlw	0
  3099  00FA  3000               	movwf	(___aldiv@divisor+3)
  3100  00FB  00F5               	movlw	0
  3101  00FC  3000               	movwf	(___aldiv@divisor+2)
  3102  00FD  00F4               	movlw	0
  3103  00FE  3000               	movwf	(___aldiv@divisor+1)
  3104  00FF  00F3               	movlw	0Ah
  3105  0100  300A               	movwf	(___aldiv@divisor)
  3106  0101  00F2               
  3107                           	movf	(dtoa@n+3),w
  3108  0102  0841               	movwf	(___aldiv@dividend+3)
  3109  0103  00F9               	movf	(dtoa@n+2),w
  3110  0104  0840               	movwf	(___aldiv@dividend+2)
  3111  0105  00F8               	movf	(dtoa@n+1),w
  3112  0106  083F               	movwf	(___aldiv@dividend+1)
  3113  0107  00F7               	movf	(dtoa@n),w
  3114  0108  083E               	movwf	(___aldiv@dividend)
  3115  0109  00F6               
  3116                           	fcall	___aldiv
  3117  010A  3183  2365  3180   	movf	(3+(?___aldiv)),w
  3118  010D  0875               	movlb 0	; select bank0
  3119  010E  0020               	movwf	(dtoa@n+3)
  3120  010F  00C1               	movf	(2+(?___aldiv)),w
  3121  0110  0874               	movwf	(dtoa@n+2)
  3122  0111  00C0               	movf	(1+(?___aldiv)),w
  3123  0112  0873               	movwf	(dtoa@n+1)
  3124  0113  00BF               	movf	(0+(?___aldiv)),w
  3125  0114  0872               	movwf	(dtoa@n)
  3126  0115  00BE               
  3127                           	goto	l1210
  3128  0116  2917               	line	305
  3129                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 305:     }

  3130                           	
  3131                           l200:	
  3132  0117                     	line	299
  3133                           	
  3134                           l1210:	
  3135  0117                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
                                 ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3136                           	movf	(dtoa@i+1),w
  3137  0117  0843               	xorlw	80h
  3138  0118  3A80               	movwf	(??_dtoa+0)+0
  3139  0119  00B3               	movlw	(0)^80h
  3140  011A  3080               	subwf	(??_dtoa+0)+0,w
  3141  011B  0233               	skipz
  3142  011C  1D03               	goto	u1075
  3143  011D  2920               	movlw	01h
  3144  011E  3001               	subwf	(dtoa@i),w
  3145  011F  0242               u1075:
  3146  0120                     
  3147                           	skipc
  3148  0120  1C03               	goto	u1071
  3149  0121  2923               	goto	u1070
  3150  0122  2924               u1071:
  3151  0123                     	goto	l1220
  3152  0123  2950               u1070:
  3153  0124                     	
  3154                           l1212:	
  3155  0124                     	movlb 0	; select bank0
  3156  0124  0020               	movf	(dtoa@n+3),w
  3157  0125  0841               	iorwf	(dtoa@n+2),w
  3158  0126  0440               	iorwf	(dtoa@n+1),w
  3159  0127  043F               	iorwf	(dtoa@n),w
  3160  0128  043E               	skipz
  3161  0129  1D03               	goto	u1081
  3162  012A  292C               	goto	u1080
  3163  012B  292D               u1081:
  3164  012C                     	goto	l1200
  3165  012C  28C8               u1080:
  3166  012D                     	
  3167                           l1214:	
  3168  012D                     	movf	(dtoa@p+1),w
  3169  012D  0838               	xorlw	80h
  3170  012E  3A80               	movwf	(??_dtoa+0)+0
  3171  012F  00B3               	movlw	(0)^80h
  3172  0130  3080               	subwf	(??_dtoa+0)+0,w
  3173  0131  0233               	skipz
  3174  0132  1D03               	goto	u1095
  3175  0133  2936               	movlw	01h
  3176  0134  3001               	subwf	(dtoa@p),w
  3177  0135  0237               u1095:
  3178  0136                     
  3179                           	skipnc
  3180  0136  1803               	goto	u1091
  3181  0137  2939               	goto	u1090
  3182  0138  293A               u1091:
  3183  0139                     	goto	l1200
  3184  0139  28C8               u1090:
  3185  013A                     	
  3186                           l1216:	
  3187  013A                     	movlb 0	; select bank0
  3188  013A  0020               	movf	(dtoa@w+1),w
  3189  013B  083B               	xorlw	80h
  3190  013C  3A80               	movwf	(??_dtoa+0)+0
  3191  013D  00B3               	movlw	(0)^80h
  3192  013E  3080               	subwf	(??_dtoa+0)+0,w
  3193  013F  0233               	skipz
  3194  0140  1D03               	goto	u1105
  3195  0141  2944               	movlw	01h
  3196  0142  3001               	subwf	(dtoa@w),w
  3197  0143  023A               u1105:
  3198  0144                     
  3199                           	skipc
  3200  0144  1C03               	goto	u1101
  3201  0145  2947               	goto	u1100
  3202  0146  2948               u1101:
  3203  0147                     	goto	l1220
  3204  0147  2950               u1100:
  3205  0148                     	
  3206                           l1218:	
  3207  0148                     	movlb 0	; select bank0
  3208  0148  0020               	btfsc	(_flags),(1)&7
  3209  0149  18EA               	goto	u1111
  3210  014A  294C               	goto	u1110
  3211  014B  294D               u1111:
  3212  014C                     	goto	l1200
  3213  014C  28C8               u1110:
  3214  014D                     	goto	l1220
  3215  014D  2950               	
  3216                           l205:	
  3217  014E                     	goto	l1220
  3218  014E  2950               	
  3219                           l203:	
  3220  014F                     	goto	l1220
  3221  014F  2950               	
  3222                           l206:	
  3223  0150                     	line	308
  3224                           	
  3225                           l1220:	
  3226  0150                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 308:     if
                                  (s || (flags & (1 << 2))) {
  3227                           	movlb 0	; select bank0
  3228  0150  0020               	movf	((dtoa@s)),w
  3229  0151  083C               iorwf	((dtoa@s+1)),w
  3230  0152  043D               	btfss	status,2
  3231  0153  1D03               	goto	u1121
  3232  0154  2956               	goto	u1120
  3233  0155  2957               u1121:
  3234  0156                     	goto	l1224
  3235  0156  295C               u1120:
  3236  0157                     	
  3237                           l1222:	
  3238  0157                     	btfss	(_flags),(2)&7
  3239  0157  1D6A               	goto	u1131
  3240  0158  295A               	goto	u1130
  3241  0159  295B               u1131:
  3242  015A                     	goto	l1234
  3243  015A  2979               u1130:
  3244  015B                     	goto	l1224
  3245  015B  295C               	
  3246                           l209:	
  3247  015C                     	line	309
  3248                           	
  3249                           l1224:	
  3250  015C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 309:       
                                   --i;
  3251                           	movlw	0FFh
  3252  015C  30FF               	addwf	(dtoa@i),f
  3253  015D  07C2               	movlw	0FFh
  3254  015E  30FF               	addwfc	(dtoa@i+1),f
  3255  015F  3DC3               	line	310
  3256                           	
  3257                           l1226:	
  3258  0160                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 310:       
                                   dbuf[i] = s ? '-' : '+';
  3259                           	movf	((dtoa@s)),w
  3260  0160  083C               iorwf	((dtoa@s+1)),w
  3261  0161  043D               	btfss	status,2
  3262  0162  1D03               	goto	u1141
  3263  0163  2965               	goto	u1140
  3264  0164  2966               u1141:
  3265  0165                     	goto	l1230
  3266  0165  296B               u1140:
  3267  0166                     	
  3268                           l1228:	
  3269  0166                     	movlw	02Bh
  3270  0166  302B               	movwf	(_dtoa$270)
  3271  0167  00B5               	movlw	0
  3272  0168  3000               	movwf	((_dtoa$270))+1
  3273  0169  00B6               	goto	l1232
  3274  016A  2970               	
  3275                           l211:	
  3276  016B                     	
  3277                           l1230:	
  3278  016B                     	movlw	02Dh
  3279  016B  302D               	movwf	(_dtoa$270)
  3280  016C  00B5               	movlw	0
  3281  016D  3000               	movwf	((_dtoa$270))+1
  3282  016E  00B6               	goto	l1232
  3283  016F  2970               	
  3284                           l213:	
  3285  0170                     	
  3286                           l1232:	
  3287  0170                     	movf	(_dtoa$270),w
  3288  0170  0835               	movwf	(??_dtoa+0)+0
  3289  0171  00B3               	movf	(dtoa@i),w
  3290  0172  0842               	addlw	low(_dbuf|((0x0)<<8))&0ffh
  3291  0173  3ECF               	movwf	fsr1l
  3292  0174  0086               	clrf fsr1h	
  3293  0175  0187               	
  3294                           	movf	(??_dtoa+0)+0,w
  3295  0176  0833               	movwf	indf1
  3296  0177  0081               	goto	l1234
  3297  0178  2979               	line	311
  3298                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 311:     }

  3299                           	
  3300                           l207:	
  3301  0179                     	line	314
  3302                           	
  3303                           l1234:	
  3304  0179                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 314:     re
                                 turn pad(fp, &dbuf[i], w);
  3305                           	movf	(dtoa@i),w
  3306  0179  0842               	addlw	low(_dbuf|((0x0)<<8))&0ffh
  3307  017A  3ECF               	movwf	(??_dtoa+0)+0
  3308  017B  00B3               	movf	(??_dtoa+0)+0,w
  3309  017C  0833               	movwf	(pad@buf)
  3310  017D  00A7               	movf	(dtoa@w+1),w
  3311  017E  083B               	movwf	(pad@p+1)
  3312  017F  00A9               	movf	(dtoa@w),w
  3313  0180  083A               	movwf	(pad@p)
  3314  0181  00A8               	movf	(dtoa@fp),w
  3315  0182  0839               	fcall	_pad
  3316  0183  3185  254E  3180   	movlb 0	; select bank0
  3317  0186  0020               	movf	(1+(?_pad)),w
  3318  0187  0828               	movwf	(?_dtoa+1)
  3319  0188  00B0               	movf	(0+(?_pad)),w
  3320  0189  0827               	movwf	(?_dtoa)
  3321  018A  00AF               	goto	l214
  3322  018B  298C               	
  3323                           l1236:	
  3324  018C                     	line	315
  3325                           	
  3326                           l214:	
  3327  018C                     	return
  3328  018C  0008               	opt stack 0
  3329                           GLOBAL	__end_of_dtoa
  3330                           	__end_of_dtoa:
  3331  018D                     	signat	_dtoa,8314
  3332                           	global	_pad
  3333                           
  3334 ;; *************** function _pad *****************
  3335 ;; Defined at:
  3336 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  fp              1    wreg     PTR struct _IO_FILE
  3339 ;;		 -> NULL(0), 
  3340 ;;  buf             1    7[BANK0 ] PTR unsigned char 
  3341 ;;		 -> dbuf(32), 
  3342 ;;  p               2    8[BANK0 ] int 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
  3345 ;;		 -> NULL(0), 
  3346 ;;  w               2   12[BANK0 ] int 
  3347 ;;  i               2   10[BANK0 ] int 
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  2    7[BANK0 ] int 
  3350 ;; Registers used:
  3351 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3357 ;;      Params:         0       3       0       0
  3358 ;;      Locals:         0       5       0       0
  3359 ;;      Temps:          1       0       0       0
  3360 ;;      Totals:         1       8       0       0
  3361 ;;Total ram usage:        9 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    4
  3364 ;; This function calls:
  3365 ;;		_fputc
  3366 ;;		_fputs
  3367 ;;		_strlen
  3368 ;; This function is called by:
  3369 ;;		_dtoa
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3373                           	line	72
  3374                           global __ptext5
  3375                           __ptext5:	;psect for function _pad
  3376  054E                     psect	text5
  3377                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  3378                           	line	72
  3379                           	global	__size_of_pad
  3380                           	__size_of_pad	equ	__end_of_pad-_pad
  3381  0059                     	
  3382                           _pad:	
  3383  054E                     ;incstack = 0
  3384                           	opt	stack 7
  3385                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3386                           ;pad@fp stored from wreg
  3387                           	movlb 0	; select bank0
  3388  054E  0020               	movwf	(pad@fp)
  3389  054F  00AE               	line	77
  3390                           	
  3391                           l1084:	
  3392  0550                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static 
                                 int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99
                                 \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3393                           	btfss	(_flags),(0)&7
  3394  0550  1C6A               	goto	u761
  3395  0551  2D53               	goto	u760
  3396  0552  2D54               u761:
  3397  0553                     	goto	l1088
  3398  0553  2D5D               u760:
  3399  0554                     	line	78
  3400                           	
  3401                           l1086:	
  3402  0554                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:        
                                  fputs((const char *)buf, fp);
  3403                           	movf	(pad@fp),w
  3404  0554  082E               	movwf	(??_pad+0)+0
  3405  0555  00FB               	movf	(??_pad+0)+0,w
  3406  0556  087B               	movwf	(fputs@fp)
  3407  0557  00FA               	movf	(pad@buf),w
  3408  0558  0827               	fcall	_fputs
  3409  0559  3186  2640  3185   	goto	l1088
  3410  055C  2D5D               	line	79
  3411                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 79:     }
  3412                           	
  3413                           l179:	
  3414  055D                     	line	82
  3415                           	
  3416                           l1088:	
  3417  055D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w =
                                  (p < 0) ? 0 : p;
  3418                           	movlb 0	; select bank0
  3419  055D  0020               	btfsc	(pad@p+1),7
  3420  055E  1BA9               	goto	u771
  3421  055F  2D61               	goto	u770
  3422  0560  2D62               u771:
  3423  0561                     	goto	l1092
  3424  0561  2D67               u770:
  3425  0562                     	
  3426                           l1090:	
  3427  0562                     	movf	(pad@p+1),w
  3428  0562  0829               	movwf	(pad@w+1)
  3429  0563  00AD               	movf	(pad@p),w
  3430  0564  0828               	movwf	(pad@w)
  3431  0565  00AC               	goto	l183
  3432  0566  2D69               	
  3433                           l181:	
  3434  0567                     	
  3435                           l1092:	
  3436  0567                     	clrf	(pad@w)
  3437  0567  01AC               	clrf	(pad@w+1)
  3438  0568  01AD               	
  3439                           l183:	
  3440  0569                     	line	83
  3441                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i =
                                  0;
  3442                           	clrf	(pad@i)
  3443  0569  01AA               	clrf	(pad@i+1)
  3444  056A  01AB               	line	84
  3445                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  3446                           	goto	l1098
  3447  056B  2D7E               	
  3448                           l185:	
  3449  056C                     	line	85
  3450                           	
  3451                           l1094:	
  3452  056C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:        
                                  fputc(' ', fp);
  3453                           	movlw	020h
  3454  056C  3020               	movwf	(fputc@c)
  3455  056D  00F2               	movlw	0
  3456  056E  3000               	movwf	((fputc@c))+1
  3457  056F  00F3               	movlb 0	; select bank0
  3458  0570  0020               	movf	(pad@fp),w
  3459  0571  082E               	movwf	(??_pad+0)+0
  3460  0572  00FB               	movf	(??_pad+0)+0,w
  3461  0573  087B               	movwf	(fputc@fp)
  3462  0574  00F4               	fcall	_fputc
  3463  0575  3185  25A7  3185   	line	86
  3464                           	
  3465                           l1096:	
  3466  0578                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:        
                                  ++i;
  3467                           	movlw	01h
  3468  0578  3001               	movlb 0	; select bank0
  3469  0579  0020               	addwf	(pad@i),f
  3470  057A  07AA               	movlw	0
  3471  057B  3000               	addwfc	(pad@i+1),f
  3472  057C  3DAB               	goto	l1098
  3473  057D  2D7E               	line	87
  3474                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 87:     }
  3475                           	
  3476                           l184:	
  3477  057E                     	line	84
  3478                           	
  3479                           l1098:	
  3480  057E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  3481                           	movf	(pad@i+1),w
  3482  057E  082B               	xorlw	80h
  3483  057F  3A80               	movwf	(??_pad+0)+0
  3484  0580  00FB               	movf	(pad@w+1),w
  3485  0581  082D               	xorlw	80h
  3486  0582  3A80               	subwf	(??_pad+0)+0,w
  3487  0583  027B               	skipz
  3488  0584  1D03               	goto	u785
  3489  0585  2D88               	movf	(pad@w),w
  3490  0586  082C               	subwf	(pad@i),w
  3491  0587  022A               u785:
  3492  0588                     
  3493                           	skipc
  3494  0588  1C03               	goto	u781
  3495  0589  2D8B               	goto	u780
  3496  058A  2D8C               u781:
  3497  058B                     	goto	l1094
  3498  058B  2D6C               u780:
  3499  058C                     	
  3500                           l186:	
  3501  058C                     	line	90
  3502                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if 
                                 (!(flags & (1 << 0))) {
  3503                           	movlb 0	; select bank0
  3504  058C  0020               	btfsc	(_flags),(0)&7
  3505  058D  186A               	goto	u791
  3506  058E  2D90               	goto	u790
  3507  058F  2D91               u791:
  3508  0590                     	goto	l187
  3509  0590  2D99               u790:
  3510  0591                     	line	91
  3511                           	
  3512                           l1100:	
  3513  0591                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:        
                                  fputs((const char *)buf, fp);
  3514                           	movf	(pad@fp),w
  3515  0591  082E               	movwf	(??_pad+0)+0
  3516  0592  00FB               	movf	(??_pad+0)+0,w
  3517  0593  087B               	movwf	(fputs@fp)
  3518  0594  00FA               	movf	(pad@buf),w
  3519  0595  0827               	fcall	_fputs
  3520  0596  3186  2640  3185   	line	92
  3521                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 92:     }
  3522                           	
  3523                           l187:	
  3524  0599                     	line	94
  3525                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     ret
                                 urn strlen(buf) + w;
  3526                           	movlb 0	; select bank0
  3527  0599  0020               	movf	(pad@buf),w
  3528  059A  0827               	fcall	_strlen
  3529  059B  3186  266A  3185   	movlb 0	; select bank0
  3530  059E  0020               	movf	(pad@w),w
  3531  059F  082C               	addwf	(0+(?_strlen)),w
  3532  05A0  0772               	movwf	(?_pad)
  3533  05A1  00A7               	movf	(pad@w+1),w
  3534  05A2  082D               	addwfc	(1+(?_strlen)),w
  3535  05A3  3D73               	movwf	1+(?_pad)
  3536  05A4  00A8               	goto	l188
  3537  05A5  2DA6               	
  3538                           l1102:	
  3539  05A6                     	line	95
  3540                           	
  3541                           l188:	
  3542  05A6                     	return
  3543  05A6  0008               	opt stack 0
  3544                           GLOBAL	__end_of_pad
  3545                           	__end_of_pad:
  3546  05A7                     	signat	_pad,12410
  3547                           	global	_strlen
  3548                           
  3549 ;; *************** function _strlen *****************
  3550 ;; Defined at:
  3551 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;  s               1    wreg     PTR const unsigned char 
  3554 ;;		 -> dbuf(32), 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  s               1    9[COMMON] PTR const unsigned char 
  3557 ;;		 -> dbuf(32), 
  3558 ;;  a               1    8[COMMON] PTR const unsigned char 
  3559 ;;		 -> dbuf(32), 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  2    2[COMMON] unsigned int 
  3562 ;; Registers used:
  3563 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3569 ;;      Params:         2       0       0       0
  3570 ;;      Locals:         2       0       0       0
  3571 ;;      Temps:          4       0       0       0
  3572 ;;      Totals:         8       0       0       0
  3573 ;;Total ram usage:        8 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    1
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_pad
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           psect	text6,local,class=CODE,delta=2,merge=1,group=2
  3583                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  3584                           	line	12
  3585                           global __ptext6
  3586                           __ptext6:	;psect for function _strlen
  3587  066A                     psect	text6
  3588                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  3589                           	line	12
  3590                           	global	__size_of_strlen
  3591                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  3592  0029                     	
  3593                           _strlen:	
  3594  066A                     ;incstack = 0
  3595                           	opt	stack 9
  3596                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  3597                           ;strlen@s stored from wreg
  3598                           	movwf	(strlen@s)
  3599  066A  00F9               	line	14
  3600                           	
  3601                           l1074:	
  3602  066B                     	movf	(strlen@s),w
  3603  066B  0879               	movwf	(??_strlen+0)+0
  3604  066C  00F4               	movf	(??_strlen+0)+0,w
  3605  066D  0874               	movwf	(strlen@a)
  3606  066E  00F8               	line	16
  3607                           	goto	l1078
  3608  066F  2E75               	
  3609                           l704:	
  3610  0670                     	line	17
  3611                           	
  3612                           l1076:	
  3613  0670                     	movlw	low(01h)
  3614  0670  3001               	movwf	(??_strlen+0)+0
  3615  0671  00F4               	movf	(??_strlen+0)+0,w
  3616  0672  0874               	addwf	(strlen@s),f
  3617  0673  07F9               	goto	l1078
  3618  0674  2E75               	line	18
  3619                           	
  3620                           l703:	
  3621  0675                     	line	16
  3622                           	
  3623                           l1078:	
  3624  0675                     	movf	(strlen@s),w
  3625  0675  0879               	movwf	fsr1l
  3626  0676  0086               	clrf fsr1h	
  3627  0677  0187               	
  3628                           	movf	(indf1),w
  3629  0678  0801               	btfss	status,2
  3630  0679  1D03               	goto	u751
  3631  067A  2E7C               	goto	u750
  3632  067B  2E7D               u751:
  3633  067C                     	goto	l1076
  3634  067C  2E70               u750:
  3635  067D                     	goto	l1080
  3636  067D  2E7E               	
  3637                           l705:	
  3638  067E                     	line	25
  3639                           	
  3640                           l1080:	
  3641  067E                     	movf	(strlen@a),w
  3642  067E  0878               	movwf	(??_strlen+0)+0
  3643  067F  00F4               	movlw	(0x0)
  3644  0680  3000               	movwf	(??_strlen+0)+0+1
  3645  0681  00F5               	comf	(??_strlen+0)+0,f
  3646  0682  09F4               	comf	(??_strlen+0)+1,f
  3647  0683  09F5               	incf	(??_strlen+0)+0,f
  3648  0684  0AF4               	skipnz
  3649  0685  1903               	incf	(??_strlen+0)+1,f
  3650  0686  0AF5               	movf	(strlen@s),w
  3651  0687  0879               	movwf	(??_strlen+2)+0
  3652  0688  00F6               	movlw	(0x0)
  3653  0689  3000               	movwf	(??_strlen+2)+0+1
  3654  068A  00F7               	movf	0+(??_strlen+0)+0,w
  3655  068B  0874               	addwf	0+(??_strlen+2)+0,w
  3656  068C  0776               	movwf	(?_strlen)
  3657  068D  00F2               	movf	1+(??_strlen+0)+0,w
  3658  068E  0875               	addwfc	1+(??_strlen+2)+0,w
  3659  068F  3D77               	movwf	1+(?_strlen)
  3660  0690  00F3               	goto	l706
  3661  0691  2E92               	
  3662                           l1082:	
  3663  0692                     	line	26
  3664                           	
  3665                           l706:	
  3666  0692                     	return
  3667  0692  0008               	opt stack 0
  3668                           GLOBAL	__end_of_strlen
  3669                           	__end_of_strlen:
  3670  0693                     	signat	_strlen,4218
  3671                           	global	_fputs
  3672                           
  3673 ;; *************** function _fputs *****************
  3674 ;; Defined at:
  3675 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  s               1    wreg     PTR const unsigned char 
  3678 ;;		 -> dbuf(32), 
  3679 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  3680 ;;		 -> NULL(0), 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  3683 ;;		 -> dbuf(32), 
  3684 ;;  i               2    4[BANK0 ] int 
  3685 ;;  c               1    3[BANK0 ] unsigned char 
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  2   10[COMMON] int 
  3688 ;; Registers used:
  3689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3695 ;;      Params:         1       0       0       0
  3696 ;;      Locals:         0       4       0       0
  3697 ;;      Temps:          0       3       0       0
  3698 ;;      Totals:         1       7       0       0
  3699 ;;Total ram usage:        8 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; Hardware stack levels required when called:    3
  3702 ;; This function calls:
  3703 ;;		_fputc
  3704 ;; This function is called by:
  3705 ;;		_pad
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           psect	text7,local,class=CODE,delta=2,merge=1,group=2
  3709                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  3710                           	line	8
  3711                           global __ptext7
  3712                           __ptext7:	;psect for function _fputs
  3713  0640                     psect	text7
  3714                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  3715                           	line	8
  3716                           	global	__size_of_fputs
  3717                           	__size_of_fputs	equ	__end_of_fputs-_fputs
  3718  002A                     	
  3719                           _fputs:	
  3720  0640                     ;incstack = 0
  3721                           	opt	stack 7
  3722                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3723                           ;fputs@s stored from wreg
  3724                           	movlb 0	; select bank0
  3725  0640  0020               	movwf	(fputs@s)
  3726  0641  00A6               	line	13
  3727                           	
  3728                           l1066:	
  3729  0642                     	clrf	(fputs@i)
  3730  0642  01A4               	clrf	(fputs@i+1)
  3731  0643  01A5               	line	14
  3732                           	goto	l1072
  3733  0644  2E59               	
  3734                           l688:	
  3735  0645                     	line	15
  3736                           	
  3737                           l1068:	
  3738  0645                     	movf	(fputs@c),w
  3739  0645  0823               	movwf	(??_fputs+0)+0
  3740  0646  00A0               	clrf	(??_fputs+0)+0+1
  3741  0647  01A1               	movf	0+(??_fputs+0)+0,w
  3742  0648  0820               	movwf	(fputc@c)
  3743  0649  00F2               	movf	1+(??_fputs+0)+0,w
  3744  064A  0821               	movwf	(fputc@c+1)
  3745  064B  00F3               	movf	(fputs@fp),w
  3746  064C  087A               	movwf	(??_fputs+2)+0
  3747  064D  00A2               	movf	(??_fputs+2)+0,w
  3748  064E  0822               	movwf	(fputc@fp)
  3749  064F  00F4               	fcall	_fputc
  3750  0650  3185  25A7  3186   	line	16
  3751                           	
  3752                           l1070:	
  3753  0653                     	movlw	01h
  3754  0653  3001               	movlb 0	; select bank0
  3755  0654  0020               	addwf	(fputs@i),f
  3756  0655  07A4               	movlw	0
  3757  0656  3000               	addwfc	(fputs@i+1),f
  3758  0657  3DA5               	goto	l1072
  3759  0658  2E59               	line	17
  3760                           	
  3761                           l687:	
  3762  0659                     	line	14
  3763                           	
  3764                           l1072:	
  3765  0659                     	movf	(fputs@i),w
  3766  0659  0824               	addwf	(fputs@s),w
  3767  065A  0726               	movwf	(??_fputs+0)+0
  3768  065B  00A0               	movf	0+(??_fputs+0)+0,w
  3769  065C  0820               	movwf	fsr1l
  3770  065D  0086               	clrf fsr1h	
  3771  065E  0187               	
  3772                           	movf	indf1,w
  3773  065F  0801               	movwf	(??_fputs+1)+0
  3774  0660  00A1               	movf	(??_fputs+1)+0,w
  3775  0661  0821               	movwf	(fputs@c)
  3776  0662  00A3               	movf	(((fputs@c))),w
  3777  0663  0823               	btfss	status,2
  3778  0664  1D03               	goto	u741
  3779  0665  2E67               	goto	u740
  3780  0666  2E68               u741:
  3781  0667                     	goto	l1068
  3782  0667  2E45               u740:
  3783  0668                     	goto	l690
  3784  0668  2E69               	
  3785                           l689:	
  3786  0669                     	line	19
  3787                           ;	Return value of _fputs is never used
  3788                           	
  3789                           l690:	
  3790  0669                     	return
  3791  0669  0008               	opt stack 0
  3792                           GLOBAL	__end_of_fputs
  3793                           	__end_of_fputs:
  3794  066A                     	signat	_fputs,8314
  3795                           	global	_fputc
  3796                           
  3797 ;; *************** function _fputc *****************
  3798 ;; Defined at:
  3799 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  c               2    2[COMMON] int 
  3802 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  3803 ;;		 -> NULL(0), 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  2    2[COMMON] int 
  3808 ;; Registers used:
  3809 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3815 ;;      Params:         3       0       0       0
  3816 ;;      Locals:         0       0       0       0
  3817 ;;      Temps:          5       0       0       0
  3818 ;;      Totals:         8       0       0       0
  3819 ;;Total ram usage:        8 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; Hardware stack levels required when called:    2
  3822 ;; This function calls:
  3823 ;;		_putch
  3824 ;; This function is called by:
  3825 ;;		_pad
  3826 ;;		_vfpfcnvrt
  3827 ;;		_fputs
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           psect	text8,local,class=CODE,delta=2,merge=1,group=2
  3831                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  3832                           	line	8
  3833                           global __ptext8
  3834                           __ptext8:	;psect for function _fputc
  3835  05A7                     psect	text8
  3836                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  3837                           	line	8
  3838                           	global	__size_of_fputc
  3839                           	__size_of_fputc	equ	__end_of_fputc-_fputc
  3840  0044                     	
  3841                           _fputc:	
  3842  05A7                     ;incstack = 0
  3843                           	opt	stack 10
  3844                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3845                           	line	12
  3846                           	
  3847                           l1052:	
  3848  05A7                     	movf	((fputc@fp)),w
  3849  05A7  0874               	btfsc	status,2
  3850  05A8  1903               	goto	u701
  3851  05A9  2DAB               	goto	u700
  3852  05AA  2DAC               u701:
  3853  05AB                     	goto	l1056
  3854  05AB  2DB2               u700:
  3855  05AC                     	
  3856                           l1054:	
  3857  05AC                     	movf	((fputc@fp)),w
  3858  05AC  0874               	btfss	status,2
  3859  05AD  1D03               	goto	u711
  3860  05AE  2DB0               	goto	u710
  3861  05AF  2DB1               u711:
  3862  05B0                     	goto	l1058
  3863  05B0  2DB7               u710:
  3864  05B1                     	goto	l1056
  3865  05B1  2DB2               	
  3866                           l677:	
  3867  05B2                     	line	13
  3868                           	
  3869                           l1056:	
  3870  05B2                     	movf	(fputc@c),w
  3871  05B2  0872               	fcall	_putch
  3872  05B3  3186  26F1  3185   	line	14
  3873                           	goto	l682
  3874  05B6  2DEA               	
  3875                           l675:	
  3876  05B7                     	line	15
  3877                           	
  3878                           l1058:	
  3879  05B7                     	movf	(fputc@fp),w
  3880  05B7  0874               	addlw	03h
  3881  05B8  3E03               	movwf	fsr1l
  3882  05B9  0086               	clrf fsr1h	
  3883  05BA  0187               	
  3884                           		moviw	fsr1++
  3885  05BB  0016               	iorwf	indf1,w
  3886  05BC  0401               	btfsc	status,2
  3887  05BD  1903               	goto	u721
  3888  05BE  2DC0               	goto	u720
  3889  05BF  2DC1               
  3890                           u721:
  3891  05C0                     	goto	l1062
  3892  05C0  2DDF               u720:
  3893  05C1                     	
  3894                           l1060:	
  3895  05C1                     	movf	(fputc@fp),w
  3896  05C1  0874               	addlw	03h
  3897  05C2  3E03               	movwf	fsr1l
  3898  05C3  0086               	clrf fsr1h	
  3899  05C4  0187               	
  3900                           	moviw	[0]fsr1
  3901  05C5  3F40               	movwf	(??_fputc+0)+0
  3902  05C6  00F5               	moviw	[1]fsr1
  3903  05C7  3F41               	movwf	(??_fputc+0)+0+1
  3904  05C8  00F6               	incf	(fputc@fp),w
  3905  05C9  0A74               	movwf	fsr1l
  3906  05CA  0086               	clrf fsr1h	
  3907  05CB  0187               	
  3908                           	moviw	[0]fsr1
  3909  05CC  3F40               	movwf	(??_fputc+2)+0
  3910  05CD  00F7               	moviw	[1]fsr1
  3911  05CE  3F41               	movwf	(??_fputc+2)+0+1
  3912  05CF  00F8               	movf	1+(??_fputc+2)+0,w
  3913  05D0  0878               	xorlw	80h
  3914  05D1  3A80               	movwf	(??_fputc+4)+0
  3915  05D2  00F9               	movf	1+(??_fputc+0)+0,w
  3916  05D3  0876               	xorlw	80h
  3917  05D4  3A80               	subwf	(??_fputc+4)+0,w
  3918  05D5  0279               	skipz
  3919  05D6  1D03               	goto	u735
  3920  05D7  2DDA               	movf	0+(??_fputc+0)+0,w
  3921  05D8  0875               	subwf	0+(??_fputc+2)+0,w
  3922  05D9  0277               u735:
  3923  05DA                     
  3924                           	skipnc
  3925  05DA  1803               	goto	u731
  3926  05DB  2DDD               	goto	u730
  3927  05DC  2DDE               u731:
  3928  05DD                     	goto	l682
  3929  05DD  2DEA               u730:
  3930  05DE                     	goto	l1062
  3931  05DE  2DDF               	
  3932                           l681:	
  3933  05DF                     	line	17
  3934                           	
  3935                           l1062:	
  3936  05DF                     	incf	(fputc@fp),w
  3937  05DF  0A74               	movwf	fsr1l
  3938  05E0  0086               	clrf fsr1h	
  3939  05E1  0187               	
  3940                           	movlw	01h
  3941  05E2  3001               	addwf	indf1,f
  3942  05E3  0781               	addfsr	fsr1,1
  3943  05E4  3141               	skipnc
  3944  05E5  1803               	incf	indf1,f
  3945  05E6  0A81               	goto	l682
  3946  05E7  2DEA               	line	18
  3947                           	
  3948                           l679:	
  3949  05E8                     	goto	l682
  3950  05E8  2DEA               	line	19
  3951                           	
  3952                           l678:	
  3953  05E9                     	goto	l682
  3954  05E9  2DEA               	line	20
  3955                           	
  3956                           l1064:	
  3957  05EA                     	line	21
  3958                           ;	Return value of _fputc is never used
  3959                           	
  3960                           l682:	
  3961  05EA                     	return
  3962  05EA  0008               	opt stack 0
  3963                           GLOBAL	__end_of_fputc
  3964                           	__end_of_fputc:
  3965  05EB                     	signat	_fputc,8314
  3966                           	global	_putch
  3967                           
  3968 ;; *************** function _putch *****************
  3969 ;; Defined at:
  3970 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  c               1    wreg     unsigned char 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  c               1    0[COMMON] unsigned char 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3984 ;;      Params:         0       0       0       0
  3985 ;;      Locals:         0       0       0       0
  3986 ;;      Temps:          0       0       0       0
  3987 ;;      Totals:         0       0       0       0
  3988 ;;Total ram usage:        0 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:    1
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_fputc
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           psect	text9,local,class=CODE,delta=2,merge=1,group=2
  3998                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  3999                           	line	7
  4000                           global __ptext9
  4001                           __ptext9:	;psect for function _putch
  4002  06F1                     psect	text9
  4003                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  4004                           	line	7
  4005                           	global	__size_of_putch
  4006                           	__size_of_putch	equ	__end_of_putch-_putch
  4007  0001                     	
  4008                           _putch:	
  4009  06F1                     ;incstack = 0
  4010                           	opt	stack 10
  4011                           ; Regs used in _putch: [wreg]
  4012                           	line	9
  4013                           	
  4014                           l700:	
  4015  06F1                     	return
  4016  06F1  0008               	opt stack 0
  4017                           GLOBAL	__end_of_putch
  4018                           	__end_of_putch:
  4019  06F2                     	signat	_putch,4217
  4020                           	global	_abs
  4021                           
  4022 ;; *************** function _abs *****************
  4023 ;; Defined at:
  4024 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  a               2    2[BANK0 ] int 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  2    2[BANK0 ] int 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4038 ;;      Params:         0       2       0       0
  4039 ;;      Locals:         0       0       0       0
  4040 ;;      Temps:          0       2       0       0
  4041 ;;      Totals:         0       4       0       0
  4042 ;;Total ram usage:        4 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    1
  4045 ;; This function calls:
  4046 ;;		Nothing
  4047 ;; This function is called by:
  4048 ;;		_dtoa
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           psect	text10,local,class=CODE,delta=2,merge=1,group=2
  4052                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  4053                           	line	1
  4054                           global __ptext10
  4055                           __ptext10:	;psect for function _abs
  4056  0693                     psect	text10
  4057                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  4058                           	line	1
  4059                           	global	__size_of_abs
  4060                           	__size_of_abs	equ	__end_of_abs-_abs
  4061  001D                     	
  4062                           _abs:	
  4063  0693                     ;incstack = 0
  4064                           	opt	stack 10
  4065                           ; Regs used in _abs: [wreg+status,2+status,0]
  4066                           	line	3
  4067                           	
  4068                           l1104:	
  4069  0693                     	movlb 0	; select bank0
  4070  0693  0020               	movf	(abs@a+1),w
  4071  0694  0823               	xorlw	80h
  4072  0695  3A80               	movwf	(??_abs+0)+0
  4073  0696  00A4               	movlw	(0)^80h
  4074  0697  3080               	subwf	(??_abs+0)+0,w
  4075  0698  0224               	skipz
  4076  0699  1D03               	goto	u805
  4077  069A  2E9D               	movlw	01h
  4078  069B  3001               	subwf	(abs@a),w
  4079  069C  0222               u805:
  4080  069D                     
  4081                           	skipnc
  4082  069D  1803               	goto	u801
  4083  069E  2EA0               	goto	u800
  4084  069F  2EA1               u801:
  4085  06A0                     	goto	l667
  4086  06A0  2EAE               u800:
  4087  06A1                     	
  4088                           l1106:	
  4089  06A1                     	movlb 0	; select bank0
  4090  06A1  0020               	comf	(abs@a),w
  4091  06A2  0922               	movwf	(??_abs+0)+0
  4092  06A3  00A4               	comf	(abs@a+1),w
  4093  06A4  0923               	movwf	((??_abs+0)+0+1)
  4094  06A5  00A5               	incf	(??_abs+0)+0,f
  4095  06A6  0AA4               	skipnz
  4096  06A7  1903               	incf	((??_abs+0)+0+1),f
  4097  06A8  0AA5               	movf	0+(??_abs+0)+0,w
  4098  06A9  0824               	movwf	(?_abs)
  4099  06AA  00A2               	movf	1+(??_abs+0)+0,w
  4100  06AB  0825               	movwf	(?_abs+1)
  4101  06AC  00A3               	goto	l670
  4102  06AD  2EAF               	
  4103                           l667:	
  4104  06AE                     	goto	l670
  4105  06AE  2EAF               	
  4106                           l669:	
  4107  06AF                     	line	4
  4108                           	
  4109                           l670:	
  4110  06AF                     	return
  4111  06AF  0008               	opt stack 0
  4112                           GLOBAL	__end_of_abs
  4113                           	__end_of_abs:
  4114  06B0                     	signat	_abs,4218
  4115                           	global	___almod
  4116                           
  4117 ;; *************** function ___almod *****************
  4118 ;; Defined at:
  4119 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\almod.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  divisor         4    2[COMMON] long 
  4122 ;;  dividend        4    6[COMMON] long 
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;  sign            1    1[BANK0 ] unsigned char 
  4125 ;;  counter         1    0[BANK0 ] unsigned char 
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  4    2[COMMON] long 
  4128 ;; Registers used:
  4129 ;;		wreg, status,2, status,0
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4135 ;;      Params:         8       0       0       0
  4136 ;;      Locals:         0       2       0       0
  4137 ;;      Temps:          1       0       0       0
  4138 ;;      Totals:         9       2       0       0
  4139 ;;Total ram usage:       11 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:    1
  4142 ;; This function calls:
  4143 ;;		Nothing
  4144 ;; This function is called by:
  4145 ;;		_dtoa
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           psect	text11,local,class=CODE,delta=2,merge=1,group=1
  4149                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\almod.c"
  4150                           	line	5
  4151                           global __ptext11
  4152                           __ptext11:	;psect for function ___almod
  4153  03FE                     psect	text11
  4154                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\almod.c"
  4155                           	line	5
  4156                           	global	__size_of___almod
  4157                           	__size_of___almod	equ	__end_of___almod-___almod
  4158  0085                     	
  4159                           ___almod:	
  4160  03FE                     ;incstack = 0
  4161                           	opt	stack 10
  4162                           ; Regs used in ___almod: [wreg+status,2+status,0]
  4163                           	line	12
  4164                           	
  4165                           l1148:	
  4166  03FE                     	movlb 0	; select bank0
  4167  03FE  0020               	clrf	(___almod@sign)
  4168  03FF  01A1               	line	13
  4169                           	
  4170                           l1150:	
  4171  0400                     	btfss	(___almod@dividend+3),7
  4172  0400  1FF9               	goto	u911
  4173  0401  2C03               	goto	u910
  4174  0402  2C04               u911:
  4175  0403                     	goto	l310
  4176  0403  2C11               u910:
  4177  0404                     	line	14
  4178                           	
  4179                           l1152:	
  4180  0404                     	comf	(___almod@dividend),f
  4181  0404  09F6               	comf	(___almod@dividend+1),f
  4182  0405  09F7               	comf	(___almod@dividend+2),f
  4183  0406  09F8               	comf	(___almod@dividend+3),f
  4184  0407  09F9               	incf	(___almod@dividend),f
  4185  0408  0AF6               	skipnz
  4186  0409  1903               	incf	(___almod@dividend+1),f
  4187  040A  0AF7               	skipnz
  4188  040B  1903               	incf	(___almod@dividend+2),f
  4189  040C  0AF8               	skipnz
  4190  040D  1903               	incf	(___almod@dividend+3),f
  4191  040E  0AF9               	line	15
  4192                           	clrf	(___almod@sign)
  4193  040F  01A1               	incf	(___almod@sign),f
  4194  0410  0AA1               	line	16
  4195                           	
  4196                           l310:	
  4197  0411                     	line	17
  4198                           	btfss	(___almod@divisor+3),7
  4199  0411  1FF5               	goto	u921
  4200  0412  2C14               	goto	u920
  4201  0413  2C15               u921:
  4202  0414                     	goto	l1156
  4203  0414  2C21               u920:
  4204  0415                     	line	18
  4205                           	
  4206                           l1154:	
  4207  0415                     	comf	(___almod@divisor),f
  4208  0415  09F2               	comf	(___almod@divisor+1),f
  4209  0416  09F3               	comf	(___almod@divisor+2),f
  4210  0417  09F4               	comf	(___almod@divisor+3),f
  4211  0418  09F5               	incf	(___almod@divisor),f
  4212  0419  0AF2               	skipnz
  4213  041A  1903               	incf	(___almod@divisor+1),f
  4214  041B  0AF3               	skipnz
  4215  041C  1903               	incf	(___almod@divisor+2),f
  4216  041D  0AF4               	skipnz
  4217  041E  1903               	incf	(___almod@divisor+3),f
  4218  041F  0AF5               	goto	l1156
  4219  0420  2C21               	
  4220                           l311:	
  4221  0421                     	line	19
  4222                           	
  4223                           l1156:	
  4224  0421                     	movf	(___almod@divisor+3),w
  4225  0421  0875               	iorwf	(___almod@divisor+2),w
  4226  0422  0474               	iorwf	(___almod@divisor+1),w
  4227  0423  0473               	iorwf	(___almod@divisor),w
  4228  0424  0472               	skipnz
  4229  0425  1903               	goto	u931
  4230  0426  2C28               	goto	u930
  4231  0427  2C29               u931:
  4232  0428                     	goto	l1172
  4233  0428  2C68               u930:
  4234  0429                     	line	20
  4235                           	
  4236                           l1158:	
  4237  0429                     	clrf	(___almod@counter)
  4238  0429  01A0               	incf	(___almod@counter),f
  4239  042A  0AA0               	line	21
  4240                           	goto	l1162
  4241  042B  2C38               	
  4242                           l314:	
  4243  042C                     	line	22
  4244                           	
  4245                           l1160:	
  4246  042C                     	movlw	01h
  4247  042C  3001               u945:
  4248  042D                     	lslf	(___almod@divisor),f
  4249  042D  35F2               	rlf	(___almod@divisor+1),f
  4250  042E  0DF3               	rlf	(___almod@divisor+2),f
  4251  042F  0DF4               	rlf	(___almod@divisor+3),f
  4252  0430  0DF5               	decfsz	wreg,f
  4253  0431  0B89               	goto	u945
  4254  0432  2C2D               	line	23
  4255                           	movlw	low(01h)
  4256  0433  3001               	movwf	(??___almod+0)+0
  4257  0434  00FA               	movf	(??___almod+0)+0,w
  4258  0435  087A               	addwf	(___almod@counter),f
  4259  0436  07A0               	goto	l1162
  4260  0437  2C38               	line	24
  4261                           	
  4262                           l313:	
  4263  0438                     	line	21
  4264                           	
  4265                           l1162:	
  4266  0438                     	btfss	(___almod@divisor+3),(31)&7
  4267  0438  1FF5               	goto	u951
  4268  0439  2C3B               	goto	u950
  4269  043A  2C3C               u951:
  4270  043B                     	goto	l1160
  4271  043B  2C2C               u950:
  4272  043C                     	goto	l1164
  4273  043C  2C3E               	
  4274                           l315:	
  4275  043D                     	goto	l1164
  4276  043D  2C3E               	line	25
  4277                           	
  4278                           l316:	
  4279  043E                     	line	26
  4280                           	
  4281                           l1164:	
  4282  043E                     	movf	(___almod@divisor+3),w
  4283  043E  0875               	subwf	(___almod@dividend+3),w
  4284  043F  0279               	skipz
  4285  0440  1D03               	goto	u965
  4286  0441  2C4C               	movf	(___almod@divisor+2),w
  4287  0442  0874               	subwf	(___almod@dividend+2),w
  4288  0443  0278               	skipz
  4289  0444  1D03               	goto	u965
  4290  0445  2C4C               	movf	(___almod@divisor+1),w
  4291  0446  0873               	subwf	(___almod@dividend+1),w
  4292  0447  0277               	skipz
  4293  0448  1D03               	goto	u965
  4294  0449  2C4C               	movf	(___almod@divisor),w
  4295  044A  0872               	subwf	(___almod@dividend),w
  4296  044B  0276               u965:
  4297  044C                     	skipc
  4298  044C  1C03               	goto	u961
  4299  044D  2C4F               	goto	u960
  4300  044E  2C50               u961:
  4301  044F                     	goto	l1168
  4302  044F  2C59               u960:
  4303  0450                     	line	27
  4304                           	
  4305                           l1166:	
  4306  0450                     	movf	(___almod@divisor),w
  4307  0450  0872               	subwf	(___almod@dividend),f
  4308  0451  02F6               	movf	(___almod@divisor+1),w
  4309  0452  0873               	subwfb	(___almod@dividend+1),f
  4310  0453  3BF7               	movf	(___almod@divisor+2),w
  4311  0454  0874               	subwfb	(___almod@dividend+2),f
  4312  0455  3BF8               	movf	(___almod@divisor+3),w
  4313  0456  0875               	subwfb	(___almod@dividend+3),f
  4314  0457  3BF9               	goto	l1168
  4315  0458  2C59               	
  4316                           l317:	
  4317  0459                     	line	28
  4318                           	
  4319                           l1168:	
  4320  0459                     	movlw	01h
  4321  0459  3001               u975:
  4322  045A                     	lsrf	(___almod@divisor+3),f
  4323  045A  36F5               	rrf	(___almod@divisor+2),f
  4324  045B  0CF4               	rrf	(___almod@divisor+1),f
  4325  045C  0CF3               	rrf	(___almod@divisor),f
  4326  045D  0CF2               	decfsz	wreg,f
  4327  045E  0B89               	goto	u975
  4328  045F  2C5A               
  4329                           	line	29
  4330                           	
  4331                           l1170:	
  4332  0460                     	movlw	01h
  4333  0460  3001               	subwf	(___almod@counter),f
  4334  0461  02A0               	btfss	status,2
  4335  0462  1D03               	goto	u981
  4336  0463  2C65               	goto	u980
  4337  0464  2C66               u981:
  4338  0465                     	goto	l1164
  4339  0465  2C3E               u980:
  4340  0466                     	goto	l1172
  4341  0466  2C68               	
  4342                           l318:	
  4343  0467                     	goto	l1172
  4344  0467  2C68               	line	30
  4345                           	
  4346                           l312:	
  4347  0468                     	line	31
  4348                           	
  4349                           l1172:	
  4350  0468                     	movf	((___almod@sign)),w
  4351  0468  0821               	btfsc	status,2
  4352  0469  1903               	goto	u991
  4353  046A  2C6C               	goto	u990
  4354  046B  2C6D               u991:
  4355  046C                     	goto	l1176
  4356  046C  2C79               u990:
  4357  046D                     	line	32
  4358                           	
  4359                           l1174:	
  4360  046D                     	comf	(___almod@dividend),f
  4361  046D  09F6               	comf	(___almod@dividend+1),f
  4362  046E  09F7               	comf	(___almod@dividend+2),f
  4363  046F  09F8               	comf	(___almod@dividend+3),f
  4364  0470  09F9               	incf	(___almod@dividend),f
  4365  0471  0AF6               	skipnz
  4366  0472  1903               	incf	(___almod@dividend+1),f
  4367  0473  0AF7               	skipnz
  4368  0474  1903               	incf	(___almod@dividend+2),f
  4369  0475  0AF8               	skipnz
  4370  0476  1903               	incf	(___almod@dividend+3),f
  4371  0477  0AF9               	goto	l1176
  4372  0478  2C79               	
  4373                           l319:	
  4374  0479                     	line	33
  4375                           	
  4376                           l1176:	
  4377  0479                     	movf	(___almod@dividend+3),w
  4378  0479  0879               	movwf	(?___almod+3)
  4379  047A  00F5               	movf	(___almod@dividend+2),w
  4380  047B  0878               	movwf	(?___almod+2)
  4381  047C  00F4               	movf	(___almod@dividend+1),w
  4382  047D  0877               	movwf	(?___almod+1)
  4383  047E  00F3               	movf	(___almod@dividend),w
  4384  047F  0876               	movwf	(?___almod)
  4385  0480  00F2               
  4386                           	goto	l320
  4387  0481  2C82               	
  4388                           l1178:	
  4389  0482                     	line	34
  4390                           	
  4391                           l320:	
  4392  0482                     	return
  4393  0482  0008               	opt stack 0
  4394                           GLOBAL	__end_of___almod
  4395                           	__end_of___almod:
  4396  0483                     	signat	___almod,8316
  4397                           	global	___aldiv
  4398                           
  4399 ;; *************** function ___aldiv *****************
  4400 ;; Defined at:
  4401 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  divisor         4    2[COMMON] long 
  4404 ;;  dividend        4    6[COMMON] long 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  quotient        4    2[BANK0 ] long 
  4407 ;;  sign            1    1[BANK0 ] unsigned char 
  4408 ;;  counter         1    0[BANK0 ] unsigned char 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  4    2[COMMON] long 
  4411 ;; Registers used:
  4412 ;;		wreg, status,2, status,0
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4418 ;;      Params:         8       0       0       0
  4419 ;;      Locals:         0       6       0       0
  4420 ;;      Temps:          1       0       0       0
  4421 ;;      Totals:         9       6       0       0
  4422 ;;Total ram usage:       15 bytes
  4423 ;; Hardware stack levels used:    1
  4424 ;; Hardware stack levels required when called:    1
  4425 ;; This function calls:
  4426 ;;		Nothing
  4427 ;; This function is called by:
  4428 ;;		_dtoa
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           psect	text12,local,class=CODE,delta=2,merge=1,group=1
  4432                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  4433                           	line	5
  4434                           global __ptext12
  4435                           __ptext12:	;psect for function ___aldiv
  4436  0365                     psect	text12
  4437                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  4438                           	line	5
  4439                           	global	__size_of___aldiv
  4440                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  4441  0099                     	
  4442                           ___aldiv:	
  4443  0365                     ;incstack = 0
  4444                           	opt	stack 10
  4445                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4446                           	line	13
  4447                           	
  4448                           l1108:	
  4449  0365                     	movlb 0	; select bank0
  4450  0365  0020               	clrf	(___aldiv@sign)
  4451  0366  01A1               	line	14
  4452                           	
  4453                           l1110:	
  4454  0367                     	btfss	(___aldiv@divisor+3),7
  4455  0367  1FF5               	goto	u811
  4456  0368  2B6A               	goto	u810
  4457  0369  2B6B               u811:
  4458  036A                     	goto	l297
  4459  036A  2B78               u810:
  4460  036B                     	line	15
  4461                           	
  4462                           l1112:	
  4463  036B                     	comf	(___aldiv@divisor),f
  4464  036B  09F2               	comf	(___aldiv@divisor+1),f
  4465  036C  09F3               	comf	(___aldiv@divisor+2),f
  4466  036D  09F4               	comf	(___aldiv@divisor+3),f
  4467  036E  09F5               	incf	(___aldiv@divisor),f
  4468  036F  0AF2               	skipnz
  4469  0370  1903               	incf	(___aldiv@divisor+1),f
  4470  0371  0AF3               	skipnz
  4471  0372  1903               	incf	(___aldiv@divisor+2),f
  4472  0373  0AF4               	skipnz
  4473  0374  1903               	incf	(___aldiv@divisor+3),f
  4474  0375  0AF5               	line	16
  4475                           	clrf	(___aldiv@sign)
  4476  0376  01A1               	incf	(___aldiv@sign),f
  4477  0377  0AA1               	line	17
  4478                           	
  4479                           l297:	
  4480  0378                     	line	18
  4481                           	btfss	(___aldiv@dividend+3),7
  4482  0378  1FF9               	goto	u821
  4483  0379  2B7B               	goto	u820
  4484  037A  2B7C               u821:
  4485  037B                     	goto	l1118
  4486  037B  2B8C               u820:
  4487  037C                     	line	19
  4488                           	
  4489                           l1114:	
  4490  037C                     	comf	(___aldiv@dividend),f
  4491  037C  09F6               	comf	(___aldiv@dividend+1),f
  4492  037D  09F7               	comf	(___aldiv@dividend+2),f
  4493  037E  09F8               	comf	(___aldiv@dividend+3),f
  4494  037F  09F9               	incf	(___aldiv@dividend),f
  4495  0380  0AF6               	skipnz
  4496  0381  1903               	incf	(___aldiv@dividend+1),f
  4497  0382  0AF7               	skipnz
  4498  0383  1903               	incf	(___aldiv@dividend+2),f
  4499  0384  0AF8               	skipnz
  4500  0385  1903               	incf	(___aldiv@dividend+3),f
  4501  0386  0AF9               	line	20
  4502                           	
  4503                           l1116:	
  4504  0387                     	movlw	low(01h)
  4505  0387  3001               	movwf	(??___aldiv+0)+0
  4506  0388  00FA               	movf	(??___aldiv+0)+0,w
  4507  0389  087A               	xorwf	(___aldiv@sign),f
  4508  038A  06A1               	goto	l1118
  4509  038B  2B8C               	line	21
  4510                           	
  4511                           l298:	
  4512  038C                     	line	22
  4513                           	
  4514                           l1118:	
  4515  038C                     	movlw	high highword(0)
  4516  038C  3000               	movwf	(___aldiv@quotient+3)
  4517  038D  00A5               	movlw	low highword(0)
  4518  038E  3000               	movwf	(___aldiv@quotient+2)
  4519  038F  00A4               	movlw	high(0)
  4520  0390  3000               	movwf	(___aldiv@quotient+1)
  4521  0391  00A3               	movlw	low(0)
  4522  0392  3000               	movwf	(___aldiv@quotient)
  4523  0393  00A2               
  4524                           	line	23
  4525                           	
  4526                           l1120:	
  4527  0394                     	movf	(___aldiv@divisor+3),w
  4528  0394  0875               	iorwf	(___aldiv@divisor+2),w
  4529  0395  0474               	iorwf	(___aldiv@divisor+1),w
  4530  0396  0473               	iorwf	(___aldiv@divisor),w
  4531  0397  0472               	skipnz
  4532  0398  1903               	goto	u831
  4533  0399  2B9B               	goto	u830
  4534  039A  2B9C               u831:
  4535  039B                     	goto	l1140
  4536  039B  2BE3               u830:
  4537  039C                     	line	24
  4538                           	
  4539                           l1122:	
  4540  039C                     	clrf	(___aldiv@counter)
  4541  039C  01A0               	incf	(___aldiv@counter),f
  4542  039D  0AA0               	line	25
  4543                           	goto	l1126
  4544  039E  2BAB               	
  4545                           l301:	
  4546  039F                     	line	26
  4547                           	
  4548                           l1124:	
  4549  039F                     	movlw	01h
  4550  039F  3001               u845:
  4551  03A0                     	lslf	(___aldiv@divisor),f
  4552  03A0  35F2               	rlf	(___aldiv@divisor+1),f
  4553  03A1  0DF3               	rlf	(___aldiv@divisor+2),f
  4554  03A2  0DF4               	rlf	(___aldiv@divisor+3),f
  4555  03A3  0DF5               	decfsz	wreg,f
  4556  03A4  0B89               	goto	u845
  4557  03A5  2BA0               	line	27
  4558                           	movlw	low(01h)
  4559  03A6  3001               	movwf	(??___aldiv+0)+0
  4560  03A7  00FA               	movf	(??___aldiv+0)+0,w
  4561  03A8  087A               	addwf	(___aldiv@counter),f
  4562  03A9  07A0               	goto	l1126
  4563  03AA  2BAB               	line	28
  4564                           	
  4565                           l300:	
  4566  03AB                     	line	25
  4567                           	
  4568                           l1126:	
  4569  03AB                     	btfss	(___aldiv@divisor+3),(31)&7
  4570  03AB  1FF5               	goto	u851
  4571  03AC  2BAE               	goto	u850
  4572  03AD  2BAF               u851:
  4573  03AE                     	goto	l1124
  4574  03AE  2B9F               u850:
  4575  03AF                     	goto	l1128
  4576  03AF  2BB1               	
  4577                           l302:	
  4578  03B0                     	goto	l1128
  4579  03B0  2BB1               	line	29
  4580                           	
  4581                           l303:	
  4582  03B1                     	line	30
  4583                           	
  4584                           l1128:	
  4585  03B1                     	movlw	01h
  4586  03B1  3001               u865:
  4587  03B2                     	lslf	(___aldiv@quotient),f
  4588  03B2  35A2               	rlf	(___aldiv@quotient+1),f
  4589  03B3  0DA3               	rlf	(___aldiv@quotient+2),f
  4590  03B4  0DA4               	rlf	(___aldiv@quotient+3),f
  4591  03B5  0DA5               	decfsz	wreg,f
  4592  03B6  0B89               	goto	u865
  4593  03B7  2BB2               	line	31
  4594                           	
  4595                           l1130:	
  4596  03B8                     	movf	(___aldiv@divisor+3),w
  4597  03B8  0875               	subwf	(___aldiv@dividend+3),w
  4598  03B9  0279               	skipz
  4599  03BA  1D03               	goto	u875
  4600  03BB  2BC6               	movf	(___aldiv@divisor+2),w
  4601  03BC  0874               	subwf	(___aldiv@dividend+2),w
  4602  03BD  0278               	skipz
  4603  03BE  1D03               	goto	u875
  4604  03BF  2BC6               	movf	(___aldiv@divisor+1),w
  4605  03C0  0873               	subwf	(___aldiv@dividend+1),w
  4606  03C1  0277               	skipz
  4607  03C2  1D03               	goto	u875
  4608  03C3  2BC6               	movf	(___aldiv@divisor),w
  4609  03C4  0872               	subwf	(___aldiv@dividend),w
  4610  03C5  0276               u875:
  4611  03C6                     	skipc
  4612  03C6  1C03               	goto	u871
  4613  03C7  2BC9               	goto	u870
  4614  03C8  2BCA               u871:
  4615  03C9                     	goto	l1136
  4616  03C9  2BD4               u870:
  4617  03CA                     	line	32
  4618                           	
  4619                           l1132:	
  4620  03CA                     	movf	(___aldiv@divisor),w
  4621  03CA  0872               	subwf	(___aldiv@dividend),f
  4622  03CB  02F6               	movf	(___aldiv@divisor+1),w
  4623  03CC  0873               	subwfb	(___aldiv@dividend+1),f
  4624  03CD  3BF7               	movf	(___aldiv@divisor+2),w
  4625  03CE  0874               	subwfb	(___aldiv@dividend+2),f
  4626  03CF  3BF8               	movf	(___aldiv@divisor+3),w
  4627  03D0  0875               	subwfb	(___aldiv@dividend+3),f
  4628  03D1  3BF9               	line	33
  4629                           	
  4630                           l1134:	
  4631  03D2                     	bsf	(___aldiv@quotient)+(0/8),(0)&7
  4632  03D2  1422               	goto	l1136
  4633  03D3  2BD4               	line	34
  4634                           	
  4635                           l304:	
  4636  03D4                     	line	35
  4637                           	
  4638                           l1136:	
  4639  03D4                     	movlw	01h
  4640  03D4  3001               u885:
  4641  03D5                     	lsrf	(___aldiv@divisor+3),f
  4642  03D5  36F5               	rrf	(___aldiv@divisor+2),f
  4643  03D6  0CF4               	rrf	(___aldiv@divisor+1),f
  4644  03D7  0CF3               	rrf	(___aldiv@divisor),f
  4645  03D8  0CF2               	decfsz	wreg,f
  4646  03D9  0B89               	goto	u885
  4647  03DA  2BD5               
  4648                           	line	36
  4649                           	
  4650                           l1138:	
  4651  03DB                     	movlw	01h
  4652  03DB  3001               	subwf	(___aldiv@counter),f
  4653  03DC  02A0               	btfss	status,2
  4654  03DD  1D03               	goto	u891
  4655  03DE  2BE0               	goto	u890
  4656  03DF  2BE1               u891:
  4657  03E0                     	goto	l1128
  4658  03E0  2BB1               u890:
  4659  03E1                     	goto	l1140
  4660  03E1  2BE3               	
  4661                           l305:	
  4662  03E2                     	goto	l1140
  4663  03E2  2BE3               	line	37
  4664                           	
  4665                           l299:	
  4666  03E3                     	line	38
  4667                           	
  4668                           l1140:	
  4669  03E3                     	movf	((___aldiv@sign)),w
  4670  03E3  0821               	btfsc	status,2
  4671  03E4  1903               	goto	u901
  4672  03E5  2BE7               	goto	u900
  4673  03E6  2BE8               u901:
  4674  03E7                     	goto	l1144
  4675  03E7  2BF4               u900:
  4676  03E8                     	line	39
  4677                           	
  4678                           l1142:	
  4679  03E8                     	comf	(___aldiv@quotient),f
  4680  03E8  09A2               	comf	(___aldiv@quotient+1),f
  4681  03E9  09A3               	comf	(___aldiv@quotient+2),f
  4682  03EA  09A4               	comf	(___aldiv@quotient+3),f
  4683  03EB  09A5               	incf	(___aldiv@quotient),f
  4684  03EC  0AA2               	skipnz
  4685  03ED  1903               	incf	(___aldiv@quotient+1),f
  4686  03EE  0AA3               	skipnz
  4687  03EF  1903               	incf	(___aldiv@quotient+2),f
  4688  03F0  0AA4               	skipnz
  4689  03F1  1903               	incf	(___aldiv@quotient+3),f
  4690  03F2  0AA5               	goto	l1144
  4691  03F3  2BF4               	
  4692                           l306:	
  4693  03F4                     	line	40
  4694                           	
  4695                           l1144:	
  4696  03F4                     	movf	(___aldiv@quotient+3),w
  4697  03F4  0825               	movwf	(?___aldiv+3)
  4698  03F5  00F5               	movf	(___aldiv@quotient+2),w
  4699  03F6  0824               	movwf	(?___aldiv+2)
  4700  03F7  00F4               	movf	(___aldiv@quotient+1),w
  4701  03F8  0823               	movwf	(?___aldiv+1)
  4702  03F9  00F3               	movf	(___aldiv@quotient),w
  4703  03FA  0822               	movwf	(?___aldiv)
  4704  03FB  00F2               
  4705                           	goto	l307
  4706  03FC  2BFD               	
  4707                           l1146:	
  4708  03FD                     	line	41
  4709                           	
  4710                           l307:	
  4711  03FD                     	return
  4712  03FD  0008               	opt stack 0
  4713                           GLOBAL	__end_of___aldiv
  4714                           	__end_of___aldiv:
  4715  03FE                     	signat	___aldiv,8316
  4716                           	global	_calculatePartialPeriods
  4717                           
  4718 ;; *************** function _calculatePartialPeriods *****************
  4719 ;; Defined at:
  4720 ;;		line 70 in file "PTSymmetryController.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  pendulum        2    5[BANK0 ] PTR volatile struct Pend
  4723 ;;		 -> drivingPendulum(47), dampeningPendulum(47), 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  i               1   35[BANK0 ] unsigned char 
  4726 ;;  total2          4   23[BANK0 ] unsigned long 
  4727 ;;  total1          4   19[BANK0 ] unsigned long 
  4728 ;;  avg2            2   33[BANK0 ] unsigned short 
  4729 ;;  avg1            2   31[BANK0 ] unsigned short 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4739 ;;      Params:         0       2       0       0
  4740 ;;      Locals:         0      17       0       0
  4741 ;;      Temps:          0      12       0       0
  4742 ;;      Totals:         0      31       0       0
  4743 ;;Total ram usage:       31 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    2
  4746 ;; This function calls:
  4747 ;;		___lldiv
  4748 ;; This function is called by:
  4749 ;;		_main
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4753                           	file	"PTSymmetryController.c"
  4754                           	line	70
  4755                           global __ptext13
  4756                           __ptext13:	;psect for function _calculatePartialPeriods
  4757  018D                     psect	text13
  4758                           	file	"PTSymmetryController.c"
  4759                           	line	70
  4760                           	global	__size_of_calculatePartialPeriods
  4761                           	__size_of_calculatePartialPeriods	equ	__end_of_calculatePartialPeriods-_calculatePartia
                                 lPeriods
  4762  0103                     	
  4763                           _calculatePartialPeriods:	
  4764  018D                     ;incstack = 0
  4765                           	opt	stack 13
  4766                           ; Regs used in _calculatePartialPeriods: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4767                           	line	71
  4768                           	
  4769                           l1390:	
  4770  018D                     ;PTSymmetryController.c: 71:     unsigned long total1 = 0;
  4771                           	movlw	high highword(0)
  4772  018D  3000               	movlb 0	; select bank0
  4773  018E  0020               	movwf	(calculatePartialPeriods@total1+3)
  4774  018F  00B6               	movlw	low highword(0)
  4775  0190  3000               	movwf	(calculatePartialPeriods@total1+2)
  4776  0191  00B5               	movlw	high(0)
  4777  0192  3000               	movwf	(calculatePartialPeriods@total1+1)
  4778  0193  00B4               	movlw	low(0)
  4779  0194  3000               	movwf	(calculatePartialPeriods@total1)
  4780  0195  00B3               
  4781                           	line	72
  4782                           ;PTSymmetryController.c: 72:     unsigned long total2 = 0;
  4783                           	movlw	high highword(0)
  4784  0196  3000               	movwf	(calculatePartialPeriods@total2+3)
  4785  0197  00BA               	movlw	low highword(0)
  4786  0198  3000               	movwf	(calculatePartialPeriods@total2+2)
  4787  0199  00B9               	movlw	high(0)
  4788  019A  3000               	movwf	(calculatePartialPeriods@total2+1)
  4789  019B  00B8               	movlw	low(0)
  4790  019C  3000               	movwf	(calculatePartialPeriods@total2)
  4791  019D  00B7               
  4792                           	line	73
  4793                           	
  4794                           l1392:	
  4795  019E                     ;PTSymmetryController.c: 73:     for (unsigned char i = 0; i < ((21 - 1) / 2); i = 2 * (
                                 i + 1)) {
  4796                           	clrf	(calculatePartialPeriods@i)
  4797  019E  01C3               	
  4798                           l1394:	
  4799  019F                     	movlw	low(0Ah)
  4800  019F  300A               	subwf	(calculatePartialPeriods@i),w
  4801  01A0  0243               	skipc
  4802  01A1  1C03               	goto	u1391
  4803  01A2  29A4               	goto	u1390
  4804  01A3  29A5               u1391:
  4805  01A4                     	goto	l1398
  4806  01A4  29A7               u1390:
  4807  01A5                     	goto	l1404
  4808  01A5  2A23               	
  4809                           l1396:	
  4810  01A6                     	goto	l1404
  4811  01A6  2A23               	
  4812                           l62:	
  4813  01A7                     	line	74
  4814                           	
  4815                           l1398:	
  4816  01A7                     ;PTSymmetryController.c: 74:         total1 += pendulum->photogateTimes[i + 1] - pendulu
                                 m->photogateTimes[i];
  4817                           	movf	(calculatePartialPeriods@i),w
  4818  01A7  0843               	movwf	(??_calculatePartialPeriods+0)+0
  4819  01A8  00A7               	clrf	(??_calculatePartialPeriods+0)+0+1
  4820  01A9  01A8               	lslf	(??_calculatePartialPeriods+0)+0,f
  4821  01AA  35A7               	rlf	(??_calculatePartialPeriods+0)+1,f
  4822  01AB  0DA8               	movf	0+(??_calculatePartialPeriods+0)+0,w
  4823  01AC  0827               	addlw	03h
  4824  01AD  3E03               	movwf	(??_calculatePartialPeriods+2)+0
  4825  01AE  00A9               	movlw	0
  4826  01AF  3000               	addwfc	1+(??_calculatePartialPeriods+0)+0,w
  4827  01B0  3D28               	movwf	1+(??_calculatePartialPeriods+2)+0
  4828  01B1  00AA               	movf	0+(??_calculatePartialPeriods+2)+0,w
  4829  01B2  0829               	addwf	(calculatePartialPeriods@pendulum),w
  4830  01B3  0725               	movwf	fsr1l
  4831  01B4  0086               	movf	1+(??_calculatePartialPeriods+2)+0,w
  4832  01B5  082A               	addwfc	(calculatePartialPeriods@pendulum+1),w
  4833  01B6  3D26               	movwf	1+fsr1l
  4834  01B7  0087               	movf	(calculatePartialPeriods@i),w
  4835  01B8  0843               	movwf	(??_calculatePartialPeriods+4)+0
  4836  01B9  00AB               	clrf	(??_calculatePartialPeriods+4)+0+1
  4837  01BA  01AC               	lslf	(??_calculatePartialPeriods+4)+0,f
  4838  01BB  35AB               	rlf	(??_calculatePartialPeriods+4)+1,f
  4839  01BC  0DAC               	movf	0+(??_calculatePartialPeriods+4)+0,w
  4840  01BD  082B               	addlw	01h
  4841  01BE  3E01               	movwf	(??_calculatePartialPeriods+6)+0
  4842  01BF  00AD               	movlw	0
  4843  01C0  3000               	addwfc	1+(??_calculatePartialPeriods+4)+0,w
  4844  01C1  3D2C               	movwf	1+(??_calculatePartialPeriods+6)+0
  4845  01C2  00AE               	movf	0+(??_calculatePartialPeriods+6)+0,w
  4846  01C3  082D               	addwf	(calculatePartialPeriods@pendulum),w
  4847  01C4  0725               	movwf	fsr0l
  4848  01C5  0084               	movf	1+(??_calculatePartialPeriods+6)+0,w
  4849  01C6  082E               	addwfc	(calculatePartialPeriods@pendulum+1),w
  4850  01C7  3D26               	movwf	1+fsr0l
  4851  01C8  0085               	moviw	[0]fsr0
  4852  01C9  3F00               	movwf	(??_calculatePartialPeriods+8)+0
  4853  01CA  00AF               	moviw	[1]fsr0
  4854  01CB  3F01               	movwf	(??_calculatePartialPeriods+8)+0+1
  4855  01CC  00B0               	comf	(??_calculatePartialPeriods+8)+0,f
  4856  01CD  09AF               	comf	(??_calculatePartialPeriods+8)+1,f
  4857  01CE  09B0               	incf	(??_calculatePartialPeriods+8)+0,f
  4858  01CF  0AAF               	skipnz
  4859  01D0  1903               	incf	(??_calculatePartialPeriods+8)+1,f
  4860  01D1  0AB0               	moviw	[0]fsr1
  4861  01D2  3F40               	addwf	0+(??_calculatePartialPeriods+8)+0,w
  4862  01D3  072F               	movwf	(??_calculatePartialPeriods+10)+0
  4863  01D4  00B1               	moviw	[1]fsr1
  4864  01D5  3F41               	addwfc	1+(??_calculatePartialPeriods+8)+0,w
  4865  01D6  3D30               	movwf	(??_calculatePartialPeriods+10)+0+1
  4866  01D7  00B2               	movf	0+(??_calculatePartialPeriods+10)+0,w
  4867  01D8  0831               	addwf	(calculatePartialPeriods@total1),f
  4868  01D9  07B3               	movf	1+(??_calculatePartialPeriods+10)+0,w
  4869  01DA  0832               	addwfc	(calculatePartialPeriods@total1+1),f
  4870  01DB  3DB4               	movlw	0
  4871  01DC  3000               	addwfc	(calculatePartialPeriods@total1+2),f
  4872  01DD  3DB5               	addwfc	(calculatePartialPeriods@total1+3),f
  4873  01DE  3DB6               	line	75
  4874                           ;PTSymmetryController.c: 75:         total2 += pendulum->photogateTimes[i + 2] - pendulu
                                 m->photogateTimes[i + 1];
  4875                           	movf	(calculatePartialPeriods@i),w
  4876  01DF  0843               	movwf	(??_calculatePartialPeriods+0)+0
  4877  01E0  00A7               	clrf	(??_calculatePartialPeriods+0)+0+1
  4878  01E1  01A8               	lslf	(??_calculatePartialPeriods+0)+0,f
  4879  01E2  35A7               	rlf	(??_calculatePartialPeriods+0)+1,f
  4880  01E3  0DA8               	movf	0+(??_calculatePartialPeriods+0)+0,w
  4881  01E4  0827               	addlw	05h
  4882  01E5  3E05               	movwf	(??_calculatePartialPeriods+2)+0
  4883  01E6  00A9               	movlw	0
  4884  01E7  3000               	addwfc	1+(??_calculatePartialPeriods+0)+0,w
  4885  01E8  3D28               	movwf	1+(??_calculatePartialPeriods+2)+0
  4886  01E9  00AA               	movf	0+(??_calculatePartialPeriods+2)+0,w
  4887  01EA  0829               	addwf	(calculatePartialPeriods@pendulum),w
  4888  01EB  0725               	movwf	fsr1l
  4889  01EC  0086               	movf	1+(??_calculatePartialPeriods+2)+0,w
  4890  01ED  082A               	addwfc	(calculatePartialPeriods@pendulum+1),w
  4891  01EE  3D26               	movwf	1+fsr1l
  4892  01EF  0087               	movf	(calculatePartialPeriods@i),w
  4893  01F0  0843               	movwf	(??_calculatePartialPeriods+4)+0
  4894  01F1  00AB               	clrf	(??_calculatePartialPeriods+4)+0+1
  4895  01F2  01AC               	lslf	(??_calculatePartialPeriods+4)+0,f
  4896  01F3  35AB               	rlf	(??_calculatePartialPeriods+4)+1,f
  4897  01F4  0DAC               	movf	0+(??_calculatePartialPeriods+4)+0,w
  4898  01F5  082B               	addlw	03h
  4899  01F6  3E03               	movwf	(??_calculatePartialPeriods+6)+0
  4900  01F7  00AD               	movlw	0
  4901  01F8  3000               	addwfc	1+(??_calculatePartialPeriods+4)+0,w
  4902  01F9  3D2C               	movwf	1+(??_calculatePartialPeriods+6)+0
  4903  01FA  00AE               	movf	0+(??_calculatePartialPeriods+6)+0,w
  4904  01FB  082D               	addwf	(calculatePartialPeriods@pendulum),w
  4905  01FC  0725               	movwf	fsr0l
  4906  01FD  0084               	movf	1+(??_calculatePartialPeriods+6)+0,w
  4907  01FE  082E               	addwfc	(calculatePartialPeriods@pendulum+1),w
  4908  01FF  3D26               	movwf	1+fsr0l
  4909  0200  0085               	moviw	[0]fsr0
  4910  0201  3F00               	movwf	(??_calculatePartialPeriods+8)+0
  4911  0202  00AF               	moviw	[1]fsr0
  4912  0203  3F01               	movwf	(??_calculatePartialPeriods+8)+0+1
  4913  0204  00B0               	comf	(??_calculatePartialPeriods+8)+0,f
  4914  0205  09AF               	comf	(??_calculatePartialPeriods+8)+1,f
  4915  0206  09B0               	incf	(??_calculatePartialPeriods+8)+0,f
  4916  0207  0AAF               	skipnz
  4917  0208  1903               	incf	(??_calculatePartialPeriods+8)+1,f
  4918  0209  0AB0               	moviw	[0]fsr1
  4919  020A  3F40               	addwf	0+(??_calculatePartialPeriods+8)+0,w
  4920  020B  072F               	movwf	(??_calculatePartialPeriods+10)+0
  4921  020C  00B1               	moviw	[1]fsr1
  4922  020D  3F41               	addwfc	1+(??_calculatePartialPeriods+8)+0,w
  4923  020E  3D30               	movwf	(??_calculatePartialPeriods+10)+0+1
  4924  020F  00B2               	movf	0+(??_calculatePartialPeriods+10)+0,w
  4925  0210  0831               	addwf	(calculatePartialPeriods@total2),f
  4926  0211  07B7               	movf	1+(??_calculatePartialPeriods+10)+0,w
  4927  0212  0832               	addwfc	(calculatePartialPeriods@total2+1),f
  4928  0213  3DB8               	movlw	0
  4929  0214  3000               	addwfc	(calculatePartialPeriods@total2+2),f
  4930  0215  3DB9               	addwfc	(calculatePartialPeriods@total2+3),f
  4931  0216  3DBA               	line	76
  4932                           	
  4933                           l1400:	
  4934  0217                     ;PTSymmetryController.c: 76:     }
  4935                           	lslf	(calculatePartialPeriods@i),w
  4936  0217  3543               	addlw	02h
  4937  0218  3E02               	movwf	(??_calculatePartialPeriods+0)+0
  4938  0219  00A7               	movf	(??_calculatePartialPeriods+0)+0,w
  4939  021A  0827               	movwf	(calculatePartialPeriods@i)
  4940  021B  00C3               	
  4941                           l1402:	
  4942  021C                     	movlw	low(0Ah)
  4943  021C  300A               	subwf	(calculatePartialPeriods@i),w
  4944  021D  0243               	skipc
  4945  021E  1C03               	goto	u1401
  4946  021F  2A21               	goto	u1400
  4947  0220  2A22               u1401:
  4948  0221                     	goto	l1398
  4949  0221  29A7               u1400:
  4950  0222                     	goto	l1404
  4951  0222  2A23               	
  4952                           l63:	
  4953  0223                     	line	77
  4954                           	
  4955                           l1404:	
  4956  0223                     ;PTSymmetryController.c: 77:     unsigned short avg1 = total1 / ((21 - 1) / 2);
  4957                           	movlw	0
  4958  0223  3000               	movwf	(___lldiv@divisor+3)
  4959  0224  00F5               	movlw	0
  4960  0225  3000               	movwf	(___lldiv@divisor+2)
  4961  0226  00F4               	movlw	0
  4962  0227  3000               	movwf	(___lldiv@divisor+1)
  4963  0228  00F3               	movlw	0Ah
  4964  0229  300A               	movwf	(___lldiv@divisor)
  4965  022A  00F2               
  4966                           	movf	(calculatePartialPeriods@total1+3),w
  4967  022B  0836               	movwf	(___lldiv@dividend+3)
  4968  022C  00F9               	movf	(calculatePartialPeriods@total1+2),w
  4969  022D  0835               	movwf	(___lldiv@dividend+2)
  4970  022E  00F8               	movf	(calculatePartialPeriods@total1+1),w
  4971  022F  0834               	movwf	(___lldiv@dividend+1)
  4972  0230  00F7               	movf	(calculatePartialPeriods@total1),w
  4973  0231  0833               	movwf	(___lldiv@dividend)
  4974  0232  00F6               
  4975                           	fcall	___lldiv
  4976  0233  3184  24EC  3181   	movf	(1+(?___lldiv)),w
  4977  0236  0873               	movlb 0	; select bank0
  4978  0237  0020               	movwf	(calculatePartialPeriods@avg1+1)
  4979  0238  00C0               	movf	(0+(?___lldiv)),w
  4980  0239  0872               	movwf	(calculatePartialPeriods@avg1)
  4981  023A  00BF               	line	78
  4982                           ;PTSymmetryController.c: 78:     unsigned short avg2 = total2 / ((21 - 1) / 2);
  4983                           	movlw	0
  4984  023B  3000               	movwf	(___lldiv@divisor+3)
  4985  023C  00F5               	movlw	0
  4986  023D  3000               	movwf	(___lldiv@divisor+2)
  4987  023E  00F4               	movlw	0
  4988  023F  3000               	movwf	(___lldiv@divisor+1)
  4989  0240  00F3               	movlw	0Ah
  4990  0241  300A               	movwf	(___lldiv@divisor)
  4991  0242  00F2               
  4992                           	movf	(calculatePartialPeriods@total2+3),w
  4993  0243  083A               	movwf	(___lldiv@dividend+3)
  4994  0244  00F9               	movf	(calculatePartialPeriods@total2+2),w
  4995  0245  0839               	movwf	(___lldiv@dividend+2)
  4996  0246  00F8               	movf	(calculatePartialPeriods@total2+1),w
  4997  0247  0838               	movwf	(___lldiv@dividend+1)
  4998  0248  00F7               	movf	(calculatePartialPeriods@total2),w
  4999  0249  0837               	movwf	(___lldiv@dividend)
  5000  024A  00F6               
  5001                           	fcall	___lldiv
  5002  024B  3184  24EC  3181   	movf	(1+(?___lldiv)),w
  5003  024E  0873               	movlb 0	; select bank0
  5004  024F  0020               	movwf	(calculatePartialPeriods@avg2+1)
  5005  0250  00C2               	movf	(0+(?___lldiv)),w
  5006  0251  0872               	movwf	(calculatePartialPeriods@avg2)
  5007  0252  00C1               	line	79
  5008                           	
  5009                           l1406:	
  5010  0253                     ;PTSymmetryController.c: 79:     pendulum->shorterPartialPeriod = avg2 > avg1 ? avg1 : a
                                 vg2;
  5011                           	movf	(calculatePartialPeriods@avg2+1),w
  5012  0253  0842               	subwf	(calculatePartialPeriods@avg1+1),w
  5013  0254  0240               	skipz
  5014  0255  1D03               	goto	u1415
  5015  0256  2A59               	movf	(calculatePartialPeriods@avg2),w
  5016  0257  0841               	subwf	(calculatePartialPeriods@avg1),w
  5017  0258  023F               u1415:
  5018  0259                     	skipc
  5019  0259  1C03               	goto	u1411
  5020  025A  2A5C               	goto	u1410
  5021  025B  2A5D               u1411:
  5022  025C                     	goto	l1410
  5023  025C  2A62               u1410:
  5024  025D                     	
  5025                           l1408:	
  5026  025D                     	movf	(calculatePartialPeriods@avg2+1),w
  5027  025D  0842               	movwf	(_calculatePartialPeriods$85+1)
  5028  025E  00BC               	movf	(calculatePartialPeriods@avg2),w
  5029  025F  0841               	movwf	(_calculatePartialPeriods$85)
  5030  0260  00BB               	goto	l1412
  5031  0261  2A67               	
  5032                           l65:	
  5033  0262                     	
  5034                           l1410:	
  5035  0262                     	movf	(calculatePartialPeriods@avg1+1),w
  5036  0262  0840               	movwf	(_calculatePartialPeriods$85+1)
  5037  0263  00BC               	movf	(calculatePartialPeriods@avg1),w
  5038  0264  083F               	movwf	(_calculatePartialPeriods$85)
  5039  0265  00BB               	goto	l1412
  5040  0266  2A67               	
  5041                           l67:	
  5042  0267                     	
  5043                           l1412:	
  5044  0267                     	movf	(calculatePartialPeriods@pendulum),w
  5045  0267  0825               	addlw	02Bh
  5046  0268  3E2B               	movwf	fsr1l
  5047  0269  0086               	movlw	0
  5048  026A  3000               	addwfc	(calculatePartialPeriods@pendulum+1),w
  5049  026B  3D26               	movwf	1+fsr1l
  5050  026C  0087               	movf	(_calculatePartialPeriods$85),w
  5051  026D  083B               	movwi	[0]fsr1
  5052  026E  3FC0               	movf	(_calculatePartialPeriods$85+1),w
  5053  026F  083C               	movwi	[1]fsr1
  5054  0270  3FC1               	line	80
  5055                           	
  5056                           l1414:	
  5057  0271                     ;PTSymmetryController.c: 80:     pendulum->longerPartialPeriod = avg1 > avg2 ? avg1 : av
                                 g2;
  5058                           	movf	(calculatePartialPeriods@avg1+1),w
  5059  0271  0840               	subwf	(calculatePartialPeriods@avg2+1),w
  5060  0272  0242               	skipz
  5061  0273  1D03               	goto	u1425
  5062  0274  2A77               	movf	(calculatePartialPeriods@avg1),w
  5063  0275  083F               	subwf	(calculatePartialPeriods@avg2),w
  5064  0276  0241               u1425:
  5065  0277                     	skipc
  5066  0277  1C03               	goto	u1421
  5067  0278  2A7A               	goto	u1420
  5068  0279  2A7B               u1421:
  5069  027A                     	goto	l1418
  5070  027A  2A80               u1420:
  5071  027B                     	
  5072                           l1416:	
  5073  027B                     	movf	(calculatePartialPeriods@avg2+1),w
  5074  027B  0842               	movwf	(_calculatePartialPeriods$86+1)
  5075  027C  00BE               	movf	(calculatePartialPeriods@avg2),w
  5076  027D  0841               	movwf	(_calculatePartialPeriods$86)
  5077  027E  00BD               	goto	l1420
  5078  027F  2A85               	
  5079                           l69:	
  5080  0280                     	
  5081                           l1418:	
  5082  0280                     	movf	(calculatePartialPeriods@avg1+1),w
  5083  0280  0840               	movwf	(_calculatePartialPeriods$86+1)
  5084  0281  00BE               	movf	(calculatePartialPeriods@avg1),w
  5085  0282  083F               	movwf	(_calculatePartialPeriods$86)
  5086  0283  00BD               	goto	l1420
  5087  0284  2A85               	
  5088                           l71:	
  5089  0285                     	
  5090                           l1420:	
  5091  0285                     	movf	(calculatePartialPeriods@pendulum),w
  5092  0285  0825               	addlw	02Dh
  5093  0286  3E2D               	movwf	fsr1l
  5094  0287  0086               	movlw	0
  5095  0288  3000               	addwfc	(calculatePartialPeriods@pendulum+1),w
  5096  0289  3D26               	movwf	1+fsr1l
  5097  028A  0087               	movf	(_calculatePartialPeriods$86),w
  5098  028B  083D               	movwi	[0]fsr1
  5099  028C  3FC0               	movf	(_calculatePartialPeriods$86+1),w
  5100  028D  083E               	movwi	[1]fsr1
  5101  028E  3FC1               	line	81
  5102                           	
  5103                           l72:	
  5104  028F                     	return
  5105  028F  0008               	opt stack 0
  5106                           GLOBAL	__end_of_calculatePartialPeriods
  5107                           	__end_of_calculatePartialPeriods:
  5108  0290                     	signat	_calculatePartialPeriods,4217
  5109                           	global	___lldiv
  5110                           
  5111 ;; *************** function ___lldiv *****************
  5112 ;; Defined at:
  5113 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  divisor         4    2[COMMON] unsigned long 
  5116 ;;  dividend        4    6[COMMON] unsigned long 
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  quotient        4    0[BANK0 ] unsigned long 
  5119 ;;  counter         1    4[BANK0 ] unsigned char 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  4    2[COMMON] unsigned long 
  5122 ;; Registers used:
  5123 ;;		wreg, status,2, status,0
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5129 ;;      Params:         8       0       0       0
  5130 ;;      Locals:         0       5       0       0
  5131 ;;      Temps:          1       0       0       0
  5132 ;;      Totals:         9       5       0       0
  5133 ;;Total ram usage:       14 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    1
  5136 ;; This function calls:
  5137 ;;		Nothing
  5138 ;; This function is called by:
  5139 ;;		_calculatePartialPeriods
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  5143                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  5144                           	line	5
  5145                           global __ptext14
  5146                           __ptext14:	;psect for function ___lldiv
  5147  04EC                     psect	text14
  5148                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  5149                           	line	5
  5150                           	global	__size_of___lldiv
  5151                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  5152  0062                     	
  5153                           ___lldiv:	
  5154  04EC                     ;incstack = 0
  5155                           	opt	stack 13
  5156                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5157                           	line	13
  5158                           	
  5159                           l1294:	
  5160  04EC                     	movlw	high highword(0)
  5161  04EC  3000               	movlb 0	; select bank0
  5162  04ED  0020               	movwf	(___lldiv@quotient+3)
  5163  04EE  00A3               	movlw	low highword(0)
  5164  04EF  3000               	movwf	(___lldiv@quotient+2)
  5165  04F0  00A2               	movlw	high(0)
  5166  04F1  3000               	movwf	(___lldiv@quotient+1)
  5167  04F2  00A1               	movlw	low(0)
  5168  04F3  3000               	movwf	(___lldiv@quotient)
  5169  04F4  00A0               
  5170                           	line	14
  5171                           	movf	(___lldiv@divisor+3),w
  5172  04F5  0875               	iorwf	(___lldiv@divisor+2),w
  5173  04F6  0474               	iorwf	(___lldiv@divisor+1),w
  5174  04F7  0473               	iorwf	(___lldiv@divisor),w
  5175  04F8  0472               	skipnz
  5176  04F9  1903               	goto	u1201
  5177  04FA  2CFC               	goto	u1200
  5178  04FB  2CFD               u1201:
  5179  04FC                     	goto	l1314
  5180  04FC  2D44               u1200:
  5181  04FD                     	line	15
  5182                           	
  5183                           l1296:	
  5184  04FD                     	clrf	(___lldiv@counter)
  5185  04FD  01A4               	incf	(___lldiv@counter),f
  5186  04FE  0AA4               	line	16
  5187                           	goto	l1300
  5188  04FF  2D0C               	
  5189                           l263:	
  5190  0500                     	line	17
  5191                           	
  5192                           l1298:	
  5193  0500                     	movlw	01h
  5194  0500  3001               u1215:
  5195  0501                     	lslf	(___lldiv@divisor),f
  5196  0501  35F2               	rlf	(___lldiv@divisor+1),f
  5197  0502  0DF3               	rlf	(___lldiv@divisor+2),f
  5198  0503  0DF4               	rlf	(___lldiv@divisor+3),f
  5199  0504  0DF5               	decfsz	wreg,f
  5200  0505  0B89               	goto	u1215
  5201  0506  2D01               	line	18
  5202                           	movlw	low(01h)
  5203  0507  3001               	movwf	(??___lldiv+0)+0
  5204  0508  00FA               	movf	(??___lldiv+0)+0,w
  5205  0509  087A               	addwf	(___lldiv@counter),f
  5206  050A  07A4               	goto	l1300
  5207  050B  2D0C               	line	19
  5208                           	
  5209                           l262:	
  5210  050C                     	line	16
  5211                           	
  5212                           l1300:	
  5213  050C                     	btfss	(___lldiv@divisor+3),(31)&7
  5214  050C  1FF5               	goto	u1221
  5215  050D  2D0F               	goto	u1220
  5216  050E  2D10               u1221:
  5217  050F                     	goto	l1298
  5218  050F  2D00               u1220:
  5219  0510                     	goto	l1302
  5220  0510  2D12               	
  5221                           l264:	
  5222  0511                     	goto	l1302
  5223  0511  2D12               	line	20
  5224                           	
  5225                           l265:	
  5226  0512                     	line	21
  5227                           	
  5228                           l1302:	
  5229  0512                     	movlw	01h
  5230  0512  3001               u1235:
  5231  0513                     	lslf	(___lldiv@quotient),f
  5232  0513  35A0               	rlf	(___lldiv@quotient+1),f
  5233  0514  0DA1               	rlf	(___lldiv@quotient+2),f
  5234  0515  0DA2               	rlf	(___lldiv@quotient+3),f
  5235  0516  0DA3               	decfsz	wreg,f
  5236  0517  0B89               	goto	u1235
  5237  0518  2D13               	line	22
  5238                           	
  5239                           l1304:	
  5240  0519                     	movf	(___lldiv@divisor+3),w
  5241  0519  0875               	subwf	(___lldiv@dividend+3),w
  5242  051A  0279               	skipz
  5243  051B  1D03               	goto	u1245
  5244  051C  2D27               	movf	(___lldiv@divisor+2),w
  5245  051D  0874               	subwf	(___lldiv@dividend+2),w
  5246  051E  0278               	skipz
  5247  051F  1D03               	goto	u1245
  5248  0520  2D27               	movf	(___lldiv@divisor+1),w
  5249  0521  0873               	subwf	(___lldiv@dividend+1),w
  5250  0522  0277               	skipz
  5251  0523  1D03               	goto	u1245
  5252  0524  2D27               	movf	(___lldiv@divisor),w
  5253  0525  0872               	subwf	(___lldiv@dividend),w
  5254  0526  0276               u1245:
  5255  0527                     	skipc
  5256  0527  1C03               	goto	u1241
  5257  0528  2D2A               	goto	u1240
  5258  0529  2D2B               u1241:
  5259  052A                     	goto	l1310
  5260  052A  2D35               u1240:
  5261  052B                     	line	23
  5262                           	
  5263                           l1306:	
  5264  052B                     	movf	(___lldiv@divisor),w
  5265  052B  0872               	subwf	(___lldiv@dividend),f
  5266  052C  02F6               	movf	(___lldiv@divisor+1),w
  5267  052D  0873               	subwfb	(___lldiv@dividend+1),f
  5268  052E  3BF7               	movf	(___lldiv@divisor+2),w
  5269  052F  0874               	subwfb	(___lldiv@dividend+2),f
  5270  0530  3BF8               	movf	(___lldiv@divisor+3),w
  5271  0531  0875               	subwfb	(___lldiv@dividend+3),f
  5272  0532  3BF9               	line	24
  5273                           	
  5274                           l1308:	
  5275  0533                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  5276  0533  1420               	goto	l1310
  5277  0534  2D35               	line	25
  5278                           	
  5279                           l266:	
  5280  0535                     	line	26
  5281                           	
  5282                           l1310:	
  5283  0535                     	movlw	01h
  5284  0535  3001               u1255:
  5285  0536                     	lsrf	(___lldiv@divisor+3),f
  5286  0536  36F5               	rrf	(___lldiv@divisor+2),f
  5287  0537  0CF4               	rrf	(___lldiv@divisor+1),f
  5288  0538  0CF3               	rrf	(___lldiv@divisor),f
  5289  0539  0CF2               	decfsz	wreg,f
  5290  053A  0B89               	goto	u1255
  5291  053B  2D36               
  5292                           	line	27
  5293                           	
  5294                           l1312:	
  5295  053C                     	movlw	01h
  5296  053C  3001               	subwf	(___lldiv@counter),f
  5297  053D  02A4               	btfss	status,2
  5298  053E  1D03               	goto	u1261
  5299  053F  2D41               	goto	u1260
  5300  0540  2D42               u1261:
  5301  0541                     	goto	l1302
  5302  0541  2D12               u1260:
  5303  0542                     	goto	l1314
  5304  0542  2D44               	
  5305                           l267:	
  5306  0543                     	goto	l1314
  5307  0543  2D44               	line	28
  5308                           	
  5309                           l261:	
  5310  0544                     	line	29
  5311                           	
  5312                           l1314:	
  5313  0544                     	movf	(___lldiv@quotient+3),w
  5314  0544  0823               	movwf	(?___lldiv+3)
  5315  0545  00F5               	movf	(___lldiv@quotient+2),w
  5316  0546  0822               	movwf	(?___lldiv+2)
  5317  0547  00F4               	movf	(___lldiv@quotient+1),w
  5318  0548  0821               	movwf	(?___lldiv+1)
  5319  0549  00F3               	movf	(___lldiv@quotient),w
  5320  054A  0820               	movwf	(?___lldiv)
  5321  054B  00F2               
  5322                           	goto	l268
  5323  054C  2D4D               	
  5324                           l1316:	
  5325  054D                     	line	30
  5326                           	
  5327                           l268:	
  5328  054D                     	return
  5329  054D  0008               	opt stack 0
  5330                           GLOBAL	__end_of___lldiv
  5331                           	__end_of___lldiv:
  5332  054E                     	signat	___lldiv,8316
  5333                           	global	_isr
  5334                           
  5335 ;; *************** function _isr *****************
  5336 ;; Defined at:
  5337 ;;		line 21 in file "PTSymmetryController.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;		None
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;		None
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  1    wreg      void 
  5344 ;; Registers used:
  5345 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5351 ;;      Params:         0       0       0       0
  5352 ;;      Locals:         0       0       0       0
  5353 ;;      Temps:          2       0       0       0
  5354 ;;      Totals:         2       0       0       0
  5355 ;;Total ram usage:        2 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; This function calls:
  5358 ;;		Nothing
  5359 ;; This function is called by:
  5360 ;;		Interrupt level 1
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           psect	intentry,class=CODE,delta=2
  5364                           global __pintentry
  5365                           __pintentry:
  5366  0004                     psect	intentry
  5367                           	file	"PTSymmetryController.c"
  5368                           	line	21
  5369                           	global	__size_of_isr
  5370                           	__size_of_isr	equ	__end_of_isr-_isr
  5371  0044                     	
  5372                           _isr:	
  5373  0004                     ;incstack = 0
  5374                           	opt	stack 7
  5375                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  5376  0004  147E               ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  5377                           psect	intentry
  5378                           	pagesel	$
  5379  0005  3180               	line	22
  5380                           	
  5381                           i1l1356:	
  5382  0006                     ;PTSymmetryController.c: 22:     if (RC1) {
  5383                           	movlb 0	; select bank0
  5384  0006  0020               	btfss	(113/8),(113)&7	;volatile
  5385  0007  1C8E               	goto	u131_21
  5386  0008  280A               	goto	u131_20
  5387  0009  280B               u131_21:
  5388  000A                     	goto	i1l31
  5389  000A  2826               u131_20:
  5390  000B                     	line	23
  5391                           	
  5392                           i1l1358:	
  5393  000B                     ;PTSymmetryController.c: 23:         if (dampeningPendulum.timeCounts < 21)
  5394                           	movlw	low(015h)
  5395  000B  3015               	movlb 1	; select bank1
  5396  000C  0021               	subwf	(_dampeningPendulum)^080h,w	;volatile
  5397  000D  0220               	skipnc
  5398  000E  1803               	goto	u132_21
  5399  000F  2811               	goto	u132_20
  5400  0010  2812               u132_21:
  5401  0011                     	goto	i1l38
  5402  0011  2846               u132_20:
  5403  0012                     	line	24
  5404                           	
  5405                           i1l1360:	
  5406  0012                     ;PTSymmetryController.c: 24:             dampeningPendulum.photogateTimes[dampeningPendu
                                 lum.timeCounts++] = TMR0;
  5407                           	movlb 0	; select bank0
  5408  0012  0020               	movf	(21),w	;volatile
  5409  0013  0815               	movwf	(??_isr+0)+0
  5410  0014  00F0               	clrf	(??_isr+0)+0+1
  5411  0015  01F1               	movlb 1	; select bank1
  5412  0016  0021               	lslf	(_dampeningPendulum)^080h,w	;volatile
  5413  0017  3520               	addlw	low(_dampeningPendulum|((0x0)<<8)+01h)&0ffh
  5414  0018  3EA1               	movwf	fsr1l
  5415  0019  0086               	clrf fsr1h	
  5416  001A  0187               	
  5417                           	movf	(??_isr+0)+0,w
  5418  001B  0870               	movwi	[0]fsr1
  5419  001C  3FC0               	movf	(??_isr+0)+1,w
  5420  001D  0871               	movwi	[1]fsr1
  5421  001E  3FC1               	
  5422                           i1l1362:	
  5423  001F                     	movlw	low(01h)
  5424  001F  3001               	movwf	(??_isr+0)+0
  5425  0020  00F0               	movf	(??_isr+0)+0,w
  5426  0021  0870               	addwf	(_dampeningPendulum)^080h,f	;volatile
  5427  0022  07A0               	goto	i1l38
  5428  0023  2846               	line	25
  5429                           ;PTSymmetryController.c: 25:         else
  5430                           	
  5431                           i1l32:	
  5432  0024                     	goto	i1l38
  5433  0024  2846               	line	26
  5434                           	
  5435                           i1l33:	
  5436  0025                     	line	27
  5437                           ;PTSymmetryController.c: 27:     } else if (RC2) {
  5438                           	goto	i1l38
  5439  0025  2846               	
  5440                           i1l31:	
  5441  0026                     	btfss	(114/8),(114)&7	;volatile
  5442  0026  1D0E               	goto	u133_21
  5443  0027  2829               	goto	u133_20
  5444  0028  282A               u133_21:
  5445  0029                     	goto	i1l38
  5446  0029  2846               u133_20:
  5447  002A                     	line	28
  5448                           	
  5449                           i1l1364:	
  5450  002A                     ;PTSymmetryController.c: 28:         if (drivingPendulum.timeCounts < 21)
  5451                           	movlw	low(015h)
  5452  002A  3015               	movlb 2	; select bank2
  5453  002B  0022               	subwf	(_drivingPendulum)^0100h,w	;volatile
  5454  002C  0220               	skipnc
  5455  002D  1803               	goto	u134_21
  5456  002E  2830               	goto	u134_20
  5457  002F  2831               u134_21:
  5458  0030                     	goto	i1l38
  5459  0030  2846               u134_20:
  5460  0031                     	line	29
  5461                           	
  5462                           i1l1366:	
  5463  0031                     ;PTSymmetryController.c: 29:             dampeningPendulum.photogateTimes[drivingPendulu
                                 m.timeCounts++] = TMR2;
  5464                           	movlb 0	; select bank0
  5465  0031  0020               	movf	(29),w	;volatile
  5466  0032  081D               	movwf	(??_isr+0)+0
  5467  0033  00F0               	clrf	(??_isr+0)+0+1
  5468  0034  01F1               	movlb 2	; select bank2
  5469  0035  0022               	lslf	(_drivingPendulum)^0100h,w	;volatile
  5470  0036  3520               	addlw	low(_dampeningPendulum|((0x0)<<8)+01h)&0ffh
  5471  0037  3EA1               	movwf	fsr1l
  5472  0038  0086               	clrf fsr1h	
  5473  0039  0187               	
  5474                           	movf	(??_isr+0)+0,w
  5475  003A  0870               	movwi	[0]fsr1
  5476  003B  3FC0               	movf	(??_isr+0)+1,w
  5477  003C  0871               	movwi	[1]fsr1
  5478  003D  3FC1               	
  5479                           i1l1368:	
  5480  003E                     	movlw	low(01h)
  5481  003E  3001               	movwf	(??_isr+0)+0
  5482  003F  00F0               	movf	(??_isr+0)+0,w
  5483  0040  0870               	addwf	(_drivingPendulum)^0100h,f	;volatile
  5484  0041  07A0               	goto	i1l38
  5485  0042  2846               	line	30
  5486                           ;PTSymmetryController.c: 30:         else
  5487                           	
  5488                           i1l36:	
  5489  0043                     	goto	i1l38
  5490  0043  2846               	line	31
  5491                           	
  5492                           i1l37:	
  5493  0044                     	goto	i1l38
  5494  0044  2846               	line	32
  5495                           ;PTSymmetryController.c: 32:     }
  5496                           	
  5497                           i1l35:	
  5498  0045                     	goto	i1l38
  5499  0045  2846               	
  5500                           i1l34:	
  5501  0046                     	line	33
  5502                           	
  5503                           i1l38:	
  5504  0046                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  5505  0046  107E               	retfie
  5506  0047  0009               	opt stack 0
  5507                           GLOBAL	__end_of_isr
  5508                           	__end_of_isr:
  5509  0048                     	signat	_isr,89
  5510                           global	___latbits
  5511                           ___latbits	equ	0
  5512  0000                     	global	btemp
  5513                           	btemp set 07Eh
  5514  007E                     
  5515                           	DABS	1,126,2	;btemp
  5516                           	global	int$flags
  5517                           	int$flags	set btemp
  5518  007E                     	global	wtemp0
  5519                           	wtemp0 set btemp+0
  5520  007E                     	end


Data Sizes:
    Strings     77
    Constant    0
    Data        0
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     68      76
    BANK1            80      0      79
    BANK2            80      0      47

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_3(CODE[11]), STR_2(CODE[42]), STR_1(CODE[24]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S564_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_3(CODE[11]), STR_2(CODE[42]), STR_1(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 42
		 -> STR_3(CODE[11]), STR_2(CODE[42]), STR_1(CODE[24]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    calculatePartialPeriods@pendulum	PTR volatile struct Pendulum size(2) Largest target is 47
		 -> drivingPendulum(BANK2[47]), dampeningPendulum(BANK1[47]), 


Critical Paths under _main in COMMON

    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___almod
    _calculatePartialPeriods->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _abs->___almod
    _calculatePartialPeriods->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7313
                                             66 BANK0      2     2      0
            _calculatePartialPeriods
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6    5956
                                             56 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5674
                                             48 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           32    30      2    5346
                                             36 BANK0     12    10      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                21    17      4    4045
                                             15 BANK0     21    17      4
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2422
                                             11 COMMON     1     1      0
                                              7 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               8     6      2     123
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1083
                                             10 COMMON     1     0      1
                                              0 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     768
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              2 BANK0      4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___almod                                             11     3      8     448
                                              2 COMMON     9     1      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             15     7      8     452
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _calculatePartialPeriods                             31    29      2    1357
                                              5 BANK0     31    29      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calculatePartialPeriods
     ___lldiv
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aldiv
           ___almod
           _abs
             ___almod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      D6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     44      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      2F      10       58.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      D6      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Nov 11 17:27:31 2018

                      __CFG_CP$ON 0000           _calculatePartialPeriods 018D                                l50 04C4  
                              l43 04B0                                l52 04D4                                l44 04B0  
                              l53 04D5                                l45 04B5                                l62 01A7  
                              l54 04E6                                l46 04B7                                l71 0285  
                              l63 0223                                l55 04E6                                l47 04B7  
                              l72 028F                                l56 04E7                                l48 04BB  
                              l65 0262                                l57 04E8                                l49 04C5  
                              l58 04E9                                l67 0267                                l59 04EB  
                              l69 0280                       __CFG_CPD$ON 0000                       __CFG_LVP$ON 0000  
                             l200 0117                               l201 00C8                               l211 016B  
                             l203 014F                               l300 03AB                               l220 02D6  
                             l301 039F                               l213 0170                               l205 014E  
                             l221 0364                               l302 03B0                               l310 0411  
                             l214 018C                               l206 0150                               l222 0331  
                             l303 03B1                               l311 0421                               l207 0179  
                             l304 03D4                               l320 0482                               l312 0468  
                             l305 03E2                               l313 0438                               l209 015C  
                             l217 033D                               l225 0606                               l306 03F4  
                             l314 042C                               l218 0306                               l226 05F4  
                             l307 03FD                               l315 043D                               l227 0610  
                             l316 043E                               l228 0615                               l261 0544  
                             l317 0459                               l181 0567                               l262 050C  
                             l318 0467                               l263 0500                               l319 0479  
                             l183 0569                               l191 008B                               l264 0511  
                             l184 057E                               l192 0093                               l265 0512  
                             l185 056C                               l266 0535                               l186 058C  
                             l194 00A6                               l267 0543                               l187 0599  
                             l179 055D                               l268 054D                               l700 06F1  
                             l188 05A6                               l196 00AB                               l197 00BE  
                             l703 0675                               l199 00BA                               l704 0670  
                             l297 0378                               l705 067E                               l298 038C  
                             l706 0692                               l299 03E3                               l670 06AF  
                             l681 05DF                               l682 05EA                               l690 0669  
                             l667 06AE                               l675 05B7                               l669 06AF  
                             l677 05B2                               l678 05E9                               l679 05E8  
                             l687 0659                               l688 0645                               l689 0669  
                             l697 06DF                               _RA4 0064                               _RC1 0071  
                             _RA5 0065                               _RC2 0072                               u700 05AC  
                             u701 05AB                               u710 05B1                               u711 05B0  
                             u800 06A1                               u720 05C1                               u801 06A0  
                             u721 05C0                               u810 036B                               u730 05DE  
                             u811 036A                               u731 05DD                               u900 03E8  
                             u820 037C                               u740 0668                               u901 03E7  
                             u821 037B                               u805 069D                               u741 0667  
                             u830 039C                               u910 0404                               u750 067D  
                             u831 039B                               u911 0403                               u735 05DA  
                             u751 067C                               u920 0415                               u760 0554  
                             u921 0414                               u761 0553                               u850 03AF  
                             u930 0429                               u770 0562                               u851 03AE  
                             u931 0428                               u771 0561                               u780 058C  
                             u845 03A0                               u781 058B                               u870 03CA  
                             u950 043C                               u790 0591                               u871 03C9  
                             u951 043B                               u791 0590                               u960 0450  
                             u865 03B2                               u961 044F                               u945 042D  
                             u785 0588                               u890 03E1                               u891 03E0  
                             u875 03C6                               u980 0466                               u885 03D5  
                             u981 0465                               u965 044C                               u990 046D  
                             u991 046C                               u975 045A                               _abs 0693  
                             _pad 054E                               _isr 0004                               wreg 0009  
                            l1100 0591                              l1110 0367                              l1102 05A6  
                            l1120 0394                              l1112 036B                              l1104 0693  
                            l1200 00C8                              l1130 03B8                              l1122 039C  
                            l1114 037C                              l1106 06A1                              l1202 00CD  
                            l1210 0117                              ?_abs 0022                              l1300 050C  
                            l1132 03CA                              l1124 039F                              l1140 03E3  
                            l1116 0387                              l1108 0365                              l1060 05C1  
                            l1052 05A7                              l1212 0124                              l1220 0150  
                            l1204 00F2                              l1310 0535                              l1302 0512  
                            l1142 03E8                              l1134 03D2                              l1126 03AB  
                            l1118 038C                              l1150 0400                              l1062 05DF  
                            l1054 05AC                              l1070 0653                              l1230 016B  
                            l1222 0157                              l1214 012D                              l1206 00F6  
                            l1312 053C                              l1304 0519                              l1400 0217  
                            l1144 03F4                              l1136 03D4                              l1128 03B1  
                            l1160 042C                              l1152 0404                              l1064 05EA  
                            l1056 05B2                              l1072 0659                              l1080 067E  
                            l1232 0170                              l1224 015C                              l1216 013A  
                            l1208 00FA                              l1240 02A3                              l1320 06CD  
                            l1306 052B                              l1314 0544                              l1410 0262  
                            l1402 021C                              l1146 03FD                              l1138 03DB  
                            l1170 0460                              l1162 0438                              l1154 0415  
                            l1058 05B7                              l1066 0642                              l1082 0692  
                            l1074 066B                              l1090 0562                              l1226 0160  
                            l1234 0179                              l1218 0148                              l1250 02D6  
                            l1242 02AB                              l1322 06DF                              l1316 054D  
                            l1308 0533                              l1420 0285                              l1412 0267  
                            l1404 0223                              l1164 043E                              l1172 0468  
                            l1156 0421                              l1148 03FE                              l1068 0645  
                            l1076 0670                              l1092 0567                              l1084 0550  
                            l1236 018C                              l1228 0166                              l1180 0066  
                            l1260 0317                              l1252 02DE                              l1244 02AF  
                            l1414 0271                              l1406 0253                              l1174 046D  
                            l1166 0450                              l1158 0429                              l1078 0675  
                            l1094 056C                              l1086 0554                              l1190 00A6  
                            l1182 007A                              l1270 0339                              l1262 031F  
                            l1254 02F3                              l1246 02B3                              l1238 0292  
                            l1318 06C8                              l1430 049A                              l1422 0483  
                            l1416 027B                              l1408 025D                              l1176 0479  
                            l1168 0459                              l1096 0578                              l1088 055D  
                            l1192 00AF                              l1184 0080                              l1280 0364  
                            l1272 033C                              l1264 032A                              l1256 0305  
                            l1248 02C4                              l1440 04E6                              l1432 04BC  
                            l1424 0485                              l1418 0280                              l1178 0482  
                            l1098 057E                              l1194 00B5                              l1186 008F  
                            l1266 0330                              l1258 0306                              l1274 033D  
                            l1290 0610                              l1282 05ED                              l1434 04C5  
                            l1426 048A                              l1196 00BA                              l1188 00A0  
                            l1276 0356                              l1268 0331                              l1292 0615  
                            l1284 05F1                              l1436 04CC                              l1428 048C  
                            l1294 04EC                              l1390 018D                              l1198 00C2  
                            l1278 035F                              l1286 05F4                              l1438 04D5  
                            l1296 04FD                              l1392 019E                              l1288 0606  
                            l1298 0500                              l1394 019F                              l1396 01A6  
                            l1398 01A7                              ?_pad 0027                              ?_isr 0070  
                            STR_1 06B0                              STR_2 0616                              STR_3 06E0  
                            u1000 0073                              u1001 0071                              u1010 0074  
                            u1100 0148                              u1020 0080                              u1101 0147  
                            u1021 007F                              u1110 014D                              u1030 008F  
                            u1111 014C                              u1031 008E                              u1200 04FD  
                            u1120 0157                              u1040 00A0                              u1201 04FC  
                            u1121 0156                              u1105 0144                              u1041 009F  
                            u1130 015B                              u1050 00B5                              u1131 015A  
                            u1051 00B4                              u1220 0510                              u1140 0166  
                            u1060 00B9                              u1221 050F                              u1141 0165  
                            u1061 00B8                              u1045 009C                              u1070 0124  
                            u1150 02A3                              u1215 0501                              u1071 0123  
                            u1151 02A2                              u1240 052B                              u1400 0222  
                            u1080 012D                              u1160 02C4                              u1241 052A  
                            u1401 0221                              u1081 012C                              u1161 02C3  
                            u1410 025D                              u1090 013A                              u1170 02D5  
                            u1235 0513                              u1411 025C                              u1091 0139  
                            u1075 0120                              u1171 02D4                              u1260 0542  
                            u1420 027B                              u1180 0317                              u1261 0541  
                            u1245 0527                              u1421 027A                              u1181 0316  
                            u1190 060F                              u1430 04B5                              u1255 0536  
                            u1415 0259                              u1095 0136                              u1191 060E  
                            u1431 04B4                              u1440 04BB                              u1425 0277  
                            u1441 04BA                              u1450 04CC                              u1451 04CB  
                            u1460 04D3                              u1461 04D2                              u1390 01A5  
                            u1391 01A4                              u1477 04A0                              i1l31 0026  
                            i1l32 0024                              i1l33 0025                              i1l34 0046  
                            i1l35 0045                              i1l36 0043                              i1l37 0044  
                            i1l38 0046                              _TMR0 0015                              _TMR2 001D  
                    __CFG_WRT$ALL 0000                              abs@a 0022                              _dbuf 00CF  
                            _main 0483                              _dtoa 0064                              _prec 0068  
                            _nout 0064                              pad@i 002A                              pad@p 0028  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              fsr1l 0006  
                            pad@w 002C                              btemp 007E                     __CFG_BOREN$ON 0000  
                            start 0048                     __CFG_MCLRE$ON 0000                             ??_abs 0024  
                           ??_pad 007B                             ??_isr 0070                   __end_of___aldiv 03FE  
                 __end_of___almod 0483                             ?_main 0070                             ?_dtoa 002F  
                   __CFG_WDTE$OFF 0000                   __end_of___lldiv 054E                    __CFG_DEBUG$OFF 0000  
                    vfpfcnvrt@fmt 0044                             _TRISA 008C                             _TRISC 008E  
                   __CFG_PWRTE$ON 0000                    __CFG_FCMEN$OFF 0000                             _flags 006A  
                           _fputc 05A7                             _fputs 0640                             pad@fp 002E  
                           _width 0066                             _putch 06F1                             dtoa@d 002F  
                           dtoa@i 0042                             dtoa@n 003E                             dtoa@p 0037  
                           dtoa@s 003C                             dtoa@w 003A                    __CFG_BORV$HIGH 0000  
                           status 0003                             wtemp0 007E                    __CFG_CSWEN$OFF 0000  
                 __initialization 0049         ??_calculatePartialPeriods 0027                      __end_of_main 04EC  
                    __end_of_dtoa 018D                            ??_main 0062                            ??_dtoa 0033  
   calculatePartialPeriods@total1 0033     calculatePartialPeriods@total2 0037          calculatePartialPeriods@i 0043  
                          ?_fputc 0072                            ?_fputs 007A                            ?_putch 0070  
                          i1l1360 0012                            i1l1362 001F                            i1l1364 002A  
                          i1l1356 0006                            i1l1366 0031                            i1l1358 000B  
                          i1l1368 003E                            u131_20 000B                            u131_21 000A  
                          u132_20 0012                            u132_21 0011                            u133_20 002A  
                          u133_21 0029                            u134_20 0031                            u134_21 0030  
                    vfprintf@cfmt 0056                         ??___aldiv 007A                         ??___almod 007A  
                  __CFG_STVREN$ON 0000                         ??___lldiv 007A                            _printf 06C8  
                          pad@buf 0027                            dtoa@fp 0039                            _strlen 066A  
                          fputc@c 0072                            fputs@c 0023                            fputs@i 0024  
                          fputs@s 0026   __end_of_calculatePartialPeriods 0290                            putch@c 0070  
                __end_of_vfprintf 0616           __end_of__initialization 0061                   __CFG_FEXTOSC$HS 0000  
                  __pcstackCOMMON 0070                     __end_of_fputc 05EB                     __end_of_fputs 066A  
                   __end_of_putch 06F2                           ??_fputc 0075                           ??_fputs 0020  
                         ??_putch 0072                        __pbssBANK0 0064                        __pbssBANK1 00A0  
                      __pbssBANK2 0120                        __pmaintext 0483                   __CFG_PPS1WAY$ON 0000  
                      __pintentry 0004                           ?_printf 0058               __CFG_RSTOSC$HFINT32 0000  
                         ?_strlen 0072                __size_of_vfpfcnvrt 00D5                           ___aldiv 0365  
                         ___almod 03FE                           ___lldiv 04EC                         ?_vfprintf 0050  
                         __ptext1 06C8                           __ptext2 05EB                           __ptext3 0290  
                         __ptext4 0064                           __ptext5 054E                           __ptext6 066A  
                         __ptext7 0640                           __ptext8 05A7                           __ptext9 06F1  
                 __size_of_printf 0018                   __size_of_strlen 0029                      __size_of_abs 001D  
                    __size_of_pad 0059                      __size_of_isr 0044                  ___aldiv@dividend 0076  
                         clrloop0 06EC              end_of_initialization 0061                           fputc@fp 0074  
                         fputs@fp 007A                   ___lldiv@divisor 0072                   ___lldiv@counter 0024  
               __end_of_vfpfcnvrt 0365                  ___aldiv@quotient 0022                        ??_vfprintf 0053  
                         strlen@a 0078                           strlen@s 0079                 _dampeningPendulum 00A0  
        ?_calculatePartialPeriods 0025                       vfpfcnvrt@ap 0045                       vfpfcnvrt@fp 004F  
                     vfpfcnvrt@ll 004B                    __end_of_printf 06E0                    __end_of_strlen 0693  
             start_initialization 0049                       __end_of_abs 06B0                       __end_of_pad 05A7  
                     __end_of_isr 0048                  __CFG_LPBOREN$OFF 0000                       vfprintf@fmt 0050  
                        ??_printf 005E                          ??_strlen 0074                   _drivingPendulum 0120  
                       ___latbits 0000                     __pcstackBANK0 0020   calculatePartialPeriods@pendulum 0025  
                        ?___aldiv 0072                          ?___almod 0072                          ?___lldiv 0072  
                ___almod@dividend 0076                 __size_of_vfprintf 002B                    __size_of_fputc 0044  
                  __size_of_fputs 002A                    __size_of_putch 0001                   ___aldiv@divisor 0072  
                 ___aldiv@counter 0020                         clear_ram0 06EB                         _vfpfcnvrt 0290  
                      vfprintf@ap 0052                        vfprintf@fp 0055                  __size_of___aldiv 0099  
                __size_of___almod 0085                  __size_of___lldiv 0062                        ?_vfpfcnvrt 0044  
__size_of_calculatePartialPeriods 0103                          _dtoa$270 0035                          __ptext10 0693  
                        __ptext11 03FE                          __ptext12 0365                          __ptext13 018D  
                        __ptext14 04EC                   ___almod@divisor 0072                   ___almod@counter 0020  
      _calculatePartialPeriods$85 003B        _calculatePartialPeriods$86 003D                     __size_of_main 0069  
                   __size_of_dtoa 0129                          int$flags 007E                          _vfprintf 05EB  
                       printf@fmt 0058                         printf@ret 005F       calculatePartialPeriods@avg1 003F  
     calculatePartialPeriods@avg2 0041                          intlevel1 0000                  ___lldiv@dividend 0076  
                        printf@ap 0061                       ??_vfpfcnvrt 0046                     __pstringtext1 0616  
                   __pstringtext2 06B0                     __pstringtext3 06E0                     __pstringtext4 0000  
                ___lldiv@quotient 0020                      ___aldiv@sign 0021                      ___almod@sign 0021  
